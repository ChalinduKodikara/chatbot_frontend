{"version":3,"sources":["components/Navbar.js","components/SideNav/SideBarData.js","components/SideNav/SideNav.js","components/Footer/BottomFooter.elements.js","globalStyles.js","components/Footer/BottomFooter.js","components/Footer/Footer.elements.js","components/Footer/Footer.js","components/SignIn/validateInfo.js","components/SignIn/useForm.js","components/SignIn/FormLogIn.js","components/SignIn/LogIn.js","pages/SignIn/index.js","components/SignUp/validateInfo.js","components/SignUp/useForm.js","components/SignUp/FormSignup.js","components/SignUp/FormSuccess.js","components/SignUp/Register.js","pages/SignUp/index.js","components/Sections/Footer.js","components/Chatbot-Telecommunication/EducationMain.js","pages/Telecommunication/indexHome.js","components/Chatbot-Healthcare/EducationMain.js","pages/Healthcare/indexHome.js","components/Chatbot-Transport/EducationMain.js","pages/Transportation/indexHome.js","components/Sections/Header.js","pages/Landing/index.js","pages/DomainSelection/index.js","components/Profile/ProfileImage.js","components/Profile/Password.js","components/Profile/Mid.js","components/Profile/UserProfile.js","pages/Profile/index.js","pages/Healthcare/Components/botAvatar.jsx","pages/Healthcare/Components/botIcon.jsx","pages/Healthcare/Components/Doctors/doctors.jsx","pages/Healthcare/Components/Calender/calender.jsx","pages/Healthcare/Components/Corona/local.jsx","pages/Healthcare/Components/Corona/localToday.jsx","pages/Healthcare/Components/Corona/global.jsx","pages/Healthcare/Components/Rating/rating.jsx","pages/Healthcare/Chatbot/config.js","pages/Healthcare/Chatbot/messageParser.js","pages/Healthcare/Chatbot/actionProvider.js","pages/Healthcare/index.js","pages/Transportation/Components/botAvatar.jsx","pages/Transportation/Components/botIcon.jsx","pages/Transportation/Chatbot/config.js","pages/Transportation/Chatbot/messageParser.js","pages/Transportation/Chatbot/actionProvider.js","pages/Transportation/index.js","pages/Telecommunication/Components/botAvatar.jsx","pages/Telecommunication/Components/botIcon.jsx","pages/Telecommunication/Components/Options/Options.jsx","pages/Telecommunication/Components/GeneralOptions/GeneralOptions.jsx","pages/Telecommunication/Components/InternetProvider/InternetProvider.js","pages/Telecommunication/Components/PackageDetails/PackageDetails.js","pages/Telecommunication/Components/PackageTypes/PackageTypes.js","pages/Telecommunication/Components/Packagez/Packages.jsx","pages/Telecommunication/Components/Balance/Balance.js","pages/Telecommunication/Components/ActivatedPackages/ActivatedPackages.js","pages/Telecommunication/Components/Calendar/Calendar.js","pages/Telecommunication/Components/LKRValue/LKRValue.js","pages/Telecommunication/Components/CurrencyValues/CurrencyValues.js","pages/Telecommunication/Components/CryptoPrice/CryptoPrice.js","pages/Telecommunication/Components/CryptoPriceLKR/CryptoPriceLKR.js","pages/Telecommunication/Chatbot/config.js","pages/Telecommunication/Chatbot/messageParser.js","pages/Telecommunication/Chatbot/actionProvider.js","pages/Telecommunication/index.js","components/Admin/Sidebar2.js","components/Admin/Ratings.js","pages/Admin/rating.js","components/Admin/Sidebar1.js","components/Admin/Overview.js","pages/Admin/index.js","components/AboutUs/WeAre.jsx","components/AboutUs/ContactUs.js","pages/AboutUs/index.js","App.js","store/slices/userSlice.js","store/store.js","index.js"],"names":["Navbar","props","useHistory","MenuItems","children","mt","base","md","mr","display","colorScheme","variant","color","colorMode","React","useState","show","setShow","useColorMode","toggleColorMode","as","align","justify","wrap","pt","bg","position","top","width","zIndex","href","ml","src","alt","h","w","bgGradient","bgClip","fontSize","fontWeight","icon","Hamburger","onClick","alignItems","flexGrow","pl","ReactRouterLink","to","Auth","userID","size","Moon","Sun","isLoggedIn","type","border","console","log","localStorage","removeItem","Axios","get","then","response","b","SideNav","FooterContainer","createGlobalStyle","styled","div","button","primary","big","fontBig","SocialMedia","section","SocialMediaWrap","SocialLogo","Link","WebsiteRights","FaMagento","small","SocialIcons","SocialIconLink","a","BottomFooter","botName","target","rel","FooterSubscription","FooterSubHeading","p","FooterSubText","FooterLinksContainer","form","input","FooterLinksWrapper","FooterLinkItems","FooterLinkTitle","h2","FooterLink","Footer","validateInfo","values","errors","email","test","password","length","useForm","callback","validate","setSignInClicked","setValues","setErrors","isSubmitting","setIsSubmitting","backEndErrors","setBackEndErrors","useEffect","Object","keys","handleChange","e","name","value","handleSubmit","preventDefault","JSON","stringify","post","data","auth","setItem","access_token","user","msg","FormLogIn","submitForm","className","onSubmit","noValidate","borderRadius","m","placeholder","onChange","LogIn","isSubmitted","setIsSubmitted","SignIn","firstname","trim","lastname","Number","phonenumber","toLowerCase","toUpperCase","password2","registered","error","firstName","lastName","phoneNumber","simType","FormSignup","FormSuccess","rightIcon","ArrowForward","Register","SignUp","bgImage","marginTop","spacing","justifyContent","textAlign","opacity","lineHeight","py","px","mb","EducationMain","autoPlay","loop","muted","_hover","Education","MenuItem","isLast","rest","sm","Header","minH","borderBottom","borderStyle","borderColor","borderWidth","boxSize","left","right","Landing","direction","maxW","xl","marginRight","marginLeft","Container","Card","DSelection","mx","pos","layout","padding","ProfileImage","profileImage","setProfileImage","changeImage","setChangeImage","selectImage","setSelectImage","id","files","imgpath","Password","changePassword","setChangePassword","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","misMatch","setMisMatch","show1","setShow1","show2","setShow2","show3","setShow3","user_id","parse","getItem","alert","catch","pr","psswrd","leftIcon","Mid","ChangeDetails","setChangeDetails","isPending","setIsPending","setEmail","setFirstName","setLastName","setPhoneNumber","params","first_name","last_name","phone_number","required","defaultValue","maxLength","minLength","UserProfile","Profile","useParams","BotAvatar","BotIcon","Doctors","doctors","map","doctor","boxShadow","specialty","hospital","contact","height","actionProvider","selectDoctor","indexOf","doctorID","CalenderObject","Date","isDisable","setDisable","Calendar","min","disabled","selectTime","local","date","covidLocalCurrent","totalCases","totalActiveCases","recoverCases","deathCases","margin","covidLocalToday","covidGlobalCurrent","newCases","newdeathCases","MyComponent","rating","setRating","rate","rateHandle","ratingValue","config","initialMessages","createChatBotMessage","widget","customComponents","header","backgroundColor","botAvatar","state","currentState","sympthoms","channel","widgets","widgetName","widgetFunc","mapStateToProps","customStyles","botMessageBox","userMessageBox","MessageParser","this","disease","num","message","siz","addDisease","predictHandler","findDoctor","sendFeedback","cha","time","channelDoctor","helloHandler","ActionProvider","setStateFunc","createClientMessage","setChatbotMessage","setState","messages","setChatbotState","s","dis","removeDisease","removeChannel","diseaseHandler","feedback","diseases","members","specialist","er","doc","getCovidData","docID","msg2","msg1","getFullYear","getMonth","getDate","chObject","update_date_time","local_total_cases","local_total_number_of_individuals_in_hospitals","local_recovered","local_deaths","local_new_cases","local_new_deaths","global_total_cases","global_new_cases","global_deaths","global_new_deaths","global_recovered","Chat","messageParser","from","mode","schedule","methods","schedules","fromHandler","messageHandler","addFrom","station","removeFrom","addTo","removeTo","addMode","removeMode","methodHandler","stationHandler","wrds","split","v","countOccurrences","arr","val","reduce","i","splice","includes","Options","title","options","option","handler","GeneralOptions","provider","setProvider","sim_type","handleDataPackage","viewActivatedPackages","displayCalendarForPackages","handleComplaint","getCurrentBalance","viewCryptoCurrencyPrice","viewCryptoCurrencyPriceInLKR","viewLKRValue","viewCurrencyValues","handleProvider","PackageDetails","selectedPackage","packageDetails","activateDataPackage","orientation","fee","anytime_data","night_time_data","details","validity_period","PackageTypes","packageTypes","selectedPackageType","toggleDisplaySelector","packagess","setPackages","packageOptions","find","packg","item","package_type","selectPackageType","prevState","Packages","packageType","packages","getPackageInfo","current_balance","ActivatedPackages","result","activatedPackages","activatedPackage","activated_date","format","viewDataPackagesByDate","LKRValue","pricesLKR","rounded","LKR","CurrencyValues","pricesCurrency","AuD","IR","SD","Yuan","Yen","CryptoPrice","pricesCrypto","columns","bitcoin","objectFit","ethereum","bitcoinCash","litecoin","CryptoPriceLKR","prices","delay","package","subject","InternetProvider","Balance","lowercase","viewGeneralOptions","handleSubject","makeComplaint","packageName","res","message2","body","Null","month","parseInt","day","reply","Sidebar2","paddingTop","style","textTransform","isIndeterminate","divider","background","transitionDuration","Rating","chatbot_type","index","templateColumns","gap","Feature","text","iconBg","SplitWithImage","useColorModeValue","alignSelf","GiHealthNormal","GiSatelliteCommunication","MdDirectionsTransit","ContactUsForm","my","isRequired","_placeholder","AboutUs","App","setAuth","basename","path","exact","component","Admin","Telecommunication","Healthcare","Transport","ChatbotHC","ChatbotPT","ChatbotTC","DomaineSelection","LandingPage","userSlice","createSlice","initialState","reducers","login","action","payload","logout","actions","configureStore","reducer","userReducer","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e52d1ca0.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Button,\r\n  useColorMode,\r\n  IconButton,\r\n  ReactRouterLink,\r\n  Img,\r\n  Icon,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { HamburgerIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FiShoppingCart } from \"react-icons/fi\";\r\nimport Axios from \"axios\";\r\n\r\nfunction Navbar(props) {\r\n  var his = useHistory();\r\n  const MenuItems = ({ children }) => (\r\n    <Button\r\n      mt={{ base: 4, md: 0 }}\r\n      mr={6}\r\n      display=\"block\"\r\n      colorScheme=\"teal.500\"\r\n      variant=\"link\"\r\n      color={colorMode === \"light\" ? \"#1D2B36\" : \"cyan.100\"}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n\r\n  const [show, setShow] = React.useState(false);\r\n  const handleToggle = () => setShow(!show);\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  function handleLogOut() {\r\n    console.log(\"handle log out clicked\")\r\n    localStorage.removeItem('user')\r\n    localStorage.removeItem('access_token')\r\n    Axios.get(\"http://localhost:5000/logout\").then((response) => {\r\n      console.log(\"sadsadsdadds\")\r\n      \r\n      return <Redirect to='/' />\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      as=\"nav\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      pt=\"1.0rem\"\r\n      bg={colorMode === \"light\" ? \"#F2F5FF\" : \"#101522\"}\r\n      // DCE3FA\r\n      color=\"white\"\r\n      position=\"fixed\"\r\n      top=\"0\"\r\n      width=\"100%\"\r\n      zIndex=\"10000\"\r\n    >\r\n      <a href=\"http://localhost:3000/\">\r\n      <Flex align=\"center\" mr={10}>\r\n        <Img ml=\"1.5rem\" src=\"../logo2.png\" alt=\"logo\" h=\"80px\" w=\"80px\" />\r\n        <Text\r\n          bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\r\n          bgClip=\"text\"\r\n          fontSize=\"2xl\"\r\n          fontWeight=\"extrabold\"\r\n        >\r\n          XYRON\r\n        </Text>\r\n      </Flex>\r\n      </a>\r\n      <IconButton\r\n        display={{ base: \"block\", md: \"none\" }}\r\n        variant=\"outline\"\r\n        colorScheme=\"cyan\"\r\n        icon={<HamburgerIcon />}\r\n        onClick={handleToggle}\r\n        mr=\"20px\"\r\n      />\r\n\r\n      <Box\r\n        display={{ base: show ? \"block\" : \"none\", md: \"flex\" }}\r\n        width={{ base: \"full\", md: \"auto\" }}\r\n        alignItems=\"center\"\r\n        flexGrow={1}\r\n        pl=\"20px\"\r\n      >\r\n        <MenuItems>\r\n          <Link as={ReactRouterLink} to=\"/\">\r\n            Home\r\n          </Link>\r\n        </MenuItems>\r\n        <MenuItems>\r\n          {props.Auth.userID === 1 ? (\r\n            <Link as={ReactRouterLink} to=\"/adminDashboard\">\r\n              Dashboard\r\n            </Link>\r\n          ) : (\r\n            <Link as={ReactRouterLink} to=\"/customerdashboard\">\r\n              Dashboard\r\n            </Link>\r\n          )}\r\n        </MenuItems>\r\n        <MenuItems>\r\n          {props.Auth.userID === 1 ? (\r\n            <Link as={ReactRouterLink} to=\"/aboutus\">\r\n              About Us\r\n            </Link>\r\n          ) : (\r\n            <Link as={ReactRouterLink} to=\"/aboutus\">\r\n              About Us\r\n            </Link>\r\n          )}\r\n        </MenuItems>\r\n        <MenuItems>\r\n          <Link as={ReactRouterLink} to=\"/\">\r\n            {/* Help */}\r\n          </Link>\r\n        </MenuItems>\r\n      </Box>\r\n\r\n      <Box\r\n        display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\r\n        mt={{ base: 4, md: 0 }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"Call Segun\"\r\n          size=\"md\"\r\n          icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\r\n          mr={{ base: \"5px\", md: \"20px\" }}\r\n          variant=\"ghost\"\r\n          color={colorMode === \"light\" ? \"#1EB39A\" : \"cyan.100\"}\r\n          onClick={toggleColorMode}\r\n        />\r\n        <a href=\"/chatbot_frontend/signin\">\r\n          {props.Auth.isLoggedIn ? (\r\n            <Button\r\n              type=\"button\"\r\n              border=\"1px\"\r\n              variant=\"ghost\"\r\n              mr=\"1.5rem\"\r\n              color={colorMode === \"light\" ? \"#1EB39A\" : \"cyan.100\"}\r\n              onClick={handleLogOut}\r\n            >\r\n              Log Out\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              type=\"button\"\r\n              border=\"1px\"\r\n              variant=\"ghost\"\r\n              mr=\"1.5rem\"\r\n              color={colorMode === \"light\" ? \"#1EB39A\" : \"cyan.100\"}\r\n            >\r\n              Log In\r\n            </Button>\r\n          )}\r\n        </a>\r\n      </Box>\r\n\r\n      <Box\r\n        w=\"100%\"\r\n        h=\"5px\"\r\n        b=\"0px\"\r\n        mt=\"10px\"\r\n        bg={colorMode === \"light\" ? \"#1A365D\" : \"blue\"}\r\n      />\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n// import * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as CgIcons from \"react-icons/cg\";\r\n\r\nexport const SidebarData = [\r\n    {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome />,\r\n        cName: 'side-nav-text'\r\n    },\r\n    {\r\n        title: 'Profile',\r\n        path: '/profile',\r\n        icon: <CgIcons.CgProfile />,\r\n        cName: 'side-nav-text'\r\n    }\r\n]","import React, { useState } from \"react\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SidebarData } from \"./SideBarData\";\r\nimport './SideNav.css';\r\nimport { IconContext } from \"react-icons\";\r\n\r\nfunction SideNav() {\r\n\r\n    const [sidebar, setSidebar] = useState(false);\r\n    \r\n    const showSidebar = () => setSidebar(!sidebar);\r\n    \r\n    return(\r\n        <>\r\n        <IconContext.Provider value={{color: '#fff'}}>\r\n        <div className=\"sidenav\">\r\n            <Link to=\"#\" className='menu-bars'>\r\n                <FaIcons.FaBars onClick={showSidebar} />\r\n            </Link>\r\n        </div>\r\n        <nav className={sidebar ? \"side-nav-menu active\" : \"side-nav-menu\"}>\r\n            <ul className=\"side-nav-menu-items\" onClick={showSidebar}>\r\n                <li className=\"sidenavbar-toggle\">\r\n                    <Link to=\"#\" className=\"side-menu-bars\" Profile>\r\n                     <AiIcons.AiOutlineClose />\r\n                    </Link>\r\n                </li>\r\n                {SidebarData.map((item,  index) => {\r\n                    return (\r\n                        <li key={index} className={item.cName}>\r\n                            <Link to={item.path}>\r\n                                {item.icon}\r\n                                <span>{item.title}</span>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>\r\n        </IconContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SideNav;","import styled from 'styled-components';\r\nimport { FaMagento } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const FooterContainer = styled.div`\r\n  background-color: #1A365D;;\r\n  padding: 0rem 0 1rem 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SocialMedia = styled.section`\r\n  max-width: 1000px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const SocialMediaWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 90%;\r\n  max-width: 1000px;\r\n  margin: 40px auto 0 auto;\r\n\r\n  @media screen and (max-width: 820px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const SocialLogo = styled(Link)`\r\n  color: #fff;\r\n  justify-self: start;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  font-size: 2rem;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 6px;\r\n`;\r\n\r\nexport const SocialIcon = styled(FaMagento)`\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const WebsiteRights = styled.small`\r\n  color: #fff;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nexport const SocialIcons = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 240px;\r\n`;\r\n\r\nexport const SocialIconLink = styled.a`\r\n  color: #fff;\r\n  font-size: 24px;\r\n`;\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n } \r\n`;\r\n\r\nexport const Container = styled.div`\r\n  z-index: 1;\r\n  width: 100%;\r\n  max-width: 1300px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding-right: 50px;\r\n  padding-left: 50px;\r\n\r\n  @media screen and (max-width: 991px) {\r\n    padding-right: 30px;\r\n    padding-left: 30px;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  border-radius: 4px;\r\n  background: ${({ primary }) => (primary ? '#4B59F7' : '#0467FB')};\r\n  white-space: nowrap;\r\n  padding: ${({ big }) => (big ? '12px 64px' : '10px 20px')};\r\n  color: #fff;\r\n  font-size: ${({ fontBig }) => (fontBig ? '20px' : '16px')};\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    transition: all 0.3s ease-out;\r\n    background: #fff;\r\n    background-color: ${({ primary }) => (primary ? '#0467FB' : '#4B59F7')};\r\n  }\r\n\r\n  @media screen and (max-width: 960px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport { Button } from \"../../globalStyles\";\r\nimport {\r\n  FaFacebook,\r\n  FaInstagram,\r\n  FaYoutube,\r\n  FaTwitter,\r\n  FaLinkedin,\r\n  FaRobot,\r\n} from \"react-icons/fa\";\r\nimport {\r\n  FooterContainer,\r\n  SocialMedia,\r\n  SocialMediaWrap,\r\n  SocialLogo,\r\n  SocialIcon,\r\n  WebsiteRights,\r\n  SocialIcons,\r\n  SocialIconLink,\r\n} from \"./BottomFooter.elements\";\r\n\r\nfunction BottomFooter(props) {\r\n  return (\r\n    <FooterContainer>\r\n      <SocialMedia>\r\n        <SocialMediaWrap>\r\n          <SocialLogo to=\"/\">\r\n            <FaRobot/>\r\n            {props.botName}\r\n          </SocialLogo>\r\n          <WebsiteRights>Designed By University of Moratuwa | All Rights Resserved, © 2021</WebsiteRights>\r\n          <SocialIcons>\r\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Facebook\">\r\n              <FaFacebook />\r\n            </SocialIconLink>\r\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Instagram\">\r\n              <FaInstagram />\r\n            </SocialIconLink>\r\n            <SocialIconLink\r\n              href={\r\n                \"//www.youtube.com/\"\r\n              }\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              aria-label=\"Youtube\"\r\n            >\r\n              <FaYoutube />\r\n            </SocialIconLink>\r\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Twitter\">\r\n              <FaTwitter />\r\n            </SocialIconLink>\r\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"LinkedIn\">\r\n              <FaLinkedin />\r\n            </SocialIconLink>\r\n          </SocialIcons>\r\n        </SocialMediaWrap>\r\n      </SocialMedia>\r\n    </FooterContainer>\r\n  );\r\n}\r\n\r\nexport default BottomFooter;\r\n","import styled from 'styled-components';\r\nimport { FaMagento } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const FooterContainer = styled.div`\r\n  background-color: #F2F5FF;\r\n  padding: 4rem 0 2rem 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterSubscription = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  margin-bottom: 24px;\r\n  padding: 24px;\r\n  color: #fff;\r\n`;\r\n\r\nexport const FooterSubHeading = styled.p`\r\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande',\r\n    'Lucida Sans', Arial, sans-serif;\r\n  margin-bottom: 24px;\r\n  font-size: 24px;\r\n  color: black;\r\n`;\r\n\r\nexport const FooterSubText = styled.p`\r\n  margin-bottom: 24px;\r\n  font-size: 20px;\r\n  color: #1A365D;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 820px) {\r\n    flex-direction: column;\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  padding: 10px 20px;\r\n  border-radius: 2px;\r\n  margin-right: 10px;\r\n  outline: none;\r\n  border: none;\r\n  font-size: 16px;\r\n  border: 1px solid #fff;\r\n\r\n  &::placeholder {\r\n    color: #242424;\r\n  }\r\n\r\n  @media screen and (max-width: 820px) {\r\n    width: 100%;\r\n    margin: 0 0 16px 0;\r\n  }\r\n`;\r\n\r\nexport const FooterLinksContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  display: flex;\r\n  justify-content: center;\r\n  color: black;\r\n\r\n  @media screen and (max-width: 820px) {\r\n    padding-top: 32px;\r\n  }\r\n`;\r\n\r\nexport const FooterLinksWrapper = styled.div`\r\n  display: flex;\r\n\r\n  @media screen and (max-width: 820px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const FooterLinkItems = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin: 16px;\r\n  text-align: left;\r\n  width: 160px;\r\n  box-sizing: border-box;\r\n  color: #1A365D;\r\n\r\n  @media screen and (max-width: 420px) {\r\n    margin: 0;\r\n    padding: 10px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const FooterLinkTitle = styled.h2`\r\n  margin-bottom: 16px;\r\n  font-size: 20px;\r\n  color: #1A365D;\r\n`;\r\n\r\nexport const FooterLink = styled(Link)`\r\n  color: #fff;\r\n  text-decoration: none;\r\n  margin-bottom: 0.5rem;\r\n  color: #1A365D;\r\n  &:hover {\r\n    color: #0467fb;\r\n    transition: 0.3s ease-out;\r\n  }\r\n`;\r\n\r\n","import React from \"react\";\r\nimport { Button } from \"../../globalStyles\";\r\nimport {\r\n  FaFacebook,\r\n  FaInstagram,\r\n  FaYoutube,\r\n  FaTwitter,\r\n  FaLinkedin,\r\n} from \"react-icons/fa\";\r\nimport {\r\n  FooterContainer,\r\n  FooterSubscription,\r\n  FooterSubText,\r\n  FooterSubHeading,\r\n  Form,\r\n  FormInput,\r\n  FooterLinksContainer,\r\n  FooterLinksWrapper,\r\n  FooterLinkItems,\r\n  FooterLinkTitle,\r\n  FooterLink,\r\n} from \"./Footer.elements\";\r\nimport BottomFooter from \"./BottomFooter\";\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\nimport { Progress } from \"@chakra-ui/react\";\r\nfunction Footer() {\r\n  return (\r\n    <div>\r\n       \r\n      <FooterContainer>\r\n        <FooterSubscription>\r\n          <FooterSubHeading data-testid='heading-1'>\r\n            We will provide necessary informations that you want!!!\r\n          </FooterSubHeading>\r\n          <FooterSubText>24/7 Service and fast responses</FooterSubText>\r\n          \r\n        </FooterSubscription>\r\n        \r\n        <FooterLinksContainer>\r\n          \r\n          <FooterLinksWrapper>\r\n            <FooterLinkItems>\r\n              <FooterLinkTitle>About Us</FooterLinkTitle>\r\n              <FooterLink to=\"/sign-up\">How it works</FooterLink>\r\n              <FooterLink to=\"/\">Testimonials</FooterLink>\r\n              <FooterLink to=\"/\">Careers</FooterLink>\r\n              <FooterLink to=\"/\">Investors</FooterLink>\r\n              <FooterLink to=\"/\">Terms of Service</FooterLink>\r\n            </FooterLinkItems>\r\n            <FooterLinkItems>\r\n              <FooterLinkTitle>Contact Us</FooterLinkTitle>\r\n              <FooterLink to=\"/\">Contact</FooterLink>\r\n              <FooterLink to=\"/\">Support</FooterLink>\r\n              <FooterLink to=\"/\">Destinations</FooterLink>\r\n              <FooterLink to=\"/\">Sponsorships</FooterLink>\r\n            </FooterLinkItems>\r\n          </FooterLinksWrapper>\r\n          <FooterLinksWrapper>\r\n            <FooterLinkItems>\r\n              <FooterLinkTitle>Videos</FooterLinkTitle>\r\n              <FooterLink to=\"/\">Submit Video</FooterLink>\r\n              <FooterLink to=\"/\">Ambassadors</FooterLink>\r\n              <FooterLink to=\"/\">Agency</FooterLink>\r\n              <FooterLink to=\"/\">Influencer</FooterLink>\r\n            </FooterLinkItems>\r\n            <FooterLinkItems>\r\n              <FooterLinkTitle>Social Media</FooterLinkTitle>\r\n              <FooterLink to=\"/\">Instagram</FooterLink>\r\n              <FooterLink to=\"/\">Facebook</FooterLink>\r\n              <FooterLink to=\"/\">Youtube</FooterLink>\r\n              <FooterLink to=\"/\">Twitter</FooterLink>\r\n            </FooterLinkItems>\r\n          </FooterLinksWrapper>\r\n        </FooterLinksContainer>\r\n      </FooterContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","export default function validateInfo(values) {\r\n  let errors = {};\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Email required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = \"Email address is invalid\";\r\n  }\r\n\r\n  if (!values.password) {\r\n    errors.password = \"Password is required\";\r\n  } else if (values.password.length < 8) {\r\n    errors.password = \"Password needs to be 8 characters or more\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router\";\r\n//custom hook\r\n\r\nconst useForm = (callback, validate, setSignInClicked) => {\r\n  // Axios.defaults.withCredentials = true;\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [backEndErrors, setBackEndErrors] = useState(\"\");\r\n\r\n  const email = values.email;\r\n  const password = values.password;\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n    if (Object.keys(errors).length === 0 && Object.keys(JSON.stringify(validate(values))).length === 2) {\r\n      Axios.post(\"http://localhost:5000/login\", {\r\n        email: email,\r\n        password: password\r\n      }).then((response) => {\r\n        if (!response.data.auth) {\r\n          console.log(\"error\")\r\n          setBackEndErrors(response.data.msg);\r\n        } else {\r\n          localStorage.setItem(\"access_token\", response.data.access_token);\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n          setSignInClicked(true);\r\n          setIsSubmitting(true);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n     }\r\n  }, [errors]);\r\n\r\n  return { handleChange, handleSubmit, values, errors, backEndErrors };\r\n};\r\n\r\nexport default useForm;\r\n","import React, { useEffect } from \"react\";\r\nimport validate from \"./validateInfo\";\r\nimport useForm from \"./useForm\";\r\nimport \"./LogIn.css\";\r\n// Promise based HTTP client for the node.js\r\n//import Axios from \"axios\";\r\nimport { Badge, Box, Button, Center } from \"@chakra-ui/react\";\r\n\r\nfunction FormLogIn(props) {\r\n  const { handleChange, handleSubmit, values, errors, backEndErrors } = useForm(\r\n    props.submitForm,\r\n    validate,\r\n    props.setSignInClicked\r\n  );\r\n\r\n  return (\r\n    <div className=\"login-content-right\">\r\n      <form onSubmit={handleSubmit} className=\"form-signin\" noValidate>\r\n        <h1 color=\"black\"className=\"form-signin-h1\" >\r\n          <br />\r\n          Sign in to use our service!\r\n          <br />\r\n        </h1>\r\n        {backEndErrors == \"\" ? (\r\n          \"\"\r\n        ) : (\r\n          <Box w=\"80%\" h=\"40px\" bg=\"red.500\" borderRadius=\"5px\">\r\n            <Center>\r\n              <Badge variant=\"solid\" m=\"2%\" colorScheme=\"red\">\r\n                {backEndErrors}\r\n              </Badge>\r\n            </Center>\r\n          </Box>\r\n        )}\r\n        <div className=\"login-inputs\">\r\n          <label className=\"login-label\">Email</label>\r\n          <input\r\n            className=\"login-input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        <div className=\"login-inputs\">\r\n          <label className=\"login-label\">Password</label>\r\n          <input\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password && <p>{errors.password}</p>}\r\n        </div>\r\n        {backEndErrors == \"\" ? (\r\n          \"\"\r\n        ) : (\r\n          <Box h='10%' mt='20px'>\r\n            <Badge variant=\"outline\" colorScheme=\"red\">\r\n              Sign In Failed\r\n            </Badge>\r\n          </Box>\r\n        )}\r\n        <button className=\"login-input-btn\" type=\"submit\">\r\n          Continue\r\n        </button>\r\n        <span className=\"login-input-login\">\r\n          Don't have an account? Sign up <a href=\"signup\">here</a>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormLogIn;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./LogIn.css\";\r\nimport FormLogIn from \"./FormLogIn\";\r\nimport FormSuccess from \"./FormSuccess\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction LogIn(props) {\r\n\r\n  \r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  function submitForm() {\r\n    console.log(\"form submitted\")\r\n    setIsSubmitted(true);\r\n  }\r\n  return (\r\n    <>\r\n      {/**background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('../img/Midwife.jpg') !important;\r\n    background-size: cover !important; <Redirect to='/' />*/}\r\n      <div className=\"login-container\">\r\n        <div className=\"login-content-left\">\r\n          <img className=\"login-img\" src=\"imgs/sapiens login.png\" alt=\"Security\" />\r\n        </div>\r\n        {!isSubmitted ? (\r\n          <FormLogIn submitForm={submitForm} setSignInClicked={props.setSignInClicked}/>\r\n        ) : (\r\n          <Redirect to='/domain' />\r\n        )}\r\n        {/* <FormLogIn submitForm={submitForm} /> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","import React, { useEffect } from \"react\";\r\nimport BottomFooter from \"../../components/Footer/BottomFooter\";\r\nimport BottomItems from \"../../components/Footer/BottomItems\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport LogIn from \"../../components/SignIn/LogIn\";\r\n\r\nfunction SignIn(props) {\r\n  \r\n  return (\r\n    <>\r\n      <LogIn setSignInClicked={props.setSignInClicked}/>\r\n      <Footer />\r\n      <BottomFooter botName=\"XYRON\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","\r\nimport React, { useState } from \"react\";\r\nimport validator from 'validator'\r\n\r\nexport default function validateInfo(values) {\r\n  let errors = {};\r\n\r\n  if (!values.firstname.trim()) {\r\n    errors.firstname = \"First name required\";\r\n  } else if (!/^[A-Za-z]+/.test(values.firstname.trim())) {\r\n    errors.firstname = \"Enter a valid name\";\r\n  }\r\n\r\n  if (!values.lastname.trim()) {\r\n    errors.lastname = \"Last name required\";\r\n  } else if (!/^[A-Za-z]+/.test(values.lastname.trim())) {\r\n    errors.lastname = \"Enter a valid name\";\r\n  }\r\n\r\n  if (!Number(values.phonenumber)) {\r\n    errors.phonenumber = \"Phone number should be numeric\";\r\n  } else if (values.phonenumber.length < 10) {\r\n    errors.phonenumber = \"Phone number must consist of 10 digits\"\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Email required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = \"Email address is invalid\";\r\n  }\r\n\r\n  if (!values.password) {\r\n    errors.password = \"Password is required\";\r\n  } else if (values.password.length < 8) {\r\n    errors.password = \"Password needs to be 8 characters or more\";\r\n  } \r\n  else if (values.password.toLowerCase() === values.password) {\r\n    errors.password = \"Password must contain an uppercase letter\";\r\n  }\r\n  else if (values.password.toUpperCase() === values.password) {\r\n    errors.password = \"Password must contain a lowercase letter\";\r\n  }\r\n  // else if (/\\d/.test(values.password)) {\r\n  //   errors.password = \"Password must contain a number\";\r\n  // }\r\n  // else if (/[ `!@#$%^&*()_+\\-=\\]{};':\"\\\\|,.<>?~]/.test(values.password)) {\r\n  //   errors.password = \"Password must contain a special character  \";\r\n  // }\r\n\r\n  // ^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,10}$\r\n  if (!values.password2) {\r\n    errors.password2 = \"Confirmation password is required\";\r\n  } else if (values.password2 !== values.password) {\r\n    errors.password2 = \"Passwords do not match\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n//custom hook\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    phonenumber: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [backEndErrors, setBackEndErrors] = useState({registered: false, error: \"\"});\r\n  const firstName = values.firstname;\r\n  const lastName = values.lastname;\r\n  const email = values.email;\r\n  const phoneNumber = values.phonenumber;\r\n  const password = values.password;\r\n  const simType = \"\";\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n    console.log(JSON.stringify(validate(values)))\r\n    console.log(Object.keys(JSON.stringify(validate(values))).length)\r\n    setIsSubmitting(true);\r\n    if (Object.keys(errors).length === 0 && Object.keys(JSON.stringify(validate(values))).length === 2) {\r\n      console.log(errors)\r\n      console.log(\"registered called\")\r\n\r\n      Axios.post(\"http://localhost:5000/register\", {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        phoneNumber: phoneNumber,\r\n        password: password,\r\n        simType: simType\r\n      }).then((response) => {\r\n        if (!response.data.registered) {\r\n          console.log(response.data.error);\r\n          setBackEndErrors({registered: false, error: response.data.error});\r\n        } else {\r\n          setBackEndErrors({registered: true, error: response.data.error});\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    //If there are no errors and submitted it wil call submitForm function(callback())\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      if (!!backEndErrors.registered) {\r\n        callback();\r\n      }\r\n    }\r\n  }, [errors, backEndErrors.registered]);\r\n\r\n  return { handleChange, handleSubmit, values, errors, backEndErrors };\r\n};\r\n\r\nexport default useForm;\r\n","import React from \"react\";\r\nimport validate from \"./validateInfo\";\r\nimport useForm from \"./useForm\";\r\nimport \"./Register.css\";\r\n// Promise based HTTP client for the node.js\r\n// import Axios from \"axios\";\r\nimport { Badge, Box, Center } from \"@chakra-ui/react\";\r\n\r\nconst FormSignup = ({ submitForm }) => {\r\n\r\n  const { handleChange, handleSubmit, values, errors, backEndErrors } = useForm(\r\n    submitForm,\r\n    validate\r\n  );\r\n  \r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <form onSubmit={handleSubmit} className=\"form\" noValidate>\r\n        <h1>\r\n          Register to get service through an intelligent chatbot!!!\r\n          <br />\r\n          Create your account by filling out the information below.\r\n        </h1>\r\n        {backEndErrors.error === \"\" ? (\r\n          \"\"\r\n        ) : (\r\n          <Box w=\"80%\" h=\"40px\" bg=\"red.500\" borderRadius=\"5px\">\r\n            <Center>\r\n              <Badge variant=\"solid\" m=\"2%\" colorScheme=\"red\">\r\n                {backEndErrors.error}\r\n              </Badge>\r\n            </Center>\r\n          </Box>\r\n        )}\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">First Name</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            placeholder=\"Enter your first name\"\r\n            value={values.firstname}\r\n            onChange={handleChange}\r\n          />\r\n          {/*If there are errors that means left side term is true, errors.username will be shown*/}\r\n          {errors.firstname && <p>{errors.firstname}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Last Name</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            placeholder=\"Enter your last name\"\r\n            value={values.lastname}\r\n            onChange={handleChange}\r\n          />\r\n          {/*If there are errors that means left side term is true, errors.username will be shown*/}\r\n          {errors.lastname && <p>{errors.lastname}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Phone Number</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"tel\"\r\n            name=\"phonenumber\"\r\n            placeholder=\"Enter your phone number\"\r\n            value={values.phonenumber}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.phonenumber && <p>{errors.phonenumber}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Email</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Password</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password && <p>{errors.password}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Confirm Password</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"password\"\r\n            name=\"password2\"\r\n            placeholder=\"Confirm your password\"\r\n            value={values.password2}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password2 && <p>{errors.password2}</p>}\r\n        </div>\r\n        {backEndErrors.error == \"\" ? (\r\n          \"\"\r\n        ) : (\r\n          <Box  mt='20px'>\r\n            <Badge variant=\"outline\" colorScheme=\"red\">\r\n              Sign Up Failed\r\n            </Badge>\r\n          </Box>\r\n        )}\r\n        <button className=\"form-input-btn\" type=\"submit\" >\r\n          Continue\r\n        </button>\r\n        <span className=\"form-input-login\">\r\n          Already have an account? Login <a href=\"signin\">here</a>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSignup;\r\n","import { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\nimport { Button, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport \"./Register.css\";\r\n\r\nconst FormSuccess = () => {\r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <h1 className=\"form-success\">\r\n        You have successfully registered!\r\n        <br />\r\n        Now Log In{\" \"}\r\n        <a href=\"signin\">\r\n          <Button\r\n            rightIcon={<ArrowForwardIcon />}\r\n            colorScheme=\"red\"\r\n            variant=\"outline\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </a>\r\n      </h1>\r\n      <img className=\"form-img-2\" src=\"imgs/success.png\" alt=\"success-image\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSuccess;\r\n","import React, { useState } from 'react';\r\nimport './Register.css';\r\nimport FormSignup from './FormSignup';\r\nimport FormSuccess from './FormSuccess';\r\n// import Axios from \"axios\";\r\nimport useForm from \"./FormSignup\";\r\n// import { Redirect } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  function submitForm() {\r\n    setIsSubmitted(true);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    {/**background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('../img/Midwife.jpg') !important;\r\n    background-size: cover !important; <Redirect to='/' />*/}\r\n      <div className='form-container'>\r\n\r\n        <div className='form-content-left'>\r\n          <img className='form-img' src='imgs/sapiens create.png' alt='Create Account' />\r\n        </div>\r\n        {!isSubmitted ? (\r\n          <FormSignup submitForm={submitForm} />\r\n        ) : (\r\n          \r\n          <FormSuccess />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport BottomFooter from \"../../components/Footer/BottomFooter\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport Register from \"../../components/SignUp/Register\";\r\nimport BottomItems from \"../../components/Footer/BottomItems\";\r\n\r\nexport default function SignUp() {\r\n  return (\r\n    <>\r\n      <Register />\r\n      <Footer />\r\n      <BottomFooter botName=\"XYRON\" />\r\n    </>\r\n  );\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Box, Flex, Button, Stack, Heading, Text } from \"@chakra-ui/react\";\r\nimport {\r\n  FaFacebook,\r\n  FaInstagram,\r\n  FaYoutube,\r\n  FaTwitter,\r\n  FaRobot,\r\n} from \"react-icons/fa\";\r\nimport BottomFooter from \"../Footer/BottomFooter\";\r\n\r\nconst MenuItem = ({ children, isLast, to = \"/\", ...rest }) => {\r\n  return (\r\n    <Text\r\n      mb={{ base: isLast ? 0 : 8, sm: 0 }}\r\n      mr={{ base: 0, sm: isLast ? 0 : 8 }}\r\n      display=\"block\"\r\n      {...rest}\r\n    >\r\n      <Link to={to}>{children}</Link>\r\n    </Text>\r\n  );\r\n};\r\n\r\nconst Footer = (props) => {\r\n  const [show, setShow] = React.useState(false);\r\n  const toggleMenu = () => setShow(!show);\r\n\r\n  return (\r\n    <>\r\n    <Flex\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      w=\"100%\"\r\n      bgImage=\"url('../Healthcare/l5.png')\"\r\n      color={[\"white\", \"white\", \"primary.700\", \"primary.700\"]}\r\n      {...props}\r\n    >\r\n      <Stack\r\n        marginTop=\"100px\"\r\n        spacing={5}\r\n        w={{ base: \"100%\", md: \"100%\" }}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Heading\r\n          as=\"h1\"\r\n          size=\"xl\"\r\n          fontWeight=\"bold\"\r\n          color=\"blue.900\"\r\n          textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n        >\r\n          Ease of use for everyone\r\n        </Heading>\r\n        <Box alignItems=\"center\" width=\"50%\">\r\n          <Heading\r\n            as=\"h3\"\r\n            size=\"sm\"\r\n            color=\"blue.900\"\r\n            opacity=\"0.8\"\r\n            fontWeight=\"normal\"\r\n            lineHeight={1.5}\r\n            textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n          >\r\n            Chatbots are designed in way that it is easy to use for even\r\n            non-experienced users. Chatbots can provide user service at any time\r\n            without any delay. It is huge win for our users. 24/7 Availability.\r\n          </Heading>\r\n        </Box>\r\n        <Heading\r\n          as=\"h1\"\r\n          size=\"xl\"\r\n          fontWeight=\"bold\"\r\n          color=\"blue.900\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          top={100}\r\n        >\r\n          100+\r\n        </Heading>\r\n        <Heading\r\n          as=\"h3\"\r\n          size=\"sm\"\r\n          color=\"blue.900\"\r\n          opacity=\"0.8\"\r\n          fontWeight=\"normal\"\r\n          lineHeight={1.5}\r\n          textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n        >\r\n          New Users per day\r\n        </Heading>\r\n        <Heading\r\n          as=\"h3\"\r\n          size=\"xs\"\r\n          color=\"blue.900\"\r\n          opacity=\"0.8\"\r\n          fontWeight=\"normal\"\r\n          lineHeight={1.5}\r\n          textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n        >\r\n          Do you have any problem? Email US.\r\n        </Heading>\r\n        <Link to=\"\">\r\n          <Button\r\n            color=\"blue.900\"\r\n            colorScheme=\"blue\"\r\n            variant=\"outline\"\r\n            py=\"4\"\r\n            px=\"4\"\r\n            lineHeight=\"1\"\r\n            size=\"md\"\r\n            mb={6}\r\n          >\r\n            Learn More\r\n          </Button>\r\n        </Link>\r\n      </Stack>\r\n      \r\n      {/* <Flex\r\n        backgroundColor=\"red.900\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n        height=\"80px\"\r\n        marginTop=\"10px\"\r\n      >\r\n        <Box\r\n          padding=\"10px\"\r\n          boxSize=\"40px\"\r\n          fontSize=\"3xl\"\r\n          marginRight=\"50px\"\r\n          //   color=\"white\"\r\n        >\r\n          <FaRobot />\r\n        </Box>\r\n        <Heading color=\"white\" fontSize=\"15px\">\r\n          Designed By University of Moratuwa | All Rights Resserved, © 2021\r\n        </Heading>\r\n        <Box fontSize=\"3xl\" color=\"white\" ml=\"50px\" mr=\"20px\">\r\n          <FaFacebook />\r\n        </Box>\r\n        <Box fontSize=\"3xl\" color=\"white\" mr=\"20px\">\r\n          <FaInstagram />\r\n        </Box>\r\n        <Box fontSize=\"3xl\" color=\"white\" mr=\"20px\">\r\n          <FaYoutube />\r\n        </Box>\r\n        <Box fontSize=\"3xl\" color=\"white\" mr=\"20px\">\r\n          <FaTwitter />\r\n        </Box>\r\n      </Flex> */}\r\n      \r\n    </Flex>\r\n    <BottomFooter botName=\"XYRON\"/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import {\r\n  Button,\r\n  ReactRouterLink,\r\n  Link,\r\n  Box,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  useColorMode,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport {\r\n  GiArtificialIntelligence,\r\n  GiChatBubble,\r\n  GiRobotGolem,\r\n  GiRobotGrab,\r\n  GiRobotLeg,\r\n  GiShoppingCart,\r\n} from \"react-icons/gi\";\r\n\r\nimport \"./EducationMain.css\";\r\n\r\nfunction EducationMain() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  return (\r\n    <div className=\"hero-container\">\r\n      <Flex>\r\n        <video src=\"/videos/AI2.mp4\" autoPlay loop muted />\r\n      </Flex>\r\n      <Heading as=\"h1\" size=\"4xl\">\r\n        <Text color={colorMode === \"light\" ? \"white\" : \"white\"}>\r\n          TELECOMMUNICATION DOMAIN\r\n        </Text>\r\n      </Heading>\r\n\r\n      <p color={colorMode === \"light\" ? \"white\" : \"black\"}>What do you want to know?</p>\r\n      <div>\r\n        <Center mt=\"20px\">\r\n          <GiRobotGolem\r\n            className=\"cart-icon\"\r\n            size=\"150px\"\r\n            color={colorMode === \"light\" ? \"white\" : \"black\"}\r\n          />\r\n        </Center>\r\n        <a href=\"http://localhost:3000/chatbottc\">\r\n          <Box\r\n            as=\"button\"\r\n            p={4}\r\n            color={colorMode === \"light\" ? \"white\" : \"black\"}\r\n            fontWeight=\"bold\"\r\n            borderRadius=\"15px\"\r\n            bgGradient={\r\n              colorMode === \"light\"\r\n                ? \"linear(to-r, black, #00bbcc)\"\r\n                : \"linear(to-r, white, blue.600)\"\r\n            }\r\n            _hover={{\r\n              bgGradient: \"linear(to-r, red, white)\",\r\n            }}\r\n          >\r\n            ASK FROM XYRON\r\n          </Box>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EducationMain;\r\n","import BottomFooter from \"../../components/Footer/BottomFooter\";\r\nimport Footer from \"../../components/Sections/Footer\";\r\nimport EducationMain from \"../../components/Chatbot-Telecommunication/EducationMain\";\r\nimport ImageSlider from \"../../components/Slider/ImageSlider\";\r\nimport {SliderData} from \"../../components/Slider/SliderData\";\r\n\r\nfunction Education() {\r\n    return(\r\n        <>\r\n            <EducationMain />\r\n            {/* <ImageSlider slides = {SliderData} /> */}\r\n            <Footer />\r\n            {/* <BottomFooter botName=\"XYRON\" /> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Education;\r\n","import {\r\n  Button,\r\n  ReactRouterLink,\r\n  Link,\r\n  Box,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  useColorMode,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport {\r\n  GiArtificialIntelligence,\r\n  GiChatBubble,\r\n  GiRobotGolem,\r\n  GiRobotGrab,\r\n  GiRobotLeg,\r\n  GiShoppingCart,\r\n} from \"react-icons/gi\";\r\n\r\n// import \"./EducationMain.css\";\r\n\r\nfunction EducationMain() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  return (\r\n    <div className=\"hero-container\">\r\n      <Flex>\r\n        <video src=\"/videos/AI2.mp4\" autoPlay loop muted />\r\n      </Flex>\r\n      <Heading as=\"h1\" size=\"4xl\">\r\n        <Text color={colorMode === \"light\" ? \"white\" : \"white\"}>\r\n          HEALTHCARE DOMAIN\r\n        </Text>\r\n      </Heading>\r\n\r\n      <p color={colorMode === \"light\" ? \"white\" : \"black\"}>What do you want to know?</p>\r\n      <div>\r\n        <Center mt=\"20px\">\r\n          <GiRobotGolem\r\n            className=\"cart-icon\"\r\n            size=\"150px\"\r\n            color={colorMode === \"light\" ? \"white\" : \"black\"}\r\n          />\r\n        </Center>\r\n        <a href=\"http://localhost:3000/chatbothc\">\r\n          <Box\r\n            as=\"button\"\r\n            p={4}\r\n            color={colorMode === \"light\" ? \"white\" : \"black\"}\r\n            fontWeight=\"bold\"\r\n            borderRadius=\"15px\"\r\n            bgGradient={\r\n              colorMode === \"light\"\r\n                ? \"linear(to-r, black, #00bbcc)\"\r\n                : \"linear(to-r, white, blue.600)\"\r\n            }\r\n            _hover={{\r\n              bgGradient: \"linear(to-r, red, white)\",\r\n            }}\r\n          >\r\n            ASK FROM XYRON\r\n          </Box>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EducationMain;\r\n","import BottomFooter from \"../../components/Footer/BottomFooter\";\r\nimport Footer from \"../../components/Sections/Footer\";\r\nimport EducationMain from \"../../components/Chatbot-Healthcare/EducationMain\";\r\n\r\nfunction Education() {\r\n    return(\r\n        <>\r\n            <EducationMain />\r\n            <Footer />\r\n            {/* <BottomFooter botName=\"XYRON\" /> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Education;","import {\r\n  Button,\r\n  ReactRouterLink,\r\n  Link,\r\n  Box,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  useColorMode,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport {\r\n  GiArtificialIntelligence,\r\n  GiChatBubble,\r\n  GiRobotGolem,\r\n  GiRobotGrab,\r\n  GiRobotLeg,\r\n  GiShoppingCart,\r\n} from \"react-icons/gi\";\r\n\r\nimport \"./EducationMain.css\";\r\n\r\nfunction EducationMain() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  return (\r\n    <div className=\"hero-container\">\r\n      <Flex>\r\n        <video src=\"/videos/AI2.mp4\" autoPlay loop muted />\r\n      </Flex>\r\n      <Heading as=\"h1\" size=\"4xl\">\r\n        <Text color={colorMode === \"light\" ? \"white\" : \"white\"}>\r\n          PUBLIC TRANSPORTATION DOMAIN\r\n        </Text>\r\n      </Heading>\r\n\r\n      <p color={colorMode === \"light\" ? \"white\" : \"black\"}>What do you want to know?</p>\r\n      <div>\r\n        <Center mt=\"20px\">\r\n          <GiRobotGolem\r\n            className=\"cart-icon\"\r\n            size=\"150px\"\r\n            color={colorMode === \"light\" ? \"white\" : \"black\"}\r\n          />\r\n        </Center>\r\n        <a href=\"http://localhost:3000/chatbotpt\">\r\n          <Box\r\n            as=\"button\"\r\n            p={4}\r\n            color={colorMode === \"light\" ? \"white\" : \"black\"}\r\n            fontWeight=\"bold\"\r\n            borderRadius=\"15px\"\r\n            bgGradient={\r\n              colorMode === \"light\"\r\n                ? \"linear(to-r, black, #00bbcc)\"\r\n                : \"linear(to-r, white, blue.600)\"\r\n            }\r\n            _hover={{\r\n              bgGradient: \"linear(to-r, red, white)\",\r\n            }}\r\n          >\r\n            ASK FROM XYRON\r\n          </Box>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EducationMain;\r\n","import BottomFooter from \"../../components/Footer/BottomFooter\";\r\nimport Footer from \"../../components/Sections/Footer\";\r\nimport EducationMain from \"../../components/Chatbot-Transport/EducationMain\";\r\n\r\n\r\nfunction Education() {\r\n    return(\r\n        <>\r\n            <EducationMain />\r\n            <Footer />\r\n            {/* <BottomFooter botName=\"XYRON\" /> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Education;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Box, Flex, Text, Button, Image } from \"@chakra-ui/react\";\r\n\r\nconst MenuItem = ({ children, isLast, to = \"/\", ...rest }) => {\r\n  return (\r\n    <Text\r\n      mb={{ base: isLast ? 0 : 6, sm: 0 }}\r\n      mr={{ base: 0, sm: isLast ? 0 : 8 }}\r\n      display=\"block\"\r\n      {...rest}\r\n    >\r\n      <Link to={to}>{children}</Link>\r\n    </Text>\r\n  );\r\n};\r\n\r\nconst Header = (props) => {\r\n  const [show] = React.useState(false);\r\n  //   const toggleMenu = () => setShow(!show);\r\n\r\n  return (\r\n    <Flex\r\n      zIndex=\"100\"\r\n      position=\"fixed\"\r\n      as=\"nav\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      w=\"100%\"\r\n      mb={8}\r\n      p={4}\r\n      bg=\"#DCE3FA\"\r\n      // backgroundImage=\"url('../l8.png')\"\r\n      // backgroundRepeat=\"no-repeat\"\r\n      {...props}\r\n      minH={\"60px\"}\r\n      py={{ base: 2 }}\r\n      px={{ base: 4 }}\r\n      borderBottom={1}\r\n      borderStyle={\"solid\"}\r\n      borderColor=\"blue.50\"\r\n      borderWidth=\"100%\"\r\n    >\r\n      <Flex>\r\n        <Box\r\n          display={{ base: show ? \"block\" : \"none\", md: \"flex\" }}\r\n          width={{ base: \"full\", md: \"auto\" }}\r\n          alignItems=\"center\"\r\n          flexGrow={1}\r\n          pl=\"20px\"\r\n        >\r\n          <MenuItem to=\"/\">Home</MenuItem>\r\n          <MenuItem to=\"/how\">Dashborad</MenuItem>\r\n          <MenuItem to=\"/faetures\">Contaxt Us</MenuItem>\r\n\r\n          <Image\r\n            boxSize=\"35px\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            position=\"absolute\"\r\n            width=\"100px\"\r\n            src=\"../Healthcare//l4.png\"\r\n            left=\"46%\"\r\n          />\r\n\r\n          <MenuItem to=\"/signup\" isLast>\r\n            <Button\r\n              colorScheme=\"primary\"\r\n              variant=\"outline\"\r\n              // py=\"4\"\r\n              // px=\"4\"\r\n              marginTop=\"2px\"\r\n              size=\"md\"\r\n              justifyContent=\"flex-end\"\r\n              right={10}\r\n              position=\"absolute\"\r\n              top={2}\r\n            >\r\n              Sign in\r\n            </Button>\r\n          </MenuItem>\r\n        </Box>\r\n      </Flex>\r\n      {/* <Box w=\"100%\" h=\"5px\" b=\"0px\" mt=\"10px\" bg=\"blue\" /> */}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport Footer from \"../../components/Sections/Footer\";\r\n\r\nimport { Box, Heading, Stack, Image, Flex, Button } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../../components/Sections/Header\";\r\nexport default function Landing() {\r\n  return (\r\n    <Box>\r\n      <Header />\r\n      <Flex\r\n        direction=\"column\"\r\n        align=\"center\"\r\n        maxW={{ xl: \"1200px\" }}\r\n        m=\"0 auto\"\r\n        pt=\"100px\"\r\n        // bgImage=\"url('../l5.png')\"\r\n      >\r\n        <Flex\r\n          align=\"center\"\r\n          justify={{ base: \"center\", md: \"space-around\", xl: \"space-between\" }}\r\n          direction={{ base: \"column-reverse\", md: \"row\" }}\r\n          wrap=\"no-wrap\"\r\n          minH=\"70vh\"\r\n          px={8}\r\n          mb={16}\r\n        >\r\n          <Stack\r\n            spacing={7}\r\n            w={{ base: \"80%\", md: \"40%\" }}\r\n            align={[\"center\", \"center\", \"flex-start\", \"flex-start\"]}\r\n          >\r\n            <Heading\r\n              as=\"h1\"\r\n              size=\"xl\"\r\n              fontWeight=\"bold\"\r\n              color=\"blue.900\"\r\n              textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n            >\r\n              Sign Up to chat with XYRON Chatbot\r\n            </Heading>\r\n            <Heading\r\n              as=\"h3\"\r\n              size=\"sm\"\r\n              color=\"primary.800\"\r\n              opacity=\"0.8\"\r\n              fontWeight=\"normal\"\r\n              lineHeight={1.5}\r\n              textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n            >\r\n              There are 3 chatbots for 3 domains. Telecommunication service,\r\n              healthcare, and public transport are the 3 services that we\r\n              provide. Chatbots are built with the latest Artificial\r\n              Intelligence technologies to give you a better experience. 24/7\r\n              Available\r\n            </Heading>\r\n            <Flex>\r\n              <Link to=\"\">\r\n                <Button\r\n                  colorScheme=\"blue\"\r\n                  variant=\"solid\"\r\n                  py=\"4\"\r\n                  px=\"4\"\r\n                  lineHeight=\"1\"\r\n                  size=\"md\"\r\n                  marginRight={10}\r\n                >\r\n                  Sing Up\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"\">\r\n                <Button\r\n                  colorScheme=\"blue\"\r\n                  variant=\"outline\"\r\n                  py=\"4\"\r\n                  px=\"4\"\r\n                  lineHeight=\"1\"\r\n                  size=\"md\"\r\n                >\r\n                  Learn More\r\n                </Button>\r\n              </Link>\r\n            </Flex>\r\n          </Stack>\r\n          <Box\r\n            w={{ base: \"80%\", sm: \"60%\", md: \"50%\" }}\r\n            mb={{ base: 12, md: 0 }}\r\n            right={10}\r\n          >\r\n            {/* TODO: Make this change every X secs */}\r\n            <Image src=\"../Healthcare/main1.png\" size=\"100%\" />\r\n          </Box>\r\n        </Flex>\r\n        <Flex\r\n          align=\"center\"\r\n          justify={{ base: \"center\", md: \"space-around\", xl: \"space-between\" }}\r\n          direction={{ base: \"column-reverse\", md: \"row\" }}\r\n          wrap=\"no-wrap\"\r\n          minH=\"70vh\"\r\n          px={8}\r\n          mb={16}\r\n        >\r\n          <Box\r\n            w={{ base: \"80%\", sm: \"60%\", md: \"50%\" }}\r\n            mb={{ base: 12, md: 0 }}\r\n            marginRight=\"10\"\r\n            align=\"right\"\r\n          >\r\n            {/* TODO: Make this change every X secs */}\r\n            <Image src=\"../Healthcare/main2.png\" size=\"100%\" />\r\n          </Box>\r\n          <Stack\r\n            spacing={7}\r\n            w={{ base: \"80%\", md: \"40%\" }}\r\n            align={[\"center\", \"center\", \"flex-start\", \"flex-start\"]}\r\n          >\r\n            <Heading\r\n              as=\"h1\"\r\n              size=\"xl\"\r\n              fontWeight=\"bold\"\r\n              color=\"primary.800\"\r\n              textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n            >\r\n              Light, Fast & Powerful\r\n            </Heading>\r\n            <Heading\r\n              as=\"h3\"\r\n              size=\"sm\"\r\n              color=\"primary.800\"\r\n              opacity=\"0.8\"\r\n              fontWeight=\"normal\"\r\n              lineHeight={1.5}\r\n              textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n            >\r\n              Chatbots are software applications that use artificial\r\n              intelligence & natural language processing to understand what a\r\n              human wants, and guides them to their desired outcome with as\r\n              little work for the end user as possible. Today, we expect answers\r\n              immediately and we expect that they will be accurate. This can be\r\n              done with chatbots\r\n            </Heading>\r\n            <Flex>\r\n              <Stack\r\n                spacing={4}\r\n                w={{ base: \"100%\", md: \"40%\" }}\r\n                align={[\"center\", \"center\", \"flex-start\", \"flex-start\"]}\r\n              >\r\n                <Image src=\"../left.png\" />\r\n                <Heading\r\n                  as=\"h3\"\r\n                  size=\"md\"\r\n                  color=\"black\"\r\n                  fontWeight=\"bold\"\r\n                  textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n                >\r\n                  Telecommunication Chatbot\r\n                </Heading>\r\n                <Heading\r\n                  as=\"h3\"\r\n                  size=\"xs\"\r\n                  color=\"primary.800\"\r\n                  opacity=\"0.8\"\r\n                  fontWeight=\"normal\"\r\n                  lineHeight={1.5}\r\n                  textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n                >\r\n                  This chatbot will let your works easy. You can recharge fast.\r\n                  You can select packages whatever you want. Fast Responses.\r\n                </Heading>\r\n              </Stack>\r\n              <Stack\r\n                spacing={4}\r\n                w={{ base: \"80%\", md: \"40%\" }}\r\n                align={[\"center\", \"center\", \"flex-start\", \"flex-start\"]}\r\n                marginLeft={20}\r\n              >\r\n                <Image src=\"../left.png\" />\r\n                <Heading\r\n                  as=\"h3\"\r\n                  size=\"md\"\r\n                  color=\"black\"\r\n                  fontWeight=\"bold\"\r\n                  textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n                >\r\n                  Healthcare Chatbot\r\n                </Heading>\r\n                <Heading\r\n                  as=\"h3\"\r\n                  size=\"xs\"\r\n                  color=\"primary.800\"\r\n                  opacity=\"0.8\"\r\n                  fontWeight=\"normal\"\r\n                  lineHeight={1.5}\r\n                  textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n                >\r\n                  Are you sick? Ask our chatbot for help. It will give you\r\n                  necessary advices. Do you want to channel doctors? Then, lets\r\n                  do it\r\n                </Heading>\r\n              </Stack>\r\n            </Flex>\r\n            <Flex>\r\n              <Stack\r\n                spacing={4}\r\n                w={{ base: \"80%\", md: \"40%\" }}\r\n                align={[\"center\", \"center\", \"flex-start\", \"flex-start\"]}\r\n              >\r\n                <Image src=\"../left.png\" />\r\n                <Heading\r\n                  as=\"h3\"\r\n                  size=\"md\"\r\n                  color=\"black\"\r\n                  fontWeight=\"bold\"\r\n                  textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n                >\r\n                  Public Transport Chatbot\r\n                </Heading>\r\n                <Heading\r\n                  as=\"h3\"\r\n                  size=\"xs\"\r\n                  color=\"primary.800\"\r\n                  opacity=\"0.8\"\r\n                  fontWeight=\"normal\"\r\n                  lineHeight={1.5}\r\n                  textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n                >\r\n                  Do you want to know about train schedules? Do you want to\r\n                  track buses? Here is your chance to do it.\r\n                </Heading>\r\n              </Stack>\r\n            </Flex>\r\n          </Stack>\r\n        </Flex>\r\n      </Flex>\r\n      <Footer />\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Footer from \"../../components/Sections/Footer\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Stack,\r\n  Image,\r\n  Flex,\r\n  Text,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"@chakra-ui/react\";\r\nimport Header from \"../../components/Sections/Header\";\r\nimport \"./index.css\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n\r\n  @media screen and (max-width: 960px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Card = styled(Link)`\r\n  //   background: #000080;\r\n  box-shadow: 0 6px 20px rgba(56, 125, 255, 0.4);\r\n  width: 220px;\r\n  text-decoration: none;\r\n  border-radius: 10px;\r\n  margin-right: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 20px;\r\n  padding: 20px;\r\n  height: 350px;\r\n\r\n  &:nth-child(2) {\r\n    margin: 24px;\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(1.06);\r\n    transition: all 0.3s ease-out;\r\n    color: #1c2237;\r\n  }\r\n\r\n  @media screen and (max-width: 960px) {\r\n    width: 90%;\r\n\r\n    &:hover {\r\n      transform: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function DSelection() {\r\n  return (\r\n    <Box>\r\n      <Header />\r\n      <Flex\r\n        direction=\"column\"\r\n        align=\"center\"\r\n        maxW={{ xl: \"1200px\" }}\r\n        m=\"0 auto\"\r\n        pt=\"100px\"\r\n        // bgImage=\"url('../b2.png')\"\r\n      >\r\n        <Box marginTop=\"10%\">\r\n          <Heading as=\"h1\" size=\"xl\" fontWeight=\"bold\" color=\"blue.900\">\r\n            Chatbot Domains\r\n          </Heading>\r\n        </Box>\r\n        <Container>\r\n          <Card className=\"domain-link\">\r\n            <Box\r\n              h={\"100px\"}\r\n              mt={-6}\r\n              mx={-6}\r\n              mb={6}\r\n              pos={\"relative\"}\r\n              w=\"fit-content\"\r\n            >\r\n              <Image\r\n                src=\"../Healthcare/d1.png\"\r\n                size=\"100%\"\r\n                layout={\"fill\"}\r\n                w=\"fit-content\"\r\n              />\r\n            </Box>\r\n            <a className=\"domain-link\" href=\"http://localhost:3000/healthcare\">\r\n            <Stack marginTop={10} marginTop={50}>\r\n              <Heading fontSize=\"20px\" color=\"blue.800\">\r\n                Healthcare\r\n              </Heading>\r\n              <Heading\r\n                as=\"h3\"\r\n                size=\"sm\"\r\n                color=\"primary.800\"\r\n                opacity=\"0.8\"\r\n                fontWeight=\"normal\"\r\n                lineHeight={1.5}\r\n              >\r\n                Do you want to channel a doctor?\r\n              </Heading>\r\n              <Text color={\"gray.500\"}></Text>\r\n     \r\n                <Button>Chat now</Button>\r\n   \r\n            </Stack>\r\n            </a>\r\n          </Card>\r\n          <Card>\r\n            <Box h={\"100px\"} mt={-6} mx={-6} mb={6} pos={\"relative\"}>\r\n              <Image src=\"../Healthcare/d2.png\" size=\"100%\" layout={\"fill\"} />\r\n            </Box>\r\n            <a href=\"http://localhost:3000/telecommunication\">\r\n              <Stack marginTop={10} marginTop={50}>\r\n                <Heading fontSize=\"20px\" color=\"blue.800\">\r\n                  Telecommuncation{\" \"}\r\n                </Heading>\r\n                <Heading\r\n                  as=\"h3\"\r\n                  size=\"sm\"\r\n                  color=\"primary.800\"\r\n                  opacity=\"0.8\"\r\n                  fontWeight=\"normal\"\r\n                  lineHeight={1.5}\r\n                >\r\n                  Do you want to view and buy a data package?{\" \"}\r\n                </Heading>\r\n\r\n                <Text color={\"gray.500\"}></Text>\r\n                \r\n                  <Button>Chat now</Button>\r\n              </Stack>\r\n            </a>\r\n          </Card>\r\n          <Card>\r\n            <Box h={\"100px\"} mt={-6} mx={-6} mb={6} pos={\"relative\"}>\r\n              <Image src=\"../Healthcare/d3.png\" size=\"100%\" layout={\"fill\"} />\r\n            </Box>\r\n            <a href=\"http://localhost:3000/transport\">\r\n            <Stack marginTop={10} marginTop={50}>\r\n              <Heading fontSize=\"20px\" color=\"blue.800\">\r\n                Public Transport{\" \"}\r\n              </Heading>\r\n              <Heading\r\n                as=\"h3\"\r\n                size=\"sm\"\r\n                color=\"primary.800\"\r\n                opacity=\"0.8\"\r\n                fontWeight=\"normal\"\r\n                lineHeight={1.5}\r\n              >\r\n                View today train and bus schedules.{\" \"}\r\n              </Heading>\r\n\r\n              <Text color={\"gray.500\"}></Text>\r\n              <Button>Chat now</Button>\r\n            </Stack>\r\n            </a>\r\n          </Card>\r\n          <Card>\r\n            <Box\r\n              h={\"100px\"}\r\n              mt={-6}\r\n              mx={-6}\r\n              mb={6}\r\n              padding=\"50px\"\r\n              pos={\"relative\"}\r\n            >\r\n              <Image\r\n                src=\"../Healthcare/d4.png\"\r\n                // // size=\"100%\"\r\n                // justifyContent=\"center\"\r\n                // alignItems=\"center\"\r\n              />\r\n            </Box>\r\n            <a href=\"http://localhost:3000/profile\">\r\n\r\n            <Stack marginTop={10} marginTop={50}>\r\n              <Heading fontSize=\"20px\" color=\"blue.800\">\r\n                Dashboard\r\n              </Heading>\r\n              <Heading\r\n                as=\"h3\"\r\n                size=\"sm\"\r\n                color=\"primary.800\"\r\n                opacity=\"0.8\"\r\n                fontWeight=\"normal\"\r\n                lineHeight={1.5}\r\n              >\r\n                Personalize your settings using your dashboard.{\" \"}\r\n              </Heading>\r\n\r\n              <Text color={\"gray.500\"}></Text>\r\n              <Button>Chat now</Button>\r\n            </Stack>\r\n            </a>\r\n          </Card>\r\n        </Container>\r\n      </Flex>\r\n      <Footer />\r\n    </Box>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nconst ProfileImage = () => {\r\n\r\n    const [profileImage, setProfileImage] = useState('imgs/svg-9.svg')\r\n\r\n    const [changeImage, setChangeImage] = useState(false);\r\n    \r\n    const [selectImage, setSelectImage] = useState(null)\r\n    const handleChangePic = (e) => {\r\n        console.log(e);\r\n        setChangeImage(true);\r\n    }\r\n\r\n    const fileSelectedHandler = (e) => {\r\n        setSelectImage(e.target.files[0]);\r\n    }\r\n\r\n    const fileUploadHandler = (e) => {\r\n        const imgpath = 'imgs/' + selectImage.name;\r\n        // console.log(imgpath);\r\n        setProfileImage(imgpath);\r\n        setChangeImage(false)\r\n        // configure this part to upload the image to database and set path\r\n    }\r\n\r\n\r\n    return ( \r\n            <div className=\"details-content-left\">\r\n                <img className=\"profile-img\" src={profileImage} alt=\"Security\" />\r\n                { (!changeImage) && (<button id=\"edit-pic-btn\" type=\"submit\" onClick={handleChangePic}>\r\n                    <img id=\"edit-pic-btn-icon\" src=\"imgs/icon1.png\" alt=\"\" />\r\n                    {/* <input type=\"file\" Upload /> */}\r\n\r\n                </button>)}\r\n\r\n                { changeImage && (\r\n                    <><input type=\"file\" onChange={fileSelectedHandler} /><button onClick={fileUploadHandler}>Upload</button></>\r\n                )}\r\n            </div>\r\n     ); \r\n}\r\n \r\nexport default ProfileImage;","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { EmailIcon } from \"@chakra-ui/icons\";\r\nimport { FaUser, FaUserEdit } from \"react-icons/fa\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { Center } from \"@chakra-ui/layout\";\r\n\r\nconst Password = () => {\r\n  const [changePassword, setChangePassword] = useState(false);\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [misMatch, setMisMatch] = useState(\"\");\r\n  const [backendErrors, setBackEndErrors] = useState({ error: false, msg: \"\" });\r\n  const [show1, setShow1] = React.useState(false);\r\n  const handleClick1 = () => setShow1(!show1);\r\n  const [show2, setShow2] = React.useState(false);\r\n  const handleClick2 = () => setShow2(!show2);\r\n  const [show3, setShow3] = React.useState(false);\r\n  const handleClick3 = () => setShow3(!show3);\r\n\r\n  const handleClick = () => {\r\n    setChangePassword(true);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    // process password\r\n    e.preventDefault();\r\n    Axios.post(\"http://localhost:5000/password\", {\r\n      user_id: JSON.parse(localStorage.getItem(\"user\"))[\"user_id\"], // set the user id by session_id\r\n      currentPassword: currentPassword,\r\n      newPassword: newPassword,\r\n      confirmPassword: confirmPassword,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"Response\");\r\n        console.log(response);\r\n        alert(response.data);\r\n        // if (!response.data.error) {\r\n        //     setBackEndErrors({error: false, msg: 'Password Updated Successfully!'})\r\n        // }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\");\r\n        console.log(error);\r\n        alert(error.data);\r\n        // if (response.data.error) {\r\n        //     setBackEndErrors({error: true, msg: 'Failed to Update Password'})\r\n        // }\r\n      });\r\n\r\n    setChangePassword(false);\r\n  };\r\n\r\n  const handleCurrent = (psswrd) => {\r\n    setCurrentPassword(psswrd);\r\n  };\r\n\r\n  const handleNew = (psswrd) => {\r\n    setNewPassword(psswrd);\r\n  };\r\n\r\n  const handleConfirm = (psswrd) => {\r\n    setConfirmPassword(psswrd);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (newPassword !== confirmPassword && confirmPassword !== \"\") {\r\n      setMisMatch(\"Confirm Password does not match.\");\r\n    } else {\r\n      setMisMatch(\"\");\r\n    }\r\n  }, [confirmPassword]);\r\n\r\n  return (\r\n    <div className=\"details-content-bottom\">\r\n      {!changePassword ? (\r\n        // <button onClick={handleClick}>Change Password</button>\r\n        <Button\r\n          leftIcon={<FaUserEdit />}\r\n          onClick={handleClick}\r\n          colorScheme=\"teal\"\r\n          variant=\"solid\"\r\n        >\r\n          Change Password\r\n        </Button>\r\n      ) : (\r\n        <form onSubmit={handleSubmit}>\r\n            <Center> \r\n          <InputGroup size=\"md\" w=\"30%\" mb=\"1%\">\r\n            <Input\r\n              pr=\"4.5rem\"\r\n              type={show1 ? \"text\" : \"password\"}\r\n              placeholder=\"Current password\"\r\n              onChange={(e) => handleCurrent(e.target.value)}\r\n            />\r\n            <InputRightElement width=\"4.5rem\">\r\n              <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick1}>\r\n                {show1 ? \"Hide\" : \"Show\"}\r\n              </Button>\r\n            </InputRightElement>\r\n          </InputGroup>\r\n          </Center>\r\n          <Center> \r\n          <InputGroup size=\"md\" w=\"30%\" mb=\"1%\">\r\n            <Input\r\n              pr=\"4.5rem\"\r\n              type={show2 ? \"text\" : \"password\"}\r\n              placeholder=\"New password\"\r\n              onChange={(e) => handleNew(e.target.value)}\r\n            />\r\n            <InputRightElement width=\"4.5rem\">\r\n              <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick2}>\r\n                {show2 ? \"Hide\" : \"Show\"}\r\n              </Button>\r\n            </InputRightElement>\r\n          </InputGroup>\r\n          </Center>\r\n          <Center> \r\n          <InputGroup size=\"md\" w=\"30%\" mb=\"1%\">\r\n            <Input\r\n              pr=\"4.5rem\"\r\n              type={show3 ? \"text\" : \"password\"}\r\n              placeholder=\"Confirm password\"\r\n              onChange={(e) => handleConfirm(e.target.value)}\r\n            />\r\n            <InputRightElement width=\"4.5rem\">\r\n              <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick3}>\r\n                {show3 ? \"Hide\" : \"Show\"}\r\n              </Button>\r\n            </InputRightElement>\r\n          </InputGroup>\r\n          </Center>\r\n          {/* <label>\r\n            Current Password:\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              placeholder=\"Current Password\"\r\n              onChange={(e) => handleCurrent(e.target.value)}\r\n            />\r\n          </label>\r\n          <label>\r\n            New Password:\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              placeholder=\"New Password\"\r\n              onChange={(e) => handleNew(e.target.value)}\r\n            />\r\n          </label>\r\n          <label>\r\n            Confirm Password:\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              placeholder=\"Confirm Password\"\r\n              onChange={(e) => handleConfirm(e.target.value)}\r\n            />\r\n          </label> */}\r\n          {misMatch && <p>{misMatch}</p>}\r\n          {/* <input type=\"submit\" value=\"Update Password\"><Button\r\n          leftIcon={<FaUserEdit />}\r\n          onClick={handleClick}\r\n          colorScheme=\"teal\"\r\n          variant=\"solid\"\r\n        >\r\n          Change Password\r\n        </Button> </input> */}\r\n        <Button\r\n            mt={4}\r\n            colorScheme=\"teal\"\r\n            // isLoading={props.isSubmitting}\r\n            type=\"submit\"\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n","import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nconst Mid = () => {\r\n\r\n    const [ChangeDetails, setChangeDetails] = useState(false);\r\n    const [isPending, setIsPending] =  useState(false);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [firstName,setFirstName] = useState('');\r\n    const [lastName,setLastName] = useState('');\r\n    const [phoneNumber,setPhoneNumber] = useState('');\r\n\r\n    useEffect(()=> {\r\n        Axios.get(\"http://localhost:5000/profile\", {\r\n            params : {\r\n                user_id:JSON.parse(localStorage.getItem(\"user\"))[\"user_id\"]   // set the user id by session_id\r\n            }\r\n          }).then((response) => {\r\n              setFirstName(response.data.first_name);\r\n              setLastName(response.data.last_name);\r\n              setPhoneNumber(response.data.phone_number);\r\n              setEmail(response.data.email);     \r\n          }).catch((error) => {\r\n              console.log(error);\r\n          })\r\n    },[ChangeDetails])\r\n\r\n    const handleEditDetails = () => {\r\n        setChangeDetails(true);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setIsPending(true);\r\n        Axios.post(\"http://localhost:5000/profile\", {\r\n                user_id:JSON.parse(localStorage.getItem(\"user\"))[\"user_id\"],   // set the user id by session_id\r\n                email: email,\r\n                first_name: firstName,\r\n                last_name: lastName,\r\n                phone_number: phoneNumber,\r\n          }).then((response) => {\r\n            console.log(response);\r\n            setChangeDetails(false);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n            setChangeDetails(false);\r\n        })\r\n        setIsPending(false);\r\n        \r\n    }\r\n\r\n    return ( \r\n        <div className=\"details-content-mid\">\r\n            {(!ChangeDetails) ? (\r\n                        <div className=\"details-content-right\">\r\n                        <div id=\"profile-details\">\r\n                        <h3>Profile Details</h3>\r\n                            <button id=\"edit-details-btn\" type=\"submit\" onClick={handleEditDetails}>Edit Details</button>\r\n                            <ul>\r\n                            <li>First Name : <span>{firstName}</span></li>\r\n                            <li>Last Name : <span>{lastName}</span></li>\r\n                            <li>Phone Number : <span>{phoneNumber}</span></li>\r\n                            <li>Email :  <span>{email}</span></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n            ) : (\r\n                <div className=\"details-content-right\">\r\n                <div id=\"edit-details\">\r\n                    <h3>Edit Details</h3>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label>First Name</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            required\r\n                            defaultValue = {firstName}\r\n                            onChange = {(e) => setFirstName(e.target.value)}\r\n                            // onChange = {(e) => console.log(e.target.value)}\r\n                        />\r\n                        <label>Last Name</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            required\r\n                            value = {lastName}\r\n                            onChange = {(e) => setLastName(e.target.value)}\r\n                        />\r\n                        <label>Phone Number</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            required\r\n                            maxLength = {10}\r\n                            minLength = {10}\r\n                            value = {phoneNumber}\r\n                            onChange = {(e) => setPhoneNumber(e.target.value)}\r\n                        />\r\n                        <label>Email</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            required\r\n                            value = {email}\r\n                            // onChange = {(e) => setEmail(e.target.value)}\r\n                        />\r\n                        {!isPending && <button>Save Details</button>}\r\n                        {isPending && <button>Saving...</button>}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            )}\r\n        </div>\r\n ); \r\n}\r\n \r\nexport default Mid;","import \"./UserProfile.css\";\r\nimport ProfileImage from \"./ProfileImage\";\r\nimport Password from \"./Password\";\r\nimport Mid from \"./Mid\";\r\n\r\n\r\nconst UserProfile = () => {\r\n\r\n\r\n    return (  \r\n        <div className=\"details-container\">\r\n        \r\n            <ProfileImage />\r\n            <Mid />\r\n            <Password />\r\n\r\n        </div>\r\n    ); \r\n}\r\n \r\nexport default UserProfile;","import BottomFooter from \"../../components/Footer/BottomFooter\";\r\nimport Footer from \"../../components/Sections/Footer\";\r\nimport UserProfile from \"../../components/Profile/UserProfile\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst Profile = () => {\r\n    \r\n    const { id } = useParams(); \r\n\r\n    return ( \r\n        <>\r\n            <UserProfile />\r\n            <Footer />\r\n            {/* <BottomFooter /> */}\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Profile;","import { Flex, Img } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst BotAvatar = () => {\r\n  return (\r\n    <Flex align=\"center\">\r\n      <Img ml=\"1.5rem\" src=\"../logo2.png\" alt=\"logo\" h=\"40px\" w=\"40px\" />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default BotAvatar;\r\n","import { Flex, Img } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst BotIcon = () => {\r\n  return (\r\n    <Flex align=\"center\">\r\n      <Img ml=\"1.5rem\" src=\"../logo2.png\" alt=\"logo\" h=\"80px\" w=\"80px\" />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default BotIcon;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Heading,\r\n  StackItem,\r\n  Stack,\r\n  Flex,\r\n  Link,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\n// import { FaHospital, BsPersonFill } from \"react-icons/fa\";\r\n// import { IoPersonCircle } from \"react-icons/fa\";\r\n\r\nconst Doctors = (props) => {\r\n  const renderDoctor = () => {\r\n    return props.doctors.map((doctor) => {\r\n      function selectDate() {\r\n        props.actionProvider.selectDoctor(props.doctors.indexOf(doctor));\r\n        console.log(props);\r\n      }\r\n      return (\r\n        <StackItem key={doctor.doctorID}>\r\n          <Box\r\n            boxShadow=\"0 0 2px 2px #ceddeb\"\r\n            bg=\"#f2fcfc\"\r\n            width=\"40%\"\r\n            borderWidth=\"1px\"\r\n            borderRadius=\"5px\"\r\n            padding=\"10px\"\r\n            // mr={40}\r\n            mb={1}\r\n          >\r\n            <Flex>\r\n              <Heading as=\"h3\" size=\"sm\" color=\"#00004d\" ml={3}>\r\n                {doctor.name}\r\n              </Heading>\r\n            </Flex>\r\n            <Heading as=\"h4\" size=\"xs\" color=\"#00004d\" ml={3}>\r\n              {doctor.specialty}\r\n            </Heading>\r\n            <Flex>\r\n              <Heading as=\"h4\" size=\"xs\" color=\"#00004d\" ml={3}>\r\n                {doctor.hospital}\r\n              </Heading>\r\n            </Flex>\r\n            <Flex mb=\"8px\">\r\n              <Heading as=\"h4\" size=\"xs\" color=\"#00004d\" ml={3}>\r\n                {doctor.contact}\r\n              </Heading>\r\n            </Flex>\r\n            <Link to=\"/home\">\r\n              <Button\r\n                width=\"100%\"\r\n                colorScheme=\"blue\"\r\n                color=\"#00004d\"\r\n                variant=\"outline\"\r\n                lineHeight=\"1\"\r\n                height=\"30px\"\r\n                padding={1}\r\n                size=\"md\"\r\n                // ml={3}\r\n                mr={3}\r\n                onClick={selectDate}\r\n              >\r\n                Channel\r\n              </Button>\r\n            </Link>\r\n          </Box>\r\n        </StackItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  return <Stack ml=\"10%\">{renderDoctor()}</Stack>;\r\n};\r\n\r\nexport default Doctors;\r\n","import React, { useState } from \"react\";\r\nimport Calendar from \"react-widgets/Calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./calender.css\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport \"react-widgets/styles.css\";\r\nconst CalenderObject = (props) => {\r\n  const [value, onChange] = useState(new Date());\r\n  const [isDisable, setDisable] = useState(false);\r\n  // console.log(\"sandaruwan\");\r\n  function selectDate(params) {\r\n    onChange();\r\n    props.actionProvider.selectTime(params);\r\n    setDisable(true);\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      width=\"50%\"\r\n      ml=\"3%\"\r\n      boxShadow=\"0 0 2px 2px #ceddeb\"\r\n      bg=\"#f2fcfc\"\r\n      // width=\"40%\"\r\n      borderWidth=\"1px\"\r\n      borderRadius=\"lg\"\r\n      padding=\"10px\"\r\n    >\r\n      <Calendar\r\n        min={value}\r\n        disabled={isDisable}\r\n        onChange={selectDate}\r\n        value={value}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\nexport default CalenderObject;\r\n","import React from \"react\";\r\nimport { Flex, Box, Heading, Text } from \"@chakra-ui/react\";\r\nimport \"./local.css\";\r\nfunction local(props) {\r\n  var date = props.covidLocalCurrent[0];\r\n  var totalCases = props.covidLocalCurrent[1];\r\n  var totalActiveCases = props.covidLocalCurrent[2];\r\n  var recoverCases = props.covidLocalCurrent[3];\r\n  var deathCases = props.covidLocalCurrent[4];\r\n\r\n  console.log(props.covidLocalCurrent);\r\n  return (\r\n    <Box\r\n      boxShadow=\"0 0 2px 2px #ceddeb\"\r\n      borderRadius={5}\r\n      padding=\"4px\"\r\n      width=\"60%\"\r\n      height=\"44%\"\r\n      fontSize=\"10px\"\r\n    >\r\n      <Flex mb=\"9px\">\r\n        <Box>\r\n          <Heading size=\"xs\" color=\"#00004d\" ml={2}>\r\n            In Sri Lanka\r\n          </Heading>\r\n        </Box>\r\n        <Box ml=\"30%\" bg=\"#fcde8b\" borderWidth=\"1px\" borderRadius={5}>\r\n          <Heading as=\"h3\" size=\"xs\" color=\"black\" padding=\"2px\" margin=\"2px\">\r\n            Up to {date}\r\n          </Heading>\r\n        </Box>\r\n      </Flex>\r\n      <Flex padding=\"2px\">\r\n        <Box\r\n          bg=\"orange\"\r\n          color=\"white\"\r\n          borderWidth=\"1px\"\r\n          borderRadius={5}\r\n          padding=\"4px\"\r\n          width=\"40%\"\r\n          margin=\"3px\"\r\n        >\r\n          <Box mr=\"4px\">\r\n            <Heading size=\"xs\" color=\"white\" ml={2}>\r\n              Confirmed corona patients\r\n            </Heading>\r\n          </Box>\r\n\r\n          <Box mr=\"revert\">\r\n            <Text size=\"xs\" color=\"white\" ml={2} mb={0}>\r\n              {totalCases}\r\n            </Text>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          bg=\"red\"\r\n          color=\"white\"\r\n          borderWidth=\"1px\"\r\n          borderRadius={5}\r\n          padding=\"4px\"\r\n          width=\"40%\"\r\n          margin=\"3px\"\r\n        >\r\n          <Box>\r\n            <Heading as=\"h3\" size=\"xs\" color=\"white\" ml={2}>\r\n              Patients receiving treatment at the moment\r\n            </Heading>\r\n          </Box>\r\n\r\n          <Box mr=\"revert\">\r\n            <Text as=\"h3\" size=\"xs\" color=\"white\" ml={2}>\r\n              {totalActiveCases}\r\n            </Text>\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          <Box\r\n            bg=\"#019443\"\r\n            color=\"white\"\r\n            borderWidth=\"1px\"\r\n            borderRadius={5}\r\n            // padding=\"5px\"\r\n            margin=\"3px\"\r\n          >\r\n            <Box>\r\n              <Heading as=\"h3\" size=\"xs\" color=\"white\" ml={2}>\r\n                Recovered patients\r\n              </Heading>\r\n            </Box>\r\n\r\n            <Box>\r\n              <Text as=\"h3\" size=\"xs\" color=\"white\" ml={2}>\r\n                {recoverCases}\r\n              </Text>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            bg=\"#520223\"\r\n            color=\"white\"\r\n            borderWidth=\"1px\"\r\n            borderRadius={5}\r\n            // padding=\"5px\"\r\n            // height=\"100px\"\r\n            margin=\"3px\"\r\n          >\r\n            <Box>\r\n              <Heading as=\"h3\" size=\"xs\" color=\"white\" ml={2}>\r\n                No of Deaths\r\n              </Heading>\r\n            </Box>\r\n\r\n            <Box>\r\n              <Text as=\"h3\" size=\"xs\" color=\"white\" ml={2}>\r\n                {deathCases}\r\n              </Text>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default local;\r\n","import React from \"react\";\r\nimport { Flex, Box, Heading, Text } from \"@chakra-ui/react\";\r\nimport \"./local.css\";\r\nfunction local(props) {\r\n  var date = props.covidLocalToday[0];\r\n  var totalCases = props.covidLocalToday[1];\r\n  var totalActiveCases = props.covidLocalToday[2];\r\n  // var recoverCases = props.covidLocalCurrent[3];\r\n  // var deathCases = props.covidLocalCurrent[4];\r\n\r\n  console.log(props.covidLocalCurrent);\r\n  return (\r\n    <Box\r\n      boxShadow=\"0 0 2px 2px #ceddeb\"\r\n      borderRadius={5}\r\n      padding=\"4px\"\r\n      width=\"60%\"\r\n      height=\"33%\"\r\n      fontSize=\"10px\"\r\n    >\r\n      <Flex mb=\"9px\">\r\n        <Box>\r\n          <Heading size=\"xs\" color=\"#00004d\" ml={2}>\r\n            In Sri Lanka\r\n          </Heading>\r\n        </Box>\r\n        <Box ml=\"30%\" bg=\"#fcde8b\" borderWidth=\"1px\" borderRadius={5}>\r\n          <Heading as=\"h3\" size=\"xs\" color=\"black\" padding=\"2px\" margin=\"2px\">\r\n            Up to {date}\r\n          </Heading>\r\n        </Box>\r\n      </Flex>\r\n      <Flex padding=\"2px\">\r\n        <Box\r\n          bg=\"#007330\"\r\n          color=\"white\"\r\n          borderWidth=\"1px\"\r\n          borderRadius={5}\r\n          padding=\"4px\"\r\n          margin=\"3px\"\r\n          width=\"50%\"\r\n        >\r\n          <Box mr=\"4px\">\r\n            <Heading size=\"xs\" color=\"white\" ml={2}>\r\n              Confirmed corona patients\r\n            </Heading>\r\n          </Box>\r\n\r\n          <Box mr=\"revert\">\r\n            <Text size=\"xs\" color=\"white\" ml={2} mb={0}>\r\n              {totalCases}\r\n            </Text>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          bg=\"#40010e\"\r\n          color=\"white\"\r\n          borderWidth=\"1px\"\r\n          borderRadius={5}\r\n          padding=\"4px\"\r\n          margin=\"3px\"\r\n          width=\"50%\"\r\n        >\r\n          <Box>\r\n            <Heading as=\"h3\" size=\"xs\" color=\"white\" ml={2}>\r\n              No of death\r\n            </Heading>\r\n          </Box>\r\n\r\n          <Box mr=\"revert\">\r\n            <Text as=\"h3\" size=\"xs\" color=\"white\" ml={2}>\r\n              {totalActiveCases}\r\n            </Text>\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default local;\r\n","import React from \"react\";\r\nimport { Flex, Box, Heading, Text } from \"@chakra-ui/react\";\r\nimport \"./local.css\";\r\nfunction local(props) {\r\n  var date = props.covidGlobalCurrent[0];\r\n  var totalCases = props.covidGlobalCurrent[1];\r\n  var newCases = props.covidGlobalCurrent[2];\r\n  var deathCases = props.covidGlobalCurrent[3];\r\n  var newdeathCases = props.covidGlobalCurrent[4];\r\n\r\n  var recoverCases = props.covidGlobalCurrent[5];\r\n\r\n  console.log(props.covidGlobalCurrent);\r\n  return (\r\n    <Box\r\n      boxShadow=\"0 0 2px 2px #ceddeb\"\r\n      borderRadius={5}\r\n      padding=\"4px\"\r\n      width=\"60%\"\r\n      height=\"48%\"\r\n      fontSize=\"10px\"\r\n    >\r\n      <Flex mb=\"9px\">\r\n        <Box>\r\n          <Heading size=\"xs\" color=\"#00004d\" ml={2}>\r\n            In Sri Lanka\r\n          </Heading>\r\n        </Box>\r\n        <Box ml=\"30%\" bg=\"#fcde8b\" borderWidth=\"1px\" borderRadius={5}>\r\n          <Heading as=\"h3\" size=\"xs\" color=\"black\" padding=\"2px\" margin=\"2px\">\r\n            Up to {date}\r\n          </Heading>\r\n        </Box>\r\n      </Flex>\r\n      <Flex padding=\"2px\">\r\n        <Box>\r\n          <Box\r\n            bg=\"#b58b02\"\r\n            color=\"white\"\r\n            borderWidth=\"1px\"\r\n            borderRadius={5}\r\n            // padding=\"5px\"\r\n            margin=\"3px\"\r\n          >\r\n            <Box>\r\n              <Heading as=\"h3\" size=\"xs\" color=\"white\" ml={2}>\r\n                Confirmed corona patients\r\n              </Heading>\r\n            </Box>\r\n\r\n            <Box>\r\n              <Text as=\"h3\" size=\"xs\" color=\"white\" ml={2}>\r\n                {totalCases}\r\n              </Text>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            bg=\"#0202c7\"\r\n            color=\"white\"\r\n            borderWidth=\"1px\"\r\n            borderRadius={5}\r\n            // padding=\"5px\"\r\n            // height=\"100px\"\r\n            margin=\"3px\"\r\n          >\r\n            <Box>\r\n              <Heading as=\"h3\" size=\"xs\" color=\"white\" ml={2}>\r\n                Number of infections today\r\n              </Heading>\r\n            </Box>\r\n\r\n            <Box>\r\n              <Text as=\"h3\" size=\"xs\" color=\"white\" ml={2}>\r\n                {newCases}\r\n              </Text>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box>\r\n          <Box\r\n            bg=\"#350140\"\r\n            color=\"white\"\r\n            borderWidth=\"1px\"\r\n            borderRadius={5}\r\n            // padding=\"5px\"\r\n            margin=\"3px\"\r\n          >\r\n            <Box>\r\n              <Heading as=\"h3\" size=\"xs\" color=\"white\" ml={2}>\r\n                No of Deaths\r\n              </Heading>\r\n            </Box>\r\n\r\n            <Box>\r\n              <Text as=\"h3\" size=\"xs\" color=\"white\" ml={2}>\r\n                {deathCases}\r\n              </Text>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            bg=\"#b52c02\"\r\n            color=\"white\"\r\n            borderWidth=\"1px\"\r\n            borderRadius={5}\r\n            // padding=\"5px\"\r\n            // height=\"100px\"\r\n            margin=\"3px\"\r\n          >\r\n            <Box>\r\n              <Heading as=\"h3\" size=\"xs\" color=\"white\" ml={2}>\r\n                Today no of Deaths\r\n              </Heading>\r\n            </Box>\r\n\r\n            <Box>\r\n              <Text as=\"h3\" size=\"xs\" color=\"white\" ml={2}>\r\n                {newdeathCases}\r\n              </Text>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          bg=\"#019443\"\r\n          color=\"white\"\r\n          borderWidth=\"1px\"\r\n          borderRadius={5}\r\n          padding=\"4px\"\r\n          width=\"40%\"\r\n          margin=\"3px\"\r\n        >\r\n          <Box mr=\"4px\">\r\n            <Heading size=\"xs\" color=\"white\" ml={2}>\r\n              Recovered patients\r\n            </Heading>\r\n          </Box>\r\n\r\n          <Box mr=\"revert\">\r\n            <Text size=\"xs\" color=\"white\" ml={2} mb={0}>\r\n              {recoverCases}\r\n            </Text>\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default local;\r\n","import React, { useState } from \"react\";\r\nimport { Rating } from \"react-simple-star-rating\";\r\n\r\nimport { Box } from \"@chakra-ui/react\";\r\nexport default function MyComponent(props) {\r\n  const [rating, setRating] = useState(0);\r\n  // initial rating value\r\n  // Catch Rating value\r\n  const handleRating = (rate) => {\r\n    console.log(rate);\r\n    setRating(rate);\r\n    props.actionProvider.rateHandle(rate);\r\n    // Some logic\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      ml=\"10%\"\r\n      boxShadow=\"0 0 2px 2px #ceddeb\"\r\n      bg=\"#f2fcfc\"\r\n      width=\"33%\"\r\n      borderWidth=\"1px\"\r\n      borderRadius=\"5px\"\r\n    >\r\n      <Rating onClick={handleRating} ratingValue={rating} /* Rating Props */ />\r\n    </Box>\r\n  );\r\n}\r\n","import { Flex, Heading } from \"@chakra-ui/react\";\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\nimport BotAvatar from \"../Components/botAvatar\";\r\nimport BotIcon from \"../Components/botIcon\";\r\n// import Options from \"../components/Options/Options\";\r\nimport Doctors from \"../Components/Doctors/doctors\";\r\nimport CalenderObject from \"../Components/Calender/calender\";\r\nimport CovidLocalCurrent from \"../Components/Corona/local\";\r\nimport CovidLocalToday from \"../Components/Corona/localToday\";\r\nimport CovidGlobalCurrent from \"../Components/Corona/global\";\r\nimport Rating from \"../Components/Rating/rating\";\r\n\r\nconst config = {\r\n  initialMessages: [\r\n    createChatBotMessage(\r\n      `Hey there 👋👋👋👋\r\n  Thanks for your interest in XYRON.\r\n  Before we begin can I have your name ?`,\r\n      { widget: \"options\" }\r\n    ),\r\n  ],\r\n  botName: \"XYRON\",\r\n  customComponents: {\r\n    header: () => (\r\n      <Flex backgroundColor=\"#00004d\">\r\n        <BotIcon />\r\n        <Heading\r\n          ml=\"10px\"\r\n          as=\"h3\"\r\n          size=\"sm\"\r\n          color=\"#ffffff\"\r\n          fontWeight=\"bold\"\r\n          lineHeight={1.5}\r\n          mt=\"25px\"\r\n        >\r\n          XYRON\r\n        </Heading>\r\n      </Flex>\r\n    ),\r\n    botAvatar: (props) => <BotAvatar {...props} />,\r\n  },\r\n  state: {\r\n    currentState: [\"normal\"],\r\n    sympthoms: [],\r\n    doctors: [],\r\n    channel: [],\r\n    date: [],\r\n    covidLocalCurrent: [],\r\n    covidLocalToday: [],\r\n    covidGlobalCurrent: [],\r\n  },\r\n  widgets: [\r\n    {\r\n      widgetName: \"doctors\",\r\n      widgetFunc: (props) => <Doctors {...props} />,\r\n      mapStateToProps: [\"doctors\"],\r\n    },\r\n    {\r\n      widgetName: \"calender\",\r\n      widgetFunc: (props) => <CalenderObject {...props} />,\r\n    },\r\n    {\r\n      widgetName: \"covidLocalCurrent\",\r\n      widgetFunc: (props) => <CovidLocalCurrent {...props} />,\r\n      mapStateToProps: [\"covidLocalCurrent\"],\r\n    },\r\n    {\r\n      widgetName: \"covidLocalToday\",\r\n      widgetFunc: (props) => <CovidLocalToday {...props} />,\r\n      mapStateToProps: [\"covidLocalToday\"],\r\n    },\r\n    {\r\n      widgetName: \"covidGlobalCurrent\",\r\n      widgetFunc: (props) => <CovidGlobalCurrent {...props} />,\r\n      mapStateToProps: [\"covidGlobalCurrent\"],\r\n    },\r\n    {\r\n      widgetName: \"rating\",\r\n      widgetFunc: (props) => <Rating {...props} />,\r\n    },\r\n  ],\r\n\r\n  //   widgets: [\r\n  //     {\r\n  //       widgetName: \"options\",\r\n  //       widgetFunc: (props) => <Options {...props} />,\r\n  //     },\r\n  //     {\r\n  //       widgetName: \"predictDisease\",\r\n  //       widgetFunc: (props) => <Options {...props} />,\r\n  //     },\r\n  //   ],\r\n  customStyles: {\r\n    botMessageBox: {\r\n      backgroundColor: \"#E3F6FC\",\r\n      color: \"black\",\r\n    },\r\n    userMessageBox: {\r\n      backgroundColor: \"#E3F6FC\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default config;\r\n","class MessageParser {\r\n  constructor(actionProvider, state) {\r\n    this.actionProvider = actionProvider;\r\n    this.state = state;\r\n    this.disease = false;\r\n    this.num = 0;\r\n  }\r\n\r\n  parse(message) {\r\n    var siz = this.state.currentState.length - 1;\r\n    console.log(this.state);\r\n\r\n    if (\r\n      this.state.currentState[siz] == \"predict\" &&\r\n      this.state.sympthoms.length < 4\r\n    ) {\r\n      this.actionProvider.addDisease(message);\r\n      if (this.state.sympthoms.length == 3) {\r\n        this.actionProvider.predictHandler(this.state.sympthoms);\r\n      }\r\n    } else if (this.state.currentState[siz] == \"findDoctor\") {\r\n      this.actionProvider.findDoctor(message);\r\n    } else if (this.state.currentState[siz] == \"feedback\") {\r\n      this.actionProvider.sendFeedback(message);\r\n    } else if (this.state.currentState[siz] == \"channel\") {\r\n      const cha = {\r\n        id: this.state.channel[0].doctorID,\r\n        name: this.state.channel[0].name,\r\n        hospital: this.state.channel[0].hospital,\r\n        date: this.state.date[0],\r\n        time: message,\r\n      };\r\n      // console.log(cha);\r\n      this.actionProvider.channelDoctor(message, cha);\r\n    } else {\r\n      this.actionProvider.helloHandler(message);\r\n    }\r\n\r\n    // var len = this.state.messages.length;\r\n    // // console.log(this.state);\r\n    // if (len == 1000) {\r\n    //   console.log(this.state.messages[2 * len - 3].message);\r\n    // }\r\n    // // console.log(this.state.currentState[this.state.currentState.length - 1]);\r\n    // this.num += 1;\r\n    // this.num = this.num + 1;\r\n    // // console.log(this.num);\r\n    // console.log(this.state);\r\n  }\r\n}\r\n\r\nexport default MessageParser;\r\n","import Axios from \"axios\";\r\nimport MessageParser from \"./messageParser\";\r\n\r\nclass ActionProvider {\r\n  constructor(createChatBotMessage, setStateFunc, createClientMessage) {\r\n    this.createChatBotMessage = createChatBotMessage;\r\n    this.setState = setStateFunc;\r\n    this.createClientMessage = createClientMessage;\r\n    this.num = 0;\r\n  }\r\n\r\n  setChatbotMessage = (message) => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      messages: [...state.messages, message],\r\n    }));\r\n  };\r\n\r\n  setChatbotState = (s) => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      currentState: [...state.currentState, s],\r\n    }));\r\n  };\r\n\r\n  addDisease = (dis) => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      sympthoms: [...state.sympthoms, dis],\r\n    }));\r\n  };\r\n\r\n  removeDisease = () => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      sympthoms: [],\r\n    }));\r\n  };\r\n  removeChannel = () => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      channel: [],\r\n    }));\r\n  };\r\n  diseaseHandler = (message) => {\r\n    this.addDisease(message);\r\n  };\r\n\r\n  rateHandle = (message) => {\r\n    var msg;\r\n    if (message < 3) {\r\n      msg = this.createChatBotMessage(\r\n        \"Hmm... there is a problem. Please can you give me a feedback ?\"\r\n      );\r\n      this.setChatbotState(\"feedback\");\r\n    } else {\r\n      msg = this.createChatBotMessage(\"excellent\");\r\n      this.setChatbotState(\"normal\");\r\n    }\r\n    this.setChatbotMessage(msg);\r\n  };\r\n\r\n  sendFeedback = (message) => {\r\n    var msg;\r\n    Axios.post(\"http://127.0.0.1:5000/sendFeedback\", {\r\n      feedback: message,\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n      msg = this.createChatBotMessage(\"Thank you for feedback\");\r\n      this.setChatbotMessage(msg);\r\n    });\r\n  };\r\n\r\n  predictHandler = (message) => {\r\n    var msg;\r\n    Axios.post(\"http://127.0.0.1:5000/predict\", { diseases: message }).then(\r\n      (response) => {\r\n        console.log(message);\r\n        if (response.data.members == 0) {\r\n          msg = this.createChatBotMessage(\r\n            \"Please re-enter 4 symptoms or change the order of symptoms\"\r\n          );\r\n          // this.setChatbotState(\"predict\");\r\n          this.removeDisease();\r\n        } else {\r\n          msg = this.createChatBotMessage(response.data.members);\r\n          this.setChatbotState(\"normal\");\r\n          this.removeDisease();\r\n        }\r\n        console.log(response.data.members);\r\n        this.setChatbotMessage(msg);\r\n      }\r\n    );\r\n  };\r\n  findDoctor = (message) => {\r\n    var msg;\r\n    Axios.post(\"http://127.0.0.1:5000/getDoc\", { specialist: message }).then(\r\n      (response) => {\r\n        console.log(message);\r\n        // msg = this.createChatBotMessage(response.data.members);\r\n        // this.setChatbotMessage(msg);\r\n        if (response.data.er == 1) {\r\n          msg = this.createChatBotMessage(\"Please re-enter the specialty\");\r\n          this.setChatbotMessage(msg);\r\n        } else {\r\n          console.log(response.data.doc);\r\n          this.setState((state) => ({ ...state, doctors: response.data.doc }));\r\n          this.setChatbotState(\"normal\");\r\n          msg = this.createChatBotMessage(\"Ok sure\", { widget: \"doctors\" });\r\n          this.setChatbotMessage(msg);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  helloHandler = (message) => {\r\n    var msg;\r\n    Axios.post(\"http://127.0.0.1:5000/reply\", { msg: message }).then(\r\n      (response) => {\r\n        console.log(response.data.members);\r\n        if (response.data.members == \"predict\") {\r\n          this.setChatbotState(\"predict\");\r\n          msg = this.createChatBotMessage(\"Please Enter 4 symptoms\");\r\n          this.setChatbotMessage(msg);\r\n        } else if (response.data.members == \"findDoctor\") {\r\n          this.setChatbotState(\"findDoctor\");\r\n          msg = this.createChatBotMessage(\"Please enter the specialist ?\");\r\n          this.setChatbotMessage(msg);\r\n        } else if (response.data.members == \"covidLocalCurrent\") {\r\n          this.setChatbotState(\"covidLocalCurrent\");\r\n          console.log(\"covidLocalCurrent\");\r\n          this.getCovidData(\"covidLocalCurrent\");\r\n        } else if (response.data.members == \"covidLocalToday\") {\r\n          this.setChatbotState(\"covidLocalToday\");\r\n          console.log(\"covidLocalToday\");\r\n          this.getCovidData(\"covidLocalToday\");\r\n        } else if (response.data.members == \"covidGlobalCurrent\") {\r\n          this.setChatbotState(\"covidGlobalCurrent\");\r\n          console.log(\"covidGlobalCurrent\");\r\n          this.getCovidData(\"covidGlobalCurrent\");\r\n        } else if (response.data.members == \"thanks\") {\r\n          this.setChatbotState(\"thanks\");\r\n          console.log(\"thanks\");\r\n          msg = this.createChatBotMessage(\r\n            \"You are welcome ! If you are satisfied with our service please rate us\",\r\n            {\r\n              widget: \"rating\",\r\n            }\r\n          );\r\n          this.setChatbotMessage(msg);\r\n        } else {\r\n          msg = this.createChatBotMessage(response.data.members);\r\n          this.setChatbotMessage(msg);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  // Axios.get(\"http://127.0.0.1:5000/chat\").then((response) => {\r\n  //   console.log(response.data.members[0]);\r\n  //   msg = this.createChatBotMessage(response.data.members[1]);\r\n  //   this.setChatbotMessage(msg);\r\n  // });\r\n  // var n = msg.toString();\r\n  // handleJavascriptQuiz = () => {\r\n  //   const msg = this.createChatBotMessage(\"Please Enter three symptom\");\r\n  //   this.setChatbotMessage(msg);\r\n  // };\r\n\r\n  selectDoctor = (docID) => {\r\n    console.log(docID);\r\n    this.setState((state) => ({\r\n      ...state,\r\n      channel: [state.doctors[docID]],\r\n    }));\r\n    const msg2 = this.createChatBotMessage(\"Sure. Please select the date\", {\r\n      widget: \"calender\",\r\n    });\r\n    this.setChatbotState(\"channel\");\r\n    this.setChatbotMessage(msg2);\r\n  };\r\n\r\n  selectTime = (value) => {\r\n    const msg1 = this.createChatBotMessage(\r\n      \"Sure wait a minite and please enter time (9.00 AM - 4.00 PM)\"\r\n    );\r\n    var date =\r\n      value.getFullYear() +\r\n      \"-0\" +\r\n      (value.getMonth() + 1) +\r\n      \"-\" +\r\n      value.getDate();\r\n\r\n    console.log(date);\r\n    this.setState((state) => ({\r\n      ...state,\r\n      date: [date],\r\n    }));\r\n\r\n    this.setChatbotMessage(msg1);\r\n  };\r\n  channelDoctor = (message, chObject) => {\r\n    var msg;\r\n    Axios.post(\"http://127.0.0.1:5000/channelDoc\", { channel: chObject }).then(\r\n      (response) => {\r\n        console.log(message);\r\n        if (response.data.er == 1) {\r\n          msg = this.createChatBotMessage(\r\n            \"Please can you select a another time\"\r\n          );\r\n          this.setChatbotMessage(msg);\r\n        } else {\r\n          console.log(response.data);\r\n          this.setChatbotState(\"normal\");\r\n          msg = this.createChatBotMessage(\r\n            \"Your channel details have been recorded...\"\r\n          );\r\n          this.setChatbotMessage(msg);\r\n        }\r\n      }\r\n    );\r\n  };\r\n  getCovidData = (message) => {\r\n    var msg;\r\n    Axios.get(\"https://www.hpb.health.gov.lk/api/get-current-statistical\").then(\r\n      (response) => {\r\n        // console.log(response.data.data.update_date_time);\r\n\r\n        // msg = this.createChatBotMessage(response.data.members);\r\n        // this.setChatbotMessage(msg);\r\n        if (message == \"covidLocalCurrent\") {\r\n          this.setState((state) => ({\r\n            ...state,\r\n            covidLocalCurrent: [\r\n              ...state.covidLocalCurrent,\r\n              response.data.data.update_date_time,\r\n              response.data.data.local_total_cases,\r\n              response.data.data.local_total_number_of_individuals_in_hospitals,\r\n              response.data.data.local_recovered,\r\n              response.data.data.local_deaths,\r\n            ],\r\n          }));\r\n          msg = this.createChatBotMessage(\r\n            \"Here is the current situation of Sri Lanka\",\r\n            { widget: \"covidLocalCurrent\" }\r\n          );\r\n          this.setChatbotMessage(msg);\r\n        } else if (message == \"covidLocalToday\") {\r\n          this.setState((state) => ({\r\n            ...state,\r\n            covidLocalToday: [\r\n              ...state.covidLocalToday,\r\n              response.data.data.update_date_time,\r\n              response.data.data.local_new_cases,\r\n              response.data.data.local_new_deaths,\r\n            ],\r\n          }));\r\n          msg = this.createChatBotMessage(\r\n            \"Here is the today situation of Sri Lanka\",\r\n            { widget: \"covidLocalToday\" }\r\n          );\r\n          this.setChatbotMessage(msg);\r\n        } else if (message == \"covidGlobalCurrent\") {\r\n          this.setState((state) => ({\r\n            ...state,\r\n            covidGlobalCurrent: [\r\n              ...state.covidGlobalCurrent,\r\n              response.data.data.update_date_time,\r\n              response.data.data.global_total_cases,\r\n              response.data.data.global_new_cases,\r\n              response.data.data.global_deaths,\r\n              response.data.data.global_new_deaths,\r\n              response.data.data.global_recovered,\r\n            ],\r\n          }));\r\n          msg = this.createChatBotMessage(\r\n            \"Here is the today situation in global\",\r\n            { widget: \"covidGlobalCurrent\" }\r\n          );\r\n          this.setChatbotMessage(msg);\r\n        }\r\n        // else {\r\n        //   console.log(response.data.doc);\r\n        //   this.setState((state) => ({ ...state, doctors: response.data.doc }));\r\n        //   this.setChatbotState(\"normal\");\r\n        //   msg = this.createChatBotMessage(\"Ok sure\", { widget: \"doctors\" });\r\n        //   this.setChatbotMessage(msg);\r\n        // }\r\n      }\r\n    );\r\n  };\r\n}\r\n\r\nexport default ActionProvider;\r\n","import React from \"react\";\r\nimport { Flex, Box, Link, Image, Heading, Stack } from \"@chakra-ui/react\";\r\nimport config from \"./Chatbot/config.js\";\r\nimport MessageParser from \"./Chatbot/messageParser.js\";\r\nimport ActionProvider from \"./Chatbot/actionProvider\";\r\nimport Chatbot from \"react-chatbot-kit\";\r\nimport \"./index.css\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Chat(props) {\r\n  return (\r\n    <Box>\r\n      <Flex\r\n        mt={120}\r\n        align=\"center\"\r\n        justify={{ base: \"center\", md: \"space-around\", xl: \"space-between\" }}\r\n        direction={{ base: \"column-reverse\", md: \"row\" }}\r\n        wrap=\"no-wrap\"\r\n        minH=\"70vh\"\r\n        px={8}\r\n        mb={16}\r\n      >\r\n        <Stack\r\n          spacing={7}\r\n          w={{ base: \"80%\", md: \"40%\" }}\r\n          align={[\"center\", \"center\", \"flex-start\", \"flex-start\"]}\r\n        >\r\n          <Box w=\"500px\" mb={{ base: 12, md: 0 }}>\r\n            {/* TODO: Make this change every X secs */}\r\n            <Image src=\"../Healthcare/bot.jpg\" size=\"100%\" />\r\n          </Box>\r\n          <Heading\r\n            as=\"h1\"\r\n            size=\"xl\"\r\n            fontWeight=\"bold\"\r\n            color=\"blue.900\"\r\n            textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n          >\r\n            XYRON HealthCare Chatbot\r\n          </Heading>\r\n          <Heading\r\n            as=\"h3\"\r\n            size=\"sm\"\r\n            color=\"primary.800\"\r\n            opacity=\"0.8\"\r\n            fontWeight=\"normal\"\r\n            lineHeight={1.5}\r\n            textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n          >\r\n            There are 3 chatbots for 3 domains. Telecommunication service,\r\n            healthcare, and public transport are the 3 services that we provide.\r\n            Chatbots are built with the latest Artificial Intelligence\r\n            technologies to give you a better experience. 24/7 Available\r\n          </Heading>\r\n        </Stack>\r\n        <Box>\r\n          <Chatbot\r\n            config={config}\r\n            messageParser={MessageParser}\r\n            actionProvider={ActionProvider}\r\n          />\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import { Flex, Img } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst BotAvatar = () => {\r\n  return (\r\n    <Flex align=\"center\">\r\n      <Img ml=\"1.5rem\" src=\"../logo2.png\" alt=\"logo\" h=\"40px\" w=\"40px\" />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default BotAvatar;\r\n","import { Flex, Img } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst BotIcon = () => {\r\n  return (\r\n    <Flex align=\"center\">\r\n      <Img ml=\"1.5rem\" src=\"../logo2.png\" alt=\"logo\" h=\"80px\" w=\"80px\" />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default BotIcon;\r\n","import { Flex, Heading } from \"@chakra-ui/react\";\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\nimport BotAvatar from \"../Components/botAvatar\";\r\nimport BotIcon from \"../Components/botIcon\";\r\n// import Options from \"../components/Options/Options\";\r\nimport Methods from \"../Components/Methods/Methods\";\r\n\r\nconst config = {\r\n  initialMessages: [\r\n    createChatBotMessage(\r\n      `Hey there 👋👋👋👋\r\n  Thanks for your interest in XYRON.\r\n  Before we begin can I have your name ?`,\r\n      { widget: \"options\" }\r\n    ),\r\n  ],\r\n  botName: \"XYRON\",\r\n  customComponents: {\r\n    header: () => (\r\n      <Flex backgroundColor=\"#00004d\">\r\n        <BotIcon />\r\n        <Heading\r\n          ml=\"10px\"\r\n          as=\"h3\"\r\n          size=\"sm\"\r\n          color=\"#ffffff\"\r\n          fontWeight=\"bold\"\r\n          lineHeight={1.5}\r\n          mt=\"25px\"\r\n        >\r\n          XYRON\r\n        </Heading>\r\n      </Flex>\r\n    ),\r\n    botAvatar: (props) => <BotAvatar {...props} />,\r\n  },\r\n  state: {\r\n    currentState: [\"normal\"],\r\n    from: [],\r\n    to: [],\r\n    mode: [],\r\n    schedule: [],\r\n    methods: [],\r\n    schedules: [],\r\n  },\r\n  widgets: [\r\n      // {\r\n      //   widgetName: \"options\",\r\n      //   widgetFunc: (props) => <Options {...props} />,\r\n      // },\r\n  ],\r\n  //   widgets: [\r\n  //     {\r\n  //       widgetName: \"options\",\r\n  //       widgetFunc: (props) => <Options {...props} />,\r\n  //     },\r\n  //     {\r\n  //       widgetName: \"predictDisease\",\r\n  //       widgetFunc: (props) => <Options {...props} />,\r\n  //     },\r\n  //   ],\r\n  customStyles: {\r\n    botMessageBox: {\r\n      backgroundColor: \"#E3F6FC\",\r\n      color: \"black\",\r\n    },\r\n    userMessageBox: {\r\n      backgroundColor: \"#E3F6FC\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default config;\r\n","class MessageParser {\r\n  constructor(actionProvider, state) {\r\n    this.actionProvider = actionProvider;\r\n    this.state = state;\r\n    this.disease = false;\r\n    this.num = 0;\r\n  }\r\n\r\n  parse(message) {\r\n    var siz = this.state.currentState.length - 1;\r\n    if ( this.state.currentState[siz] == \"travel\"){\r\n      this.actionProvider.fromHandler(message, this.state);\r\n    }\r\n    else{\r\n    this.actionProvider.messageHandler(message, this.state);\r\n    }\r\n\r\n  }\r\n\r\n  // parse(message) {\r\n  //   var siz = this.state.currentState.length - 1;\r\n  //   console.log(this.state); \r\n  //   if (\r\n  //     this.state.currentState[siz] == \"travel\" &&\r\n  //     this.state.to.length == 1 \r\n  //   ) { if (this.state.from.length == 1)        \r\n  //         { \r\n  //           this.actionProvider.methodsHandler(this.state.to, this.state.from, this.state.method);\r\n  //       } else {\r\n  //     // ask where to start from\r\n  //   }    \r\n  //    } \r\n  //   else {\r\n  //     this.actionProvider.messageHandler(message);\r\n  //   }\r\n  // }\r\n}\r\n\r\nexport default MessageParser;","import Axios from \"axios\";\r\nimport MessageParser from \"./messageParser\";\r\n\r\nclass ActionProvider {\r\n  constructor(createChatBotMessage, setStateFunc, createClientMessage) {\r\n    this.createChatBotMessage = createChatBotMessage;\r\n    this.setState = setStateFunc;\r\n    this.createClientMessage = createClientMessage;\r\n    this.num = 0;\r\n  }\r\n\r\n  setChatbotMessage = (message) => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      messages: [...state.messages, message],\r\n    }));\r\n  };\r\n\r\n  setChatbotState = (s) => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      currentState: [...state.currentState, s],\r\n    }));\r\n  };\r\n\r\n  addDisease = (dis) => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      sympthoms: [...state.sympthoms, dis],\r\n    }));\r\n  };\r\n\r\n  removeDisease = () => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      sympthoms: [],\r\n    }));\r\n  };\r\n\r\n  addFrom = (station) => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      from: [...state.from, station],\r\n    }));\r\n  };\r\n\r\n  removeFrom = () => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      from: [],\r\n    }));\r\n  };\r\n\r\n  addTo = (station) => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      to: [...state.to, station],\r\n    }));\r\n  };\r\n\r\n  removeTo = () => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      to: [],\r\n    }));\r\n  };\r\n\r\n  addMode = (mode) => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      mode: [...state.mode, mode],\r\n    }));\r\n  };\r\n\r\n  removeMode = () => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      mode: [],\r\n    }));\r\n  };\r\n\r\n  diseaseHandler = (message) => {\r\n    this.addDisease(message);\r\n  };\r\n\r\n  predictHandler = (message) => {\r\n    var msg;\r\n    Axios.post(\"http://127.0.0.1:5000/predict\", { diseases: message }).then(\r\n      (response) => {\r\n        console.log(message);\r\n        msg = this.createChatBotMessage(response.data.members);\r\n        this.setChatbotMessage(msg);\r\n        console.log(response.data.members);\r\n      }\r\n    );\r\n  };\r\n\r\n  // Transportation Only\r\n\r\n\r\n  methodHandler = (to, from, mode) => {\r\n    console.log(to, from , mode);\r\n    // Axios.post(\"http://127.0.0.1:5000/travel\", { to: to, from: from, mode: mode, }).then(\r\n    //   (response) => {\r\n    //     console.log(response);\r\n    //     msg = this.createChatBotMessage(response.data.members);\r\n    //     this.setChatbotMessage(msg);\r\n    //     console.log(response.data.members);\r\n    //   }\r\n    // );\r\n\r\n\r\n    // clear current state, from to and method\r\n  };\r\n\r\n  fromHandler = (message, state) => {\r\n    var msg;\r\n    console.log(message);\r\n    console.log(state.from.length);\r\n    if (state.from.length != 0) {\r\n      this.methodHandler(state.to[0], state.from[0], message.toLowerCase())\r\n    } else {\r\n      console.log('came to else');\r\n      this.addMode(message)\r\n      this.setChatbotState(\"travelFrom\")\r\n      msg = this.createChatBotMessage('What are you starting the journey from? ');\r\n      this.setChatbotMessage(msg);\r\n    }\r\n  }\r\n\r\n  stationHandler = (message) => {\r\n    var wrds = message.split(' ').map(v => v.toLowerCase());\r\n    const countOccurrences = (arr, val) => arr.reduce((a, v) => (v === val ? a + 1 : a), 0);\r\n    for (let i = 0; i < wrds.length; i++) {\r\n      if (wrds[i] == 'to' && countOccurrences(wrds, 'to') >1) { \r\n        wrds.splice(i, 1);\r\n        console.log(wrds);\r\n        break; \r\n      }\r\n    }\r\n    if ( wrds.includes('from') ) {\r\n      this.addFrom(wrds[wrds.indexOf('from') + 1]) ;\r\n    }\r\n    if ( wrds.includes('to') ) {\r\n      this.addTo(wrds[wrds.indexOf('to') + 1]) ;\r\n    }\r\n  };\r\n\r\n  messageHandler = (message, state) => {\r\n    var msg;\r\n    Axios.post(\"http://127.0.0.1:5000/reply\", { msg: message }).then(\r\n      (response) => {\r\n        if (response.data.members == \"travel\") {\r\n          console.log(response.data.members);\r\n          this.setChatbotState(\"travel\");\r\n          this.stationHandler(message);\r\n          // if from is not set, ask to set from\r\n          // if (!from) {\r\n          //   msg = this.createChatBotMessage(\"What is the starting point?\");\r\n          // }\r\n          // call database and get available options\r\n          // this.methodHandler(to, from);\r\n          // display options\r\n          msg = this.createChatBotMessage('What\\'s your preferred method? bus or train? ');\r\n        } else {\r\n          msg = this.createChatBotMessage(response.data.members);\r\n        }\r\n        this.setChatbotMessage(msg);\r\n      }\r\n    );\r\n  };\r\n\r\n  // Axios.get(\"http://127.0.0.1:5000/chat\").then((response) => {\r\n  //   console.log(response.data.members[0]);\r\n  //   msg = this.createChatBotMessage(response.data.members[1]);\r\n  //   this.setChatbotMessage(msg);\r\n  // });\r\n  // var n = msg.toString();\r\n  // handleJavascriptQuiz = () => {\r\n  //   const msg = this.createChatBotMessage(\"Please Enter three symptom\");\r\n  //   this.setChatbotMessage(msg);\r\n  // };\r\n}\r\n  \r\nexport default ActionProvider;","import React from \"react\";\r\nimport { Flex, Box, Link, Image, Heading, Stack } from \"@chakra-ui/react\";\r\nimport config from \"./Chatbot/config.js\";\r\nimport MessageParser from \"./Chatbot/messageParser.js\";\r\nimport ActionProvider from \"./Chatbot/actionProvider\";\r\nimport Chatbot from \"react-chatbot-kit\";\r\nimport \"./index.css\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Chat(props) {\r\n  return (\r\n    <Box>\r\n      <Flex\r\n        mt={120}\r\n        align=\"center\"\r\n        justify={{ base: \"center\", md: \"space-around\", xl: \"space-between\" }}\r\n        direction={{ base: \"column-reverse\", md: \"row\" }}\r\n        wrap=\"no-wrap\"\r\n        minH=\"70vh\"\r\n        px={8}\r\n        mb={16}\r\n      >\r\n        <Stack\r\n          spacing={7}\r\n          w={{ base: \"80%\", md: \"40%\" }}\r\n          align={[\"center\", \"center\", \"flex-start\", \"flex-start\"]}\r\n        >\r\n          <Box w=\"500px\" mb={{ base: 12, md: 0 }}>\r\n            {/* TODO: Make this change every X secs */}\r\n            {/* <Image src=\"../Healthcare/bot.jpg\" size=\"100%\" /> */}\r\n            <Image src=\"../Transporation/bot.png\" size=\"100%\" />\r\n          </Box>\r\n          <Heading\r\n            as=\"h1\"\r\n            size=\"xl\"\r\n            fontWeight=\"bold\"\r\n            color=\"blue.900\"\r\n            textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n          >\r\n            XYRON Transport Chatbot\r\n          </Heading>\r\n          <Heading\r\n            as=\"h3\"\r\n            size=\"sm\"\r\n            color=\"primary.800\"\r\n            opacity=\"0.8\"\r\n            fontWeight=\"normal\"\r\n            lineHeight={1.5}\r\n            textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n          >\r\n            Chat with XYRON Transport Chatbot and let him know \r\n            what you are looking for. He will tell you how to get to places. \r\n            He can get you scheduled times of trains. And of course if you have any complaints, \r\n            just let him know.\r\n          </Heading>\r\n        </Stack>\r\n        <Box>\r\n          <Chatbot\r\n            config={config}\r\n            messageParser={MessageParser}\r\n            actionProvider={ActionProvider}\r\n          />\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import { Flex, Img } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst BotAvatar = () => {\r\n  return (\r\n    <Flex align=\"center\">\r\n      <Img ml=\"1.5rem\" src=\"../logo2.png\" alt=\"logo\" h=\"40px\" w=\"40px\" />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default BotAvatar;\r\n","import { Flex, Img } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst BotIcon = () => {\r\n  return (\r\n    <Flex align=\"center\">\r\n      <Img ml=\"1.5rem\" src=\"../logo2.png\" alt=\"logo\" h=\"80px\" w=\"80px\" />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default BotIcon;\r\n","import React from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst Options = props => {\r\n  return (\r\n    <div className=\"options\">\r\n      <h1 className=\"options-header\">{props.title}</h1>\r\n      <div className=\"options-container\">\r\n        {props.options.map(option => {\r\n          return (\r\n            <div\r\n              className=\"option-item\"\r\n              onClick={option.handler}\r\n              key={option.id}\r\n            >\r\n              {option.name}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Options from \"../Options/Options\";\r\n\r\nconst GeneralOptions = props => {\r\n  const [provider, setProvider] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.post(\"http://localhost:5000/getUser\", {\r\n      userID : JSON.parse(localStorage.getItem(\"user\"))[\"user_id\"] \r\n  }).then((response) => {\r\n    console.log(response.data.user)\r\n    setProvider(response.data.user.sim_type);\r\n    });\r\n  }, []);\r\n\r\n  const complaint = () => {\r\n    props.actionProvider.handleComplaint(provider)\r\n  }\r\n  const options = [\r\n    {\r\n      name: \"Data Packages\",\r\n      handler: props.actionProvider.handleDataPackage,\r\n      id: 1\r\n    },\r\n    {\r\n      name: \"View Activated Packages\",\r\n      handler: props.actionProvider.viewActivatedPackages,\r\n      id: 2\r\n    },\r\n    {\r\n      name: \"View Activated Packages By Date\",\r\n      handler: props.actionProvider.displayCalendarForPackages,\r\n      id: 3\r\n    },\r\n    { name: \"Complaints\", handler: complaint, id: 4 },\r\n    {\r\n      name: \"Current Balance\",\r\n      handler: props.actionProvider.getCurrentBalance,\r\n      id: 5\r\n    },\r\n    {\r\n      name: \"View Crypto Price\",\r\n      handler: props.actionProvider.viewCryptoCurrencyPrice,\r\n      id: 6\r\n    },\r\n    {\r\n      name: \"View Crypto Price IN LKR\",\r\n      handler: props.actionProvider.viewCryptoCurrencyPriceInLKR,\r\n      id: 7\r\n    },\r\n    {\r\n      name: \"1 USDT = LKR?\",\r\n      handler: props.actionProvider.viewLKRValue,\r\n      id: 8\r\n    },\r\n    {\r\n      name: \"View Currency Values\",\r\n      handler: props.actionProvider.viewCurrencyValues,\r\n      id: 9\r\n    }\r\n  ];\r\n  return <Options options={options} title=\"General Options\" {...props} />;\r\n};\r\n\r\nexport default GeneralOptions;\r\n","import React from \"react\";\r\n\r\nimport Options from \"../Options/Options\";\r\n\r\nconst GeneralOptions = (props) => {\r\n  const mobitel = () => {\r\n    props.actionProvider.handleProvider(\"Mobitel\");\r\n  }\r\n  const dialog = () => {\r\n    props.actionProvider.handleProvider(\"Dialog\");\r\n  }\r\n  const hutch = () => {\r\n    props.actionProvider.handleProvider(\"Hutch\");\r\n  }\r\n  const airtel = () => {\r\n    props.actionProvider.handleProvider(\"Airtel\");\r\n  }\r\n  const options = [\r\n    {\r\n      name: \"Mobitel\",\r\n      handler: mobitel,\r\n      id: 1,\r\n    },\r\n    {\r\n        name: \"Dialog\",\r\n        handler: dialog,\r\n        id: 2,\r\n      },\r\n    {\r\n      name: \"Airtel\",\r\n      handler: airtel,\r\n      id: 3,\r\n    },\r\n    {\r\n      name: \"Hutch\",\r\n      handler: hutch,\r\n      id: 4,\r\n    },\r\n  ];\r\n  return <Options options={options} title=\"Select Internet Service Provider\" {...props} />;\r\n};\r\n\r\nexport default GeneralOptions;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { Box, Center, Divider, Flex, Heading, Text } from \"@chakra-ui/layout\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\nimport { FaAngrycreative, FaBeer, FaMarker, FaTelegram } from \"react-icons/fa\";\r\nimport \"./PackageDetails.css\";\r\n\r\nconst PackageDetails = ({ selectedPackage, provider, setState, packageDetails, actionProvider }) => {\r\n  // console.log(packageDetails[0]);\r\n\r\n  const activatePackage = () => {\r\n    // console.log(\"provider\")\r\n    // console.log(provider)\r\n\r\n      actionProvider.activateDataPackage(selectedPackage.name, provider);\r\n  }  \r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        // borderColor=\"red\"\r\n        // borderStyle=\"solid\"\r\n        // borderWidth=\"2px\"\r\n        h=\"320px\"\r\n        w=\"50%\"\r\n        bg=\"#2898EC\"\r\n        borderRadius=\"5px\"\r\n        p=\"10px\"\r\n        pl=\"15px\"\r\n      >\r\n        <Heading as=\"h\" size=\"md\" color=\"white\" p=\"5px\" mb={6}>\r\n          {packageDetails[0].name}\r\n          <Button\r\n            rightIcon={<ArrowForwardIcon />}\r\n            colorScheme=\"pink\"\r\n            variant=\"solid\"\r\n            onClick={activatePackage}\r\n            ml={5}\r\n          >\r\n            <FaTelegram />\r\n            Activate\r\n          </Button>\r\n        </Heading>\r\n\r\n        <Divider orientation=\"horizontal\" />\r\n\r\n        <Heading as=\"h6\" size=\"xs\" color=\"white\" p=\"5px\">\r\n          Subscription fee\r\n          <Heading as=\"h6\" size=\"sm\" color=\"white\" p=\"5px\">\r\n            Rs. {packageDetails[0].fee}\r\n          </Heading>\r\n        </Heading>\r\n\r\n        <Divider orientation=\"horizontal\" />\r\n\r\n        <Heading as=\"h6\" size=\"xs\" color=\"white\" p=\"5px\">\r\n          Anytime Bundle\r\n          <Heading as=\"h6\" size=\"sm\" color=\"white\" p=\"5px\">\r\n            {packageDetails[0].anytime_data} MB\r\n          </Heading>\r\n        </Heading>\r\n\r\n        <Divider orientation=\"horizontal\" />\r\n\r\n        <Heading as=\"h6\" size=\"xs\" color=\"white\" p=\"5px\">\r\n          Night Time Bonus\r\n          <Heading as=\"h6\" size=\"sm\" color=\"white\" p=\"5px\">\r\n            {packageDetails[0].night_time_data} MB\r\n          </Heading>\r\n        </Heading>\r\n\r\n        <Divider orientation=\"horizontal\" />\r\n\r\n        <Heading as=\"h6\" size=\"xs\" color=\"white\" p=\"5px\">\r\n          {packageDetails[0].details}\r\n        </Heading>\r\n\r\n        <Divider orientation=\"horizontal\" />\r\n\r\n        <Heading as=\"h6\" size=\"xs\" color=\"white\" p=\"5px\">\r\n          Validity Period -{packageDetails[0].validity_period} Days\r\n        </Heading>\r\n\r\n        <Divider orientation=\"horizontal\" />\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PackageDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./PackageTypes.css\";\r\n\r\nconst PackageTypes = ({ packageTypes, selectedPackageType, provider, setState, actionProvider }) => {\r\n  const [displaySelector, toggleDisplaySelector] = useState(true);\r\n  const [packagess, setPackages] = useState([]);\r\n\r\n  const packageOptions = packageTypes;\r\n\r\n  useEffect(() => {\r\n    setPackages(packageOptions);\r\n    setState((state) => ({\r\n      ...state,\r\n      selectedPackageType: packageOptions[0],\r\n    }))\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    // console.log(packagess)\r\n    setState((state) => ({\r\n      ...state,\r\n      selectedPackageType: packagess.find(\r\n        (packg) => packg.id === e.target.value\r\n      ),\r\n    }));\r\n    \r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    // console.log(selectedPackageType.package_type)\r\n    actionProvider.selectPackageType(selectedPackageType.package_type, provider);\r\n    toggleDisplaySelector((prevState) => !prevState);\r\n  };\r\n\r\n  if (!packagess) return null;\r\n\r\n  const createPackageOptions = () => {\r\n    return packagess.map((item) => {\r\n      return (\r\n        <option key={item.id} value={item.id}>\r\n          {item.package_type}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"packages-selector-container\">\r\n          <>\r\n            {\" \"}\r\n            <h2 className=\"packages-selector-heading\">Select Package Type you want to view</h2>\r\n            <select\r\n              className=\"packages-selector\"\r\n              value={selectedPackageType.id}\r\n              onChange={handleSubmit}\r\n            >\r\n              {createPackageOptions()}\r\n            </select>\r\n            <button className=\"packages-button-confirm\" onClick={handleConfirm}>\r\n              View Packages\r\n            </button>\r\n          </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PackageTypes;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./Packages.css\";\r\n\r\nconst Packages = ({packageType, provider, packages, selectedPackage, setState, actionProvider }) => {\r\n  const [displaySelector, toggleDisplaySelector] = useState(true);\r\n  const [packagess, setPackages] = useState([]);\r\n\r\n  const packageOptions = packages;\r\n\r\n  useEffect(() => {\r\n    setPackages(packageOptions);\r\n    setState((state) => ({\r\n      ...state,\r\n      selectedPackage: packageOptions[0],\r\n    }))\r\n    console.log(packageOptions)\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    \r\n    setState((state) => ({\r\n      ...state,\r\n      selectedPackage: packagess.find(\r\n        (packg) => packg.id === e.target.value\r\n      ),\r\n    }));\r\n    console.log(selectedPackage)\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    actionProvider.getPackageInfo(selectedPackage.name, packageType, provider);\r\n    toggleDisplaySelector((prevState) => !prevState);\r\n  };\r\n\r\n  if (!packagess) return null;\r\n\r\n  const createPackageOptions = () => {\r\n    return packagess.map((item) => {\r\n      return (\r\n        <option key={item.id} value={item.id}>\r\n          {item.name}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"packages-selector-container\">\r\n          <>\r\n            {\" \"}\r\n            <h2 className=\"packages-selector-heading\">Select a Package</h2>\r\n            <select\r\n              className=\"packages-selector\"\r\n              value={selectedPackage.id}\r\n              onChange={handleSubmit}\r\n            >\r\n              {createPackageOptions()}\r\n            </select>\r\n            <button className=\"packages-button-confirm\" onClick={handleConfirm}>\r\n              Find More Info\r\n            </button>\r\n          </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Packages;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { Box, Center, Divider, Flex, Heading, Text } from \"@chakra-ui/layout\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\nimport { FaAngrycreative, FaBeer, FaMarker, FaTelegram } from \"react-icons/fa\";\r\n\r\n\r\nconst PackageDetails = ({ user, setState, packageDetails, actionProvider }) => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        // borderColor=\"red\"\r\n        // borderStyle=\"solid\"\r\n        // borderWidth=\"2px\"\r\n        h=\"320px\"\r\n        w=\"50%\"\r\n        bg=\"#2898EC\"\r\n        borderRadius=\"5px\"\r\n        p=\"10px\"\r\n        pl=\"15px\"\r\n      >\r\n        <Heading as=\"h\" size=\"md\" color=\"white\" p=\"5px\" mb={6}>\r\n          {user.first_name} {user.last_name}\r\n        </Heading>\r\n\r\n        <Divider orientation=\"horizontal\" />\r\n        <Heading as=\"h6\" size=\"xs\" color=\"white\" p=\"5px\">\r\n          Phone number\r\n          <Heading as=\"h6\" size=\"sm\" color=\"white\" p=\"5px\">\r\n            {user.phone_number}\r\n          </Heading>\r\n        </Heading>\r\n\r\n        <Divider orientation=\"horizontal\" />\r\n\r\n        <Heading as=\"h6\" size=\"xs\" color=\"white\" p=\"5px\">\r\n          Current Balance\r\n          <Heading as=\"h6\" size=\"sm\" color=\"white\" p=\"5px\">\r\n            Rs. {user.current_balance}\r\n          </Heading>\r\n        </Heading>\r\n\r\n        <Divider orientation=\"horizontal\" />\r\n\r\n        <Heading as=\"h6\" size=\"xs\" color=\"white\" p=\"5px\">\r\n          Anytime Data\r\n          <Heading as=\"h6\" size=\"sm\" color=\"white\" p=\"5px\">\r\n            {user.anytime_data} MB\r\n          </Heading>\r\n        </Heading>\r\n\r\n        <Divider orientation=\"horizontal\" />\r\n\r\n        <Heading as=\"h6\" size=\"xs\" color=\"white\" p=\"5px\">\r\n          Night Time Data\r\n          <Heading as=\"h6\" size=\"sm\" color=\"white\" p=\"5px\">\r\n            {user.night_time_data} MB\r\n          </Heading>\r\n        </Heading>\r\n\r\n        <Divider orientation=\"horizontal\" />\r\n        <Heading as=\"h6\" size=\"xs\" color=\"white\" p=\"5px\">\r\n          Night Time Data\r\n          <Heading as=\"h6\" size=\"sm\" color=\"white\" p=\"5px\">\r\n            {user[\"4g_data\"]} MB\r\n          </Heading>\r\n        </Heading>\r\n\r\n        <Divider orientation=\"horizontal\" />\r\n\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PackageDetails;\r\n","import React from \"react\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n} from \"@chakra-ui/react\";\r\nfunction ActivatedPackages({ activatedPackages, ActionProvider }) {\r\n  console.log(activatedPackages);\r\n\r\n  var result;\r\n\r\n  result = activatedPackages.map((activatedPackage,i) => {\r\n      return(\r\n    <Tr>\r\n      <Td >{i+1}</Td>\r\n      <Td>{activatedPackage.name}</Td>\r\n      <Td>{activatedPackage.fee}</Td>\r\n      <Td>{activatedPackage.activated_date}</Td>\r\n      <Td>{activatedPackage.validity_period}</Td>\r\n    </Tr>)\r\n  });\r\n  return (\r\n    <div>\r\n      <Table variant=\"striped\" colorScheme=\"teal\" size=\"sm\">\r\n        <TableCaption>Activated Packages</TableCaption>\r\n        <Thead>\r\n          <Tr>\r\n            <Th >Number</Th>\r\n            <Th >Package Name</Th>\r\n            <Th>Package Fee(Rs)</Th>\r\n            <Th>Date</Th>\r\n            <Th>Validity Period</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {result}\r\n        </Tbody>\r\n        <Tfoot>\r\n          <Tr>\r\n            <Th >Number</Th>\r\n            <Th>Package Name</Th>\r\n            <Th>Package Fee(Rs)</Th>\r\n            <Th>Date</Th>\r\n            <Th>Validity Period</Th>\r\n          </Tr>\r\n        </Tfoot>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActivatedPackages;\r\n","import React, { useState } from \"react\";\r\nimport Calendar from \"react-widgets/Calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./Calendar.css\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport \"react-widgets/styles.css\";\r\nconst CalenderObject = (props) => {\r\n  const [value, onChange] = useState(new Date());\r\n  const [isDisable, setDisable] = useState(false);\r\n  function selectDate(params) {\r\n    onChange();\r\n    props.actionProvider.viewDataPackagesByDate(params);\r\n    setDisable(true);\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      width=\"50%\"\r\n      ml=\"3%\"\r\n      boxShadow=\"0 0 2px 2px #ceddeb\"\r\n      bg=\"#f2fcfc\"\r\n      // width=\"40%\"\r\n      borderWidth=\"1px\"\r\n      borderRadius=\"lg\"\r\n      padding=\"10px\"\r\n    >\r\n      <Calendar\r\n      format='DD/MM/YYYY'\r\n        // min={value}\r\n        disabled={isDisable}\r\n        onChange={selectDate}\r\n        value={value}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\nexport default CalenderObject;\r\n","import { Box, Heading } from \"@chakra-ui/layout\";\r\nimport React from \"react\";\r\n\r\nfunction LKRValue({ actionProvider, pricesLKR }) {\r\n  return (\r\n    <div>\r\n      <Box\r\n        // borderColor=\"Red\"\r\n        borderStyle=\"solid\"\r\n        borderWidth=\"5px\"\r\n        h=\"180px\"\r\n        w=\"310px\"\r\n        rounded=\"5px\"\r\n        boxShadow=\"lg\"\r\n      >\r\n        <Heading as=\"h2\" size=\"md\" p=\"10px\" color=\"#70757A\">\r\n        1 United States Dollar equals,\r\n        </Heading>\r\n        <Heading as=\"h2\" size=\"lg\" p=\"10px\" >\r\n        {pricesLKR.LKR}\r\n        </Heading>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LKRValue;\r\n","import {\r\n  Box,\r\n  Center,\r\n  Flex,\r\n  Heading,\r\n  SimpleGrid,\r\n  Text,\r\n} from \"@chakra-ui/layout\";\r\nimport React from \"react\";\r\nimport { Image } from \"@chakra-ui/react\";\r\n\r\nfunction CurrencyValues({ actionProvider, pricesCurrency }) {\r\n  return (\r\n    <div>\r\n      <Box\r\n        // borderColor=\"Red\"\r\n        borderStyle=\"solid\"\r\n        borderWidth=\"5px\"\r\n        h=\"340px\"\r\n        w=\"350px\"\r\n        rounded=\"5px\"\r\n        boxShadow=\"lg\"\r\n      >\r\n          \r\n        <Heading as=\"h2\" size=\"md\" p=\"10px\" color=\"#70757A\">\r\n          1 United States Dollar equals,\r\n        </Heading>\r\n        <Flex\r\n          // borderColor=\"Red\"\r\n          borderStyle=\"solid\"\r\n          borderWidth=\"5px\"\r\n          h=\"50px\"\r\n          w=\"322px\"\r\n          rounded=\"5px\"\r\n          mt=\"0px\"\r\n          ml=\"10px\"\r\n          bg=\"yellow\"\r\n        >\r\n          <Heading as=\"h2\" size=\"md\" p=\"10px\">\r\n            {pricesCurrency.AuD}\r\n          </Heading>\r\n        </Flex>\r\n        <Flex\r\n          // borderColor=\"Red\"\r\n          borderStyle=\"solid\"\r\n          borderWidth=\"5px\"\r\n          h=\"50px\"\r\n          w=\"322px\"\r\n          rounded=\"5px\"\r\n          mt=\"5px\"\r\n          ml=\"10px\"\r\n          bg=\"green.400\"\r\n\r\n        >\r\n          <Heading as=\"h2\" size=\"md\" p=\"10px\">\r\n            {pricesCurrency.IR}\r\n          </Heading>\r\n        </Flex>\r\n        <Flex\r\n          // borderColor=\"Red\"\r\n          borderStyle=\"solid\"\r\n          borderWidth=\"5px\"\r\n          h=\"50px\"\r\n          w=\"322px\"\r\n          rounded=\"5px\"\r\n          mt=\"5px\"\r\n          ml=\"10px\"\r\n          bg=\"blue.400\"\r\n\r\n        >\r\n          <Heading as=\"h2\" size=\"md\" p=\"10px\">\r\n            {pricesCurrency.SD}\r\n          </Heading>\r\n        </Flex>\r\n        <Flex\r\n          // borderColor=\"Red\"\r\n          borderStyle=\"solid\"\r\n          borderWidth=\"5px\"\r\n          h=\"50px\"\r\n          w=\"322px\"\r\n          rounded=\"5px\"\r\n          mt=\"5px\"\r\n          ml=\"10px\"\r\n          bg=\"red.400\"\r\n\r\n        >\r\n          <Heading as=\"h2\" size=\"md\" p=\"10px\">\r\n            {pricesCurrency.Yuan}\r\n          </Heading>\r\n        </Flex>\r\n        <Flex\r\n          // borderColor=\"Red\"\r\n          borderStyle=\"solid\"\r\n          borderWidth=\"5px\"\r\n          h=\"50px\"\r\n          w=\"322px\"\r\n          rounded=\"5px\"\r\n          mt=\"5px\"\r\n          ml=\"10px\"\r\n          bg=\"teal.300\"\r\n\r\n        >\r\n          <Heading as=\"h2\" size=\"md\" p=\"10px\">\r\n            {pricesCurrency.Yen}\r\n          </Heading>\r\n        </Flex>\r\n        \r\n      </Box>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrencyValues;\r\n","import { Image } from \"@chakra-ui/image\";\r\nimport { Box, Flex, Heading, SimpleGrid, Text } from \"@chakra-ui/layout\";\r\nimport React from \"react\";\r\n\r\nfunction CryptoPrice({ pricesCrypto, actionProvider }) {\r\n  return (\r\n    <div>\r\n      <Box\r\n        // borderColor=\"Red\"\r\n        borderStyle=\"solid\"\r\n        borderWidth=\"8px\"\r\n        h=\"360px\"\r\n        w=\"410px\"\r\n        rounded=\"5px\"\r\n        boxShadow=\"lg\"\r\n        bg=\"#F2F5FF\"\r\n      >\r\n        <SimpleGrid columns={2} spacing={-2}>\r\n          {/* ##################Bitcoin################## */}\r\n          <Box\r\n            height=\"80px\"\r\n            borderStyle=\"solid\"\r\n            borderWidth=\"5px\"\r\n            boxShadow=\"md\"\r\n            m=\"10px\"\r\n            w=\"260px\"\r\n            bg=\"#003273\"\r\n          >\r\n            <SimpleGrid columns={1} spacing={0}>\r\n              <Box\r\n                height=\"50px\"\r\n                // borderColor=\"Red\"\r\n                // borderStyle=\"solid\"\r\n                // borderWidth=\"5px\"\r\n              >\r\n                <Heading as=\"h2\" size=\"sm\" p=\"10px\" color=\"white\">\r\n                  1 BITCOIN Equals,{\" \"}\r\n                </Heading>\r\n              </Box>\r\n              <Box height=\"50px\" w=\"250px\" mt=\"-30px\">\r\n                <Text p=\"10px\" color=\"white\">\r\n                  {pricesCrypto.bitcoin}\r\n                </Text>\r\n              </Box>\r\n            </SimpleGrid>\r\n          </Box>\r\n          <Box ml=\"65px\" mt=\"-15px\" height=\"80px\">\r\n            <Image\r\n              boxSize=\"120px\"\r\n              objectFit=\"cover\"\r\n              src=\"imgs/bitcoin.png\"\r\n              alt=\"Bitcoin\"\r\n            />\r\n          </Box>\r\n          {/* ##################Ethereum################## */}\r\n\r\n          <Box\r\n            bg=\"white\"\r\n            height=\"80px\"\r\n            borderStyle=\"solid\"\r\n            borderWidth=\"5px\"\r\n            boxShadow=\"md\"\r\n            m=\"10px\"\r\n            mt=\"-10px\"\r\n            w=\"260px\"\r\n            bg=\"#0ce0ff\"\r\n          >\r\n            <SimpleGrid columns={1} spacing={0}>\r\n              <Box\r\n                height=\"50px\"\r\n                // borderColor=\"Red\"\r\n                // borderStyle=\"solid\"\r\n                // borderWidth=\"5px\"\r\n              >\r\n                <Heading as=\"h2\" size=\"sm\" p=\"10px\">\r\n                  1 ETHEREUM Equals,{\" \"}\r\n                </Heading>\r\n              </Box>\r\n              <Box height=\"50px\" w=\"250px\" mt=\"-30px\">\r\n                <Text p=\"10px\">{pricesCrypto.ethereum}</Text>\r\n              </Box>\r\n            </SimpleGrid>\r\n          </Box>\r\n          <Box ml=\"70px\" mt=\"-30px\" height=\"80px\">\r\n            <Image\r\n              boxSize=\"110px\"\r\n              objectFit=\"cover\"\r\n              src=\"imgs/ethereum.png\"\r\n              alt=\"Ethereum\"\r\n            />\r\n          </Box>\r\n          {/* ##################Bitcoin Cash################## */}\r\n          <Box\r\n            bg=\"white\"\r\n            height=\"80px\"\r\n            borderStyle=\"solid\"\r\n            borderWidth=\"5px\"\r\n            boxShadow=\"md\"\r\n            m=\"10px\"\r\n            mt=\"-10px\"\r\n            w=\"260px\"\r\n            bg=\"#003273\"\r\n          >\r\n            <SimpleGrid columns={1} spacing={0}>\r\n              <Box\r\n                height=\"50px\"\r\n                // borderColor=\"Red\"\r\n                // borderStyle=\"solid\"\r\n                // borderWidth=\"5px\"\r\n              >\r\n                <Heading as=\"h2\" size=\"sm\" p=\"10px\" color=\"white\">\r\n                  1 BITCOIN CASH Equals,{\" \"}\r\n                </Heading>\r\n              </Box>\r\n              <Box height=\"50px\" w=\"250px\" mt=\"-30px\">\r\n                <Text p=\"10px\" color=\"white\">\r\n                  {pricesCrypto.bitcoinCash}\r\n                </Text>\r\n              </Box>\r\n            </SimpleGrid>\r\n          </Box>\r\n          <Box ml=\"89px\" mt=\"-9px\" height=\"80px\">\r\n            <Image\r\n              boxSize=\"70px\"\r\n              objectFit=\"cover\"\r\n              src=\"imgs/bitcoin-cash.png\"\r\n              alt=\"Bitcoin Cash\"\r\n            />\r\n          </Box>\r\n\r\n          {/* ##################Litecoin################## */}\r\n          <Box\r\n            bg=\"white\"\r\n            height=\"80px\"\r\n            borderStyle=\"solid\"\r\n            borderWidth=\"5px\"\r\n            boxShadow=\"md\"\r\n            m=\"10px\"\r\n            mt=\"-10px\"\r\n            w=\"260px\"\r\n            bg=\"#0ce0ff\"\r\n          >\r\n            <SimpleGrid columns={1} spacing={0}>\r\n              <Box\r\n                height=\"50px\"\r\n                // borderColor=\"Red\"\r\n                // borderStyle=\"solid\"\r\n                // borderWidth=\"5px\"\r\n              >\r\n                <Heading as=\"h2\" size=\"sm\" p=\"10px\">\r\n                  1 LITECOIN Equals,{\" \"}\r\n                </Heading>\r\n              </Box>\r\n              <Box height=\"50px\" w=\"250px\" mt=\"-30px\">\r\n                <Text p=\"10px\">{pricesCrypto.litecoin}</Text>\r\n              </Box>\r\n            </SimpleGrid>\r\n          </Box>\r\n          <Box ml=\"70px\" mt=\"-35px\" height=\"80px\">\r\n            <Image\r\n              boxSize=\"120px\"\r\n              objectFit=\"cover\"\r\n              src=\"imgs/litecoin2.png\"\r\n              alt=\"Litecoin\"\r\n            />\r\n          </Box>\r\n        </SimpleGrid>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CryptoPrice;\r\n","import React from 'react'\r\nimport { Image } from \"@chakra-ui/image\";\r\nimport { Box, Flex, Heading, SimpleGrid, Text } from \"@chakra-ui/layout\";\r\n\r\nfunction CryptoPriceLKR({actionProvider, prices}) {\r\n    return (\r\n        <div>\r\n             <Box\r\n        // borderColor=\"Red\"\r\n        borderStyle=\"solid\"\r\n        borderWidth=\"8px\"\r\n        h=\"360px\"\r\n        w=\"410px\"\r\n        rounded=\"5px\"\r\n        boxShadow=\"lg\"\r\n        bg=\"#F2F5FF\"\r\n      >\r\n        <SimpleGrid columns={2} spacing={-2}>\r\n          {/* ##################Bitcoin################## */}\r\n          <Box\r\n            height=\"80px\"\r\n            borderStyle=\"solid\"\r\n            borderWidth=\"5px\"\r\n            boxShadow=\"md\"\r\n            m=\"10px\"\r\n            w=\"260px\"\r\n            bg=\"#003273\"\r\n          >\r\n            <SimpleGrid columns={1} spacing={0}>\r\n              <Box\r\n                height=\"50px\"\r\n                // borderColor=\"Red\"\r\n                // borderStyle=\"solid\"\r\n                // borderWidth=\"5px\"\r\n              >\r\n                <Heading as=\"h2\" size=\"sm\" p=\"10px\" color=\"white\">\r\n                  1 BITCOIN Equals,{\" \"}\r\n                </Heading>\r\n              </Box>\r\n              <Box height=\"50px\" w=\"250px\" mt=\"-30px\">\r\n                <Text p=\"10px\" color=\"white\">\r\n                  {prices.bitcoin}\r\n                </Text>\r\n              </Box>\r\n            </SimpleGrid>\r\n          </Box>\r\n          <Box ml=\"65px\" mt=\"-15px\" height=\"80px\">\r\n            <Image\r\n              boxSize=\"120px\"\r\n              objectFit=\"cover\"\r\n              src=\"imgs/bitcoin.png\"\r\n              alt=\"Bitcoin\"\r\n            />\r\n          </Box>\r\n          {/* ##################Ethereum################## */}\r\n\r\n          <Box\r\n            bg=\"white\"\r\n            height=\"80px\"\r\n            borderStyle=\"solid\"\r\n            borderWidth=\"5px\"\r\n            boxShadow=\"md\"\r\n            m=\"10px\"\r\n            mt=\"-10px\"\r\n            w=\"260px\"\r\n            bg=\"#0ce0ff\"\r\n          >\r\n            <SimpleGrid columns={1} spacing={0}>\r\n              <Box\r\n                height=\"50px\"\r\n                // borderColor=\"Red\"\r\n                // borderStyle=\"solid\"\r\n                // borderWidth=\"5px\"\r\n              >\r\n                <Heading as=\"h2\" size=\"sm\" p=\"10px\">\r\n                  1 ETHEREUM Equals,{\" \"}\r\n                </Heading>\r\n              </Box>\r\n              <Box height=\"50px\" w=\"250px\" mt=\"-30px\">\r\n                <Text p=\"10px\">{prices.ethereum}</Text>\r\n              </Box>\r\n            </SimpleGrid>\r\n          </Box>\r\n          <Box ml=\"70px\" mt=\"-30px\" height=\"80px\">\r\n            <Image\r\n              boxSize=\"110px\"\r\n              objectFit=\"cover\"\r\n              src=\"imgs/ethereum.png\"\r\n              alt=\"Ethereum\"\r\n            />\r\n          </Box>\r\n          {/* ##################Bitcoin Cash################## */}\r\n          <Box\r\n            bg=\"white\"\r\n            height=\"80px\"\r\n            borderStyle=\"solid\"\r\n            borderWidth=\"5px\"\r\n            boxShadow=\"md\"\r\n            m=\"10px\"\r\n            mt=\"-10px\"\r\n            w=\"260px\"\r\n            bg=\"#003273\"\r\n          >\r\n            <SimpleGrid columns={1} spacing={0}>\r\n              <Box\r\n                height=\"50px\"\r\n                // borderColor=\"Red\"\r\n                // borderStyle=\"solid\"\r\n                // borderWidth=\"5px\"\r\n              >\r\n                <Heading as=\"h2\" size=\"sm\" p=\"10px\" color=\"white\">\r\n                  1 BITCOIN CASH Equals,{\" \"}\r\n                </Heading>\r\n              </Box>\r\n              <Box height=\"50px\" w=\"250px\" mt=\"-30px\">\r\n                <Text p=\"10px\" color=\"white\">\r\n                  {prices.bitcoinCash}\r\n                </Text>\r\n              </Box>\r\n            </SimpleGrid>\r\n          </Box>\r\n          <Box ml=\"89px\" mt=\"-9px\" height=\"80px\">\r\n            <Image\r\n              boxSize=\"70px\"\r\n              objectFit=\"cover\"\r\n              src=\"imgs/bitcoin-cash.png\"\r\n              alt=\"Bitcoin Cash\"\r\n            />\r\n          </Box>\r\n\r\n          {/* ##################Litecoin################## */}\r\n          <Box\r\n            bg=\"white\"\r\n            height=\"80px\"\r\n            borderStyle=\"solid\"\r\n            borderWidth=\"5px\"\r\n            boxShadow=\"md\"\r\n            m=\"10px\"\r\n            mt=\"-10px\"\r\n            w=\"260px\"\r\n            bg=\"#0ce0ff\"\r\n          >\r\n            <SimpleGrid columns={1} spacing={0}>\r\n              <Box\r\n                height=\"50px\"\r\n                // borderColor=\"Red\"\r\n                // borderStyle=\"solid\"\r\n                // borderWidth=\"5px\"\r\n              >\r\n                <Heading as=\"h2\" size=\"sm\" p=\"10px\">\r\n                  1 LITECOIN Equals,{\" \"}\r\n                </Heading>\r\n              </Box>\r\n              <Box height=\"50px\" w=\"250px\" mt=\"-30px\">\r\n                <Text p=\"10px\">{prices.litecoin}</Text>\r\n              </Box>\r\n            </SimpleGrid>\r\n          </Box>\r\n          <Box ml=\"70px\" mt=\"-35px\" height=\"80px\">\r\n            <Image\r\n              boxSize=\"120px\"\r\n              objectFit=\"cover\"\r\n              src=\"imgs/litecoin2.png\"\r\n              alt=\"Litecoin\"\r\n            />\r\n          </Box>\r\n        </SimpleGrid>\r\n      </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CryptoPriceLKR\r\n","import { Flex, Heading } from \"@chakra-ui/react\";\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\nimport BotAvatar from \"../Components/botAvatar\";\r\nimport BotIcon from \"../Components/botIcon\";\r\nimport GeneralOptions from \"../Components/GeneralOptions/GeneralOptions\";\r\nimport InternetProvider from \"../Components/InternetProvider/InternetProvider\";\r\nimport PackageDetails from \"../Components/PackageDetails/PackageDetails\";\r\nimport PackageTypes from \"../Components/PackageTypes/PackageTypes\";\r\nimport Packages from \"../Components/Packagez/Packages\";\r\nimport Balance from \"../Components/Balance/Balance\";\r\nimport ActivatedPackages from \"../Components/ActivatedPackages/ActivatedPackages\";\r\nimport Calendar from \"../Components/Calendar/Calendar\";\r\nimport LKRValue from \"../Components/LKRValue/LKRValue\";\r\nimport CurrencyValues from \"../Components/CurrencyValues/CurrencyValues\";\r\nimport CryptoPrice from \"../Components/CryptoPrice/CryptoPrice\";\r\nimport CryptoPriceLKR from \"../Components/CryptoPriceLKR/CryptoPriceLKR\";\r\n// Widgets are components that create you own and then you register them in the config\r\n// because we want the widget to be decorated with some things that only the chatbot can give us\r\n\r\n\r\nconst config = {\r\n  initialMessages: [\r\n    createChatBotMessage(\"Hey there 👋👋👋👋\"),\r\n    createChatBotMessage(\r\n      `I am XYRON. I'm here to guide you. Thanks for your interest in XYRON.\r\n  Here are some options.`,\r\n      { \r\n        widget: \"options\",\r\n        delay: 500, \r\n      }\r\n    ),\r\n  ],\r\n  botName: \"XYRON\",\r\n  customComponents: {\r\n    header: () => (\r\n      <Flex backgroundColor=\"#00004d\">\r\n        <BotIcon />\r\n        <Heading\r\n          ml=\"10px\"\r\n          as=\"h3\"\r\n          size=\"sm\"\r\n          color=\"#ffffff\"\r\n          fontWeight=\"bold\"\r\n          lineHeight={1.5}\r\n          mt=\"25px\"\r\n        >\r\n          XYRON\r\n        </Heading>\r\n      </Flex>\r\n    ),\r\n    botAvatar: (props) => <BotAvatar {...props} />,\r\n  },\r\n  state: {\r\n    currentState: \"normal\",\r\n    provider: \"\",\r\n    packageTypes: [],\r\n    packageType: \"\",\r\n    packages: [],\r\n    package: \"\",\r\n    selectedPackage: \"\",\r\n    selectedPackageType: \"\",\r\n    packageDetails: [],\r\n    user: [], //Get full user\r\n    subject: \"\",\r\n    activatedPackages: [],\r\n    pricesLKR: [],\r\n    pricesCurrency: [],\r\n    pricesCrypto: [],\r\n    prices: [],\r\n\r\n  },\r\n// widgetName - defines the name of the widget\r\n// widgetFunc - define a function that returns the component. The function must take props and spread it into the component.\r\n// mapStateToProps - defines which state properties you defined in config should be injected into the widget component.\r\n// props - option array of props you want to pass to your component.\r\n  widgets: [\r\n    {\r\n      widgetName: \"options\",\r\n      widgetFunc: (props) => <GeneralOptions {...props} />,\r\n      mapStateToProps: [\"provider\"]\r\n    },\r\n    {\r\n      widgetName: \"InternetProvider\",\r\n      widgetFunc: (props) => <InternetProvider {...props} />,\r\n    },\r\n    {\r\n      widgetName: \"packageTypess\",\r\n      widgetFunc: (props) => <PackageTypes {...props} />,\r\n      mapStateToProps: [\"packageTypes\", \"provider\", \"selectedPackageType\"]\r\n    },\r\n    {\r\n      widgetName: \"packages\",\r\n      widgetFunc: (props) => <Packages {...props} />,\r\n      mapStateToProps: [\"selectedPackage\", \"packages\", \"provider\", \"packageType\"]\r\n    },\r\n    {\r\n      widgetName: \"packageDetails\",\r\n      widgetFunc: (props) => <PackageDetails {...props} />,\r\n      mapStateToProps: [\"packageDetails\", \"selectedPackage\", \"provider\"]\r\n    },\r\n    {\r\n      widgetName: \"balance\",\r\n      widgetFunc: (props) => <Balance {...props} />,\r\n      mapStateToProps: [\"user\"]\r\n    },\r\n    {\r\n      widgetName: \"activatedPackages\",\r\n      widgetFunc: (props) => <ActivatedPackages {...props} />,\r\n      mapStateToProps: [\"activatedPackages\"]\r\n    },\r\n    {\r\n      widgetName: \"calendar\",\r\n      widgetFunc: (props) => <Calendar {...props} />,\r\n      mapStateToProps: [\"activatedPackages\"]\r\n    },\r\n    {\r\n      widgetName: \"LKRValue\",\r\n      widgetFunc: (props) => <LKRValue {...props} />,\r\n      mapStateToProps: [\"pricesLKR\"]\r\n    },\r\n    {\r\n      widgetName: \"currencyValues\",\r\n      widgetFunc: (props) => <CurrencyValues {...props} />,\r\n      mapStateToProps: [\"pricesCurrency\"]\r\n    },\r\n    {\r\n      widgetName: \"cryptoPrice\",\r\n      widgetFunc: (props) => <CryptoPrice {...props} />,\r\n      mapStateToProps: [\"pricesCrypto\"]\r\n    },\r\n    {\r\n      widgetName: \"cryptoPriceLKR\",\r\n      widgetFunc: (props) => <CryptoPriceLKR {...props} />,\r\n      mapStateToProps: [\"prices\"]\r\n    },\r\n    \r\n    // {\r\n    //   widgetName: \"doctors\", //Name that we give to refer to it\r\n    //   widgetFunc: (props) => <Doctors {...props} />, //returns the component that we created \r\n    //   mapStateToProps: [\"doctors\"], //tells to chatbot which state we want to give to this component\r\n    // }\r\n    \r\n  ],\r\n\r\n  customStyles: {\r\n    botMessageBox: {\r\n      backgroundColor: \"#E3F6FC\",\r\n      color: \"black\",\r\n    },\r\n    userMessageBox: {\r\n      backgroundColor: \"#E3F6FC\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default config;\r\n","//Define responses in action provider and use the message parser to device which response to activate\r\n//The message parser controls what happens when the user sends a message.\r\n//The only method that the message parser needs to implement is the \"parse\" method. \r\n//This method is called inside the chatbot when it receives a message from the user.\r\n// the actionprovider is given to the messageparser, so that the messageparser can \r\n//invoke the correct actions after the message is parsed.\r\nclass MessageParser {\r\n  constructor(actionProvider, state) {\r\n    this.actionProvider = actionProvider;\r\n    this.state = state;\r\n    this.disease = false;\r\n    this.num = 0;\r\n  }\r\n\r\n  parse(message) {\r\n    console.log(this.state)\r\n    var siz = this.state.currentState.length - 1;\r\n    console.log(\"Message Parser called\");\r\n    console.log(this.state);\r\n    // console.log(this.state.packageTypes[0]);\r\n    const lowercase = message.toLowerCase();\r\n    // if (lowercase.includes(\"ssss\") || lowercase.includes(\"js\")) {\r\n      \r\n    // } else \r\n    if(lowercase.includes(\"complaint\")) {\r\n      this.actionProvider.handleComplaint(JSON.parse(localStorage.getItem(\"user\"))[\"sim_type\"])\r\n\r\n    } else if (lowercase.includes(\"options\")){\r\n      this.actionProvider.viewGeneralOptions();\r\n\r\n    // } \r\n    // else if (lowercase.includes(\"packages\") || lowercase.includes(\"package\")){\r\n    //   this.actionProvider.handleDataPackage();\r\n\r\n    } else if (this.state.currentState == \"complaint\"){\r\n      this.actionProvider.handleSubject(message);\r\n\r\n    }else if (this.state.currentState == \"subject\"){\r\n      this.actionProvider.makeComplaint(message, this.state.subject);\r\n    }\r\n    else {\r\n      this.actionProvider.helloHandler(message);\r\n    }\r\n  }\r\n}\r\n\r\nexport default MessageParser;\r\n","import Axios from \"axios\";\r\nimport MessageParser from \"./messageParser\";\r\n//this is used to update internal state of the chatbot\r\n//The actionprovider controls what kind of action that the chatbot is going to\r\n//perform. The actionprovider is given the createChatBotMessage and createClientMessage\r\n//functions in the constructor, which you can use to create a new responses.\r\nclass ActionProvider {\r\n  constructor(createChatBotMessage, setStateFunc, createClientMessage) {\r\n    this.createChatBotMessage = createChatBotMessage;\r\n    this.setState = setStateFunc;\r\n    this.createClientMessage = createClientMessage;\r\n  }\r\n\r\n  setChatbotMessage = (message) => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      messages: [...state.messages, message],\r\n    }));\r\n  };\r\n\r\n  setChatbotState = (s) => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      currentState: [...state.currentState, s],\r\n    }));\r\n  };\r\n\r\n  //Display internet service providers\r\n  handleDataPackage = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"I have data package details about Mobitel, Dialog, Hutch and Airtel\",\r\n      {\r\n        widget: \"InternetProvider\",\r\n      }\r\n    );\r\n    this.setChatbotMessage(message);\r\n  };\r\n  //Display Package Types\r\n  handleProvider = (type) => {\r\n    Axios.post(\"http://127.0.0.1:5000/getPackageTypes\", {\r\n      provider: type,\r\n    }).then((response) => {\r\n      this.setState((state) => ({\r\n        ...state,\r\n        provider: type,\r\n        packageTypes: response.data.packageTypes,\r\n      }));\r\n      const message = this.createChatBotMessage(`${type} Plans and Rates`, {\r\n        widget: \"packageTypess\",\r\n      });\r\n      this.setChatbotMessage(message);\r\n    });\r\n  };\r\n  //Display packages of package type\r\n  selectPackageType = (package_type, provider) => {\r\n    Axios.post(\"http://127.0.0.1:5000/getPackages\", {\r\n      provider: provider,\r\n      packageType: package_type,\r\n    }).then((response) => {\r\n      this.setState((state) => ({\r\n        ...state,\r\n        packageType: package_type,\r\n        packages: response.data.packages,\r\n      }));\r\n      const message = this.createChatBotMessage(`${package_type}`, {\r\n        widget: \"packages\",\r\n      });\r\n      this.setChatbotMessage(message);\r\n    });\r\n  };\r\n\r\n  //Display package info\r\n  getPackageInfo = (packageName, packageType, provider) => {\r\n    Axios.post(\"http://127.0.0.1:5000/getPackage\", {\r\n      packageName: packageName,\r\n      packageType: packageType,\r\n      provider: provider,\r\n    }).then((response) => {\r\n      // console.log(response.data.packageDetails)\r\n      this.setState((state) => ({\r\n        ...state,\r\n        packageDetails: response.data.packageDetails,\r\n      }));\r\n      const message = this.createChatBotMessage(\r\n        `${provider} -> ${packageType} -> ${packageName}`,\r\n        {\r\n          widget: \"packageDetails\",\r\n        }\r\n      );\r\n      this.setChatbotMessage(message);\r\n    });\r\n  };\r\n\r\n  //Display package info\r\n  activateDataPackage = (packageName, provider) => {\r\n    // console.log(\"activateDataPackage\")\r\n    // console.log(provider)\r\n    Axios.post(\"http://127.0.0.1:5000/activateDataPackage\", {\r\n      packageName: packageName,\r\n      provider: provider,\r\n      userID: JSON.parse(localStorage.getItem(\"user\"))[\"user_id\"],\r\n    }).then((response) => {\r\n      const message = this.createChatBotMessage(`${response.data.res}`);\r\n      this.setChatbotMessage(message);\r\n    });\r\n  };\r\n\r\n  //Display current balance\r\n  getCurrentBalance = () => {\r\n    // console.log(\"getCurrentBalance\")\r\n    Axios.post(\"http://127.0.0.1:5000/getCurrentBalance\", {\r\n      userID: JSON.parse(localStorage.getItem(\"user\"))[\"user_id\"],\r\n    }).then((response) => {\r\n      this.setState((state) => ({\r\n        ...state,\r\n        user: response.data.user,\r\n      }));\r\n      const message = this.createChatBotMessage(``, {\r\n        widget: \"balance\",\r\n      });\r\n      this.setChatbotMessage(message);\r\n    });\r\n  };\r\n\r\n  //Handle complaints\r\n  handleComplaint = (provider) => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      currentState: \"complaint\",\r\n    }));\r\n    const message = this.createChatBotMessage(\r\n      `Your internet service provider is ${provider}. We will send your complaint as an email to the relevant authorities`\r\n    );\r\n    this.setChatbotMessage(message);\r\n    const message2 = this.createChatBotMessage(`Enter the complaint subject`);\r\n    this.setChatbotMessage(message2);\r\n  };\r\n\r\n  //Handle subject of complaint\r\n  handleSubject = (msg) => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      currentState: \"subject\",\r\n      subject: msg,\r\n    }));\r\n    const message = this.createChatBotMessage(\r\n      `Enter the complaint email body. Enter whatever issue you have about your internet connection`\r\n    );\r\n    this.setChatbotMessage(message);\r\n  };\r\n\r\n  //Display current balance\r\n  makeComplaint = (msg, subject) => {\r\n    Axios.post(\"http://127.0.0.1:5000/makeComplaint\", {\r\n      subject: subject,\r\n      body: msg,\r\n      userID: JSON.parse(localStorage.getItem(\"user\"))[\"user_id\"],\r\n    }).then((response) => {\r\n      this.setState((state) => ({\r\n        ...state,\r\n        currentState: \"normal\",\r\n        subject: \"\",\r\n      }));\r\n      const message = this.createChatBotMessage(`${response.data.res}`);\r\n      this.setChatbotMessage(message);\r\n    });\r\n  };\r\n\r\n  //View all activated packages\r\n  viewActivatedPackages = () => {\r\n    Axios.post(\"http://127.0.0.1:5000/viewActivatedPackages\", {\r\n      userID: JSON.parse(localStorage.getItem(\"user\"))[\"user_id\"],\r\n    }).then((response) => {\r\n      if (response.data.Null == 0) {\r\n        this.setState((state) => ({\r\n          ...state,\r\n          activatedPackages: response.data.activatedPackages,\r\n        }));\r\n        const message = this.createChatBotMessage(\r\n          `Here are the activated packages`,\r\n          {\r\n            widget: \"activatedPackages\",\r\n          }\r\n        );\r\n        this.setChatbotMessage(message);\r\n      } else {\r\n        const message = this.createChatBotMessage(\r\n          `There are no activated packages`\r\n        );\r\n        this.setChatbotMessage(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  //Display date to select to display data packages\r\n  displayCalendarForPackages = (msg, subject) => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      currentState: \"dateSelection\",\r\n    }));\r\n    const message = this.createChatBotMessage(`Select a date`, {\r\n      widget: \"calendar\",\r\n    });\r\n    this.setChatbotMessage(message);\r\n  };\r\n\r\n  //View all activated packages by date\r\n  viewDataPackagesByDate = (value) => {\r\n    var month =\r\n      parseInt(value.getMonth() + 1) >= 10\r\n        ? \"-\" + (value.getMonth() + 1)\r\n        : \"-0\" + (value.getMonth() + 1);\r\n    var day =\r\n      parseInt(value.getDate()) >= 10\r\n        ? \"-\" + value.getDate()\r\n        : \"-0\" + value.getDate();\r\n    var date = value.getFullYear() + month + day;\r\n    Axios.post(\"http://127.0.0.1:5000/viewActivatedPackagesByDate\", {\r\n      userID: JSON.parse(localStorage.getItem(\"user\"))[\"user_id\"],\r\n      date: date,\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n      if (response.data.Null == 0) {\r\n        this.setState((state) => ({\r\n          ...state,\r\n          activatedPackages: response.data.activatedPackages,\r\n        }));\r\n        const message = this.createChatBotMessage(\r\n          `Here are the activated packages for ${date}`,\r\n          {\r\n            widget: \"activatedPackages\",\r\n          }\r\n        );\r\n        this.setChatbotMessage(message);\r\n      } else {\r\n        const message = this.createChatBotMessage(\r\n          `There are no activated packages`\r\n        );\r\n        this.setChatbotMessage(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  //View LKR Price per USD\r\n  viewLKRValue = () => {\r\n    Axios.post(\"http://127.0.0.1:5000/getMoneyValue\")\r\n    .then((response) => {\r\n      console.log(\"viewLKRValue\")\r\n      console.log(response.data)\r\n      this.setState((state) => ({\r\n        ...state,\r\n        pricesLKR: response.data.prices,\r\n      }));\r\n      const message = this.createChatBotMessage(\r\n        ``,\r\n        {\r\n          widget: \"LKRValue\",\r\n        }\r\n      );\r\n      this.setChatbotMessage(message);\r\n    });\r\n  };\r\n\r\n    //View Currency values per USD\r\n    viewCurrencyValues = () => {\r\n      Axios.post(\"http://127.0.0.1:5000/getMoneyValue\")\r\n      .then((response) => {\r\n        this.setState((state) => ({\r\n          ...state,\r\n          pricesCurrency: response.data.prices,\r\n        }));\r\n        const message = this.createChatBotMessage(\r\n          ``,\r\n          {\r\n            widget: \"currencyValues\",\r\n          }\r\n        );\r\n        this.setChatbotMessage(message);\r\n      });\r\n    };\r\n\r\n      //View CryptoCurrency Values\r\n      viewCryptoCurrencyPrice = () => {\r\n        Axios.post(\"http://127.0.0.1:5000/getCryptoPrice\")\r\n        .then((response) => {\r\n          this.setState((state) => ({\r\n            ...state,\r\n            pricesCrypto: response.data.prices,\r\n          }));\r\n          const message = this.createChatBotMessage(\r\n            ``,\r\n            {\r\n              widget: \"cryptoPrice\",\r\n            }\r\n          );\r\n          this.setChatbotMessage(message);\r\n        });\r\n      };\r\n\r\n\r\n      \r\n  //View CryptoCurrency Values\r\n  viewCryptoCurrencyPriceInLKR = () => {\r\n    Axios.post(\"http://127.0.0.1:5000/getCryptoPriceLKR\")\r\n    .then((response) => {\r\n      this.setState((state) => ({\r\n        ...state,\r\n        prices: response.data.prices,\r\n      }));\r\n      const message = this.createChatBotMessage(\r\n        ``,\r\n        {\r\n          widget: \"cryptoPriceLKR\",\r\n        }\r\n      );\r\n      this.setChatbotMessage(message);\r\n    });\r\n  };\r\n\r\n//View General Options\r\nviewGeneralOptions = () => {\r\n    const message = this.createChatBotMessage('',\r\n      {\r\n        widget: \"options\",\r\n      }\r\n    );\r\n    this.setChatbotMessage(message);\r\n\r\n};\r\n\r\n  //Normal chatbot message handler\r\n  helloHandler = (message) => {\r\n    var msg;\r\n    Axios.post(\"http://127.0.0.1:5000/reply\", { msg: message }).then(\r\n      (response) => {\r\n        console.log(\"Hello Handler called, Response :\");\r\n        console.log(response.data.reply);\r\n        if (response.data.reply == \"balance\") {\r\n          console.log(\"balance if\");\r\n          msg = \"\";\r\n          this.getCurrentBalance();\r\n        } else if (response.data.reply == \"package\") {\r\n          msg = this.createChatBotMessage(\"Select package\");\r\n          this.handleDataPackage();\r\n        } else if (response.data.reply == \"complaint\") {\r\n          this.handleComplaint(\r\n            JSON.parse(localStorage.getItem(\"user\"))[\"sim_type\"]\r\n          );\r\n        } else {\r\n          msg = this.createChatBotMessage(response.data.reply);\r\n        }\r\n        this.setChatbotMessage(msg);\r\n      }\r\n    );\r\n  };\r\n}\r\n\r\nexport default ActionProvider;\r\n","import React from \"react\";\r\nimport { Flex, Box, Link, Image, Heading, Stack, Center } from \"@chakra-ui/react\";\r\nimport config from \"./Chatbot/config.js\";\r\nimport MessageParser from \"./Chatbot/messageParser.js\";\r\nimport ActionProvider from \"./Chatbot/actionProvider\";\r\nimport Chatbot from \"react-chatbot-kit\";\r\nimport \"./index1.css\";\r\nimport styled from \"styled-components\";\r\nimport { useColorMode } from \"@chakra-ui/color-mode\";\r\n\r\n\r\nfunction Chat(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        // borderWidth=\"5px\"\r\n        // color=\"red\"\r\n        // bg=\"tomato\"\r\n        boxSize=\"sm\"\r\n        w=\"100%\"\r\n        h=\"80px\"\r\n        marginTop=\"120px\"\r\n      >\r\n        <Center>\r\n        <Heading\r\n          as=\"h1\"\r\n          size=\"xl\"\r\n          fontWeight=\"bold\"\r\n          textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n          color = {colorMode === \"light\" ? \"blue.900\" : \"white\"}\r\n        >\r\n          XYRON Telecommunication Chatbot\r\n        </Heading>\r\n        </Center>\r\n      </Box>\r\n      <Box>\r\n        <Flex\r\n          mt={-10}\r\n          align=\"center\"\r\n          justify={{ base: \"center\", md: \"space-around\", xl: \"space-between\" }}\r\n          direction={{ base: \"column-reverse\", md: \"row\" }}\r\n          wrap=\"no-wrap\"\r\n          minH=\"70vh\"\r\n          px={8}\r\n          mb={16}\r\n        >\r\n          <Stack\r\n            spacing={7}\r\n            w={{ base: \"80%\", md: \"40%\" }}\r\n            align={[\"center\", \"center\", \"flex-start\", \"flex-start\"]}\r\n          >\r\n            <Box w=\"500px\" mb={{ base: 12, md: 0 }}>\r\n              {/* TODO: Make this change every X secs */}\r\n              <Image src=\"../telecommunication/tel.png\" size=\"100%\" />\r\n            </Box>\r\n\r\n            <Heading\r\n              as=\"h3\"\r\n              size=\"sm\"\r\n              color=\"primary.800\"\r\n              opacity=\"0.8\"\r\n              fontWeight=\"normal\"\r\n              lineHeight={1.5}\r\n              textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n            >\r\n              This chatbot will let your works easy. You can recharge fast. You\r\n              can select packages whatever you want. Fast Responses.\r\n            </Heading>\r\n          </Stack>\r\n          <Box>\r\n            <Chatbot\r\n              config={config}\r\n              messageParser={MessageParser}\r\n              actionProvider={ActionProvider}\r\n            />\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  Button,\r\n  useColorMode,\r\n  IconButton,\r\n  useDisclosure,\r\n  ReactRouterLink,\r\n  Center,\r\n  Text,\r\n  Square,\r\n  VStack,\r\n  StackDivider,\r\n  Table,\r\n  Td,\r\n  Tr,\r\n  Thead,\r\n  Th,\r\n  Tbody,\r\n  TableCaption,\r\n  CircularProgress,\r\n  Badge,\r\n  Progress,\r\n  Divider,\r\n} from \"@chakra-ui/react\";\r\nimport { Avatar, AvatarBadge } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// sidebar nav config\r\n\r\nfunction Sidebar2(props) {\r\n  return (\r\n    <>\r\n      \r\n      <Box\r\n          width=\"30%\"\r\n          borderStyle=\"solid\"\r\n          // borderColor=\"gray.600\"\r\n          // borderWidth=\"5px\"\r\n          h=\"100%\"\r\n          bg=\"#363740\"\r\n        >\r\n          <Center mb=\"5px\" mt=\"30px\" paddingTop=\"30px\">\r\n            <Avatar bg=\"blue.500\">\r\n              <AvatarBadge boxSize=\"1.25em\" bg=\"green.500\" />\r\n            </Avatar>\r\n          </Center>\r\n          <Box h=\"50px\" mb=\"70px\">\r\n            <Center>\r\n              <Text style={{ textTransform: \"uppercase\" }}>\r\n                {/* {props.user.firstName} {props.user.lastName} */}\r\n              </Text>\r\n            </Center>\r\n\r\n            <Progress\r\n              colorScheme=\"green\"\r\n              size=\"xs\"\r\n              mr=\"25%\"\r\n              ml=\"25%\"\r\n              mb=\"8px\"\r\n              mt=\"8px\"\r\n              isIndeterminate\r\n            />\r\n            <Center mb=\"10px\">\r\n              <Badge variant=\"solid\" colorScheme=\"green\">\r\n                Online\r\n              </Badge>\r\n            </Center>\r\n          </Box>\r\n          <Box width=\"100%\" mt=\"30px\">\r\n            <VStack\r\n              divider={<StackDivider borderColor=\"gray.500\" />}\r\n              spacing={8}\r\n              align=\"stretch\"\r\n            >\r\n              {/* <Link as={ReactRouterLink} to=\"/\"> */}\r\n              <a href=\"http://localhost:3000/admin\"> \r\n              <Button\r\n                h=\"50px\"\r\n                w=\"100%\"\r\n                _hover={{\r\n                  background: \"black\",\r\n                  color: \"white\",\r\n                  transitionDuration: \"0.6s\",\r\n                }}\r\n                rounded=\"box\"\r\n                boxShadow=\"dark-lg\"\r\n                colorScheme=\"gray.600\"\r\n              >\r\n                <Center>Overview</Center>\r\n              </Button>\r\n              </a>\r\n              {/* </Link> */}\r\n\r\n              <a href=\"http://localhost:3000/rating\"> \r\n              <Button\r\n                h=\"50px\"\r\n                w=\"100%\"\r\n                _hover={{\r\n                  background: \"gray.800\",\r\n                  color: \"white\",\r\n                  transitionDuration: \"0.6s\",\r\n                }}\r\n                rounded=\"box\"\r\n                boxShadow=\"dark-lg\"\r\n                colorScheme=\"teal\"\r\n              >\r\n                Ratings\r\n              </Button>\r\n              </a>\r\n              {/* </Link> */}\r\n              <Button\r\n                h=\"50px\"\r\n                w=\"100%\"\r\n                _hover={{\r\n                  background: \"gray.800\",\r\n                  color: \"white\",\r\n                  transitionDuration: \"0.6s\",\r\n                }}\r\n                rounded=\"box\"\r\n                boxShadow=\"dark-lg\"\r\n                colorScheme=\"gray.600\"\r\n              >\r\n               \r\n              </Button>\r\n\r\n              <Divider orientation=\"horizontal\" />\r\n            </VStack>\r\n          </Box>\r\n        </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar2;\r\n","import { Avatar, AvatarBadge } from \"@chakra-ui/avatar\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport {\r\n  Badge,\r\n  Box,\r\n  Center,\r\n  Divider,\r\n  Flex,\r\n  Link,\r\n  StackDivider,\r\n  Text,\r\n  VStack,\r\n} from \"@chakra-ui/layout\";\r\nimport {\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\nTable\r\n} from \"@chakra-ui/react\"\r\nimport Axios from \"axios\";\r\nimport { Progress } from \"@chakra-ui/progress\";\r\nimport React, { useEffect } from \"react\";\r\nimport Sidebar2 from \"./Sidebar2\";\r\n// import Table from \"./Table\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nfunction Rating() {\r\n  // var feedbacks = JSON.parse(localStorage.getItem(\"feedbacks\"));\r\n  var feedbacks = []\r\n  var result = feedbacks.map((feedback, i) => {\r\n    return (\r\n      <Tr>\r\n        <Td>{i + 1}</Td>\r\n        <Td>{feedback.user_id}</Td>\r\n        <Td>{feedback.chatbot_type}</Td>\r\n        <Td>{feedback.rating}</Td>\r\n        <Td>{feedback.feedback}</Td>\r\n      </Tr>\r\n    );\r\n  });\r\n  \r\n  return (\r\n    <>\r\n      <Box\r\n        width=\"100%\"\r\n        // borderStyle=\"solid\"\r\n        // borderColor=\"gray.600\"\r\n        // borderWidth=\"5px\"\r\n        h=\"900px\"\r\n        mt=\"75px\"\r\n        position=\"absolute\"\r\n      >\r\n        <Sidebar2 />\r\n        <Flex\r\n          width=\"70%\"\r\n          ml=\"30%\"\r\n          borderStyle=\"solid\"\r\n          // borderColor=\"red\"\r\n          // borderWidth=\"5px\"\r\n          h=\"100%\"\r\n          position=\"relative\"\r\n          mt=\"-885px\"\r\n        >\r\n\r\n            <Flex mt=\"0%\" width=\"0%\" ml=\"0%\" bg=\"#F0F0F0\">\r\n            <Box\r\n    >\r\n      <Table variant=\"striped\" colorScheme=\"teal\" size=\"lg\" ml=\"135px\" mt=\"20px\">\r\n        <TableCaption>Feedbacks for chatbots</TableCaption>\r\n        <Thead>\r\n          <Tr>\r\n            <Th >Number</Th>\r\n            <Th >UserID</Th>\r\n            <Th >Chatbot Type</Th>\r\n            <Th >Rating</Th>\r\n            <Th >Feedback</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {result}\r\n        </Tbody>\r\n        <Tfoot>\r\n          <Tr>\r\n          <Th >Number</Th>\r\n            <Th >UserID</Th>\r\n            <Th >Chatbot Type</Th>\r\n            <Th >Rating</Th>\r\n            <Th >Feedback</Th>\r\n          </Tr>\r\n        </Tfoot>\r\n      </Table>\r\n      </Box>\r\n            </Flex>\r\n        </Flex>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport Rating from \"../../components/Admin/Ratings\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\n\r\nexport default function index() {\r\n  return (\r\n    <>\r\n      {/* <Box mt=\"200px\" borderWidth=\"5px\" borderColor=\"red\" h=\"600px\" w=\"100%\"> */}\r\n        <Rating />\r\n        {/* <Middle /> */}\r\n      {/* </Box> */}\r\n      {/* <Sidebar />  */}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  Button,\r\n  useColorMode,\r\n  IconButton,\r\n  useDisclosure,\r\n  ReactRouterLink,\r\n  Center,\r\n  Text,\r\n  Square,\r\n  VStack,\r\n  StackDivider,\r\n  Table,\r\n  Td,\r\n  Tr,\r\n  Thead,\r\n  Th,\r\n  Tbody,\r\n  TableCaption,\r\n  CircularProgress,\r\n  Badge,\r\n  Progress,\r\n  Divider,\r\n} from \"@chakra-ui/react\";\r\nimport { Avatar, AvatarBadge } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// sidebar nav config\r\n\r\nfunction Sidebar2(props) {\r\n  return (\r\n    <>\r\n      \r\n      <Box\r\n          width=\"30%\"\r\n          borderStyle=\"solid\"\r\n          // borderColor=\"gray.600\"\r\n          // borderWidth=\"5px\"\r\n          h=\"100%\"\r\n          bg=\"#363740\"\r\n        >\r\n          <Center mb=\"5px\" mt=\"30px\" paddingTop=\"40px\">\r\n            <Avatar bg=\"blue.500\">\r\n              <AvatarBadge boxSize=\"1.25em\" bg=\"green.500\" />\r\n            </Avatar>\r\n          </Center>\r\n          <Box h=\"50px\" mb=\"70px\">\r\n            <Center>\r\n              <Text style={{ textTransform: \"uppercase\" }}>\r\n                {/* {props.user.firstName} {props.user.lastName} */}\r\n              </Text>\r\n            </Center>\r\n\r\n            <Progress\r\n              colorScheme=\"green\"\r\n              size=\"xs\"\r\n              mr=\"25%\"\r\n              ml=\"25%\"\r\n              mb=\"8px\"\r\n              mt=\"8px\"\r\n              isIndeterminate\r\n            />\r\n            <Center mb=\"10px\">\r\n              <Badge variant=\"solid\" colorScheme=\"green\">\r\n                Online\r\n              </Badge>\r\n            </Center>\r\n          </Box>\r\n          <Box width=\"100%\" mt=\"30px\">\r\n            <VStack\r\n              divider={<StackDivider borderColor=\"gray.500\" />}\r\n              spacing={8}\r\n              align=\"stretch\"\r\n            >\r\n              {/* <Link as={ReactRouterLink} to=\"/\"> */}\r\n              <Button\r\n                h=\"50px\"\r\n                w=\"100%\"\r\n                _hover={{\r\n                  background: \"black\",\r\n                  color: \"white\",\r\n                  transitionDuration: \"0.6s\",\r\n                }}\r\n                rounded=\"box\"\r\n                boxShadow=\"dark-lg\"\r\n                colorScheme=\"teal\"\r\n              >\r\n                <Center>Overview</Center>\r\n              </Button>\r\n              {/* </Link> */}\r\n\r\n              <a href=\"http://localhost:3000/rating\"> \r\n              <Button\r\n                h=\"50px\"\r\n                w=\"100%\"\r\n                _hover={{\r\n                  background: \"gray.800\",\r\n                  color: \"white\",\r\n                  transitionDuration: \"0.6s\",\r\n                }}\r\n                rounded=\"box\"\r\n                boxShadow=\"dark-lg\"\r\n                colorScheme=\"gray.600\"\r\n              >\r\n                Ratings\r\n              </Button>\r\n              </a>\r\n              {/* </Link> */}\r\n              <Button\r\n                h=\"50px\"\r\n                w=\"100%\"\r\n                _hover={{\r\n                  background: \"gray.800\",\r\n                  color: \"white\",\r\n                  transitionDuration: \"0.6s\",\r\n                }}\r\n                rounded=\"box\"\r\n                boxShadow=\"dark-lg\"\r\n                colorScheme=\"gray.600\"\r\n              >\r\n               \r\n              </Button>\r\n\r\n              <Divider orientation=\"horizontal\" />\r\n            </VStack>\r\n          </Box>\r\n        </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar2;\r\n","import { Avatar, AvatarBadge } from \"@chakra-ui/avatar\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport {\r\n  Badge,\r\n  Box,\r\n  Center,\r\n  Divider,\r\n  Flex,\r\n  Grid,\r\n  Link,\r\n  StackDivider,\r\n  Text,\r\n  VStack,\r\n} from \"@chakra-ui/layout\";\r\nimport { Progress } from \"@chakra-ui/progress\";\r\nimport React from \"react\";\r\nimport Sidebar2 from \"./Sidebar1\";\r\nimport Table from \"./Table\";\r\nimport \"./Overview.css\";\r\nimport { useColorMode } from \"@chakra-ui/color-mode\";\r\nimport { Td, Tr } from \"@chakra-ui/table\";\r\nimport Axios from \"axios\";\r\n\r\n// import { Link } from \"react-router-dom\";\r\n\r\nfunction Rating() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  // Axios.get(\"http://127.0.0.1:5000/getFeedbacks\").then((response) => {\r\n  //   localStorage.setItem(\"feedbacks\", JSON.stringify(response.data.feedbacks));\r\n    \r\n  //   // localStorage.setItem(\"feedbacks2\", JSON.stringify(result));\r\n  // });\r\n  return (\r\n    <>\r\n      <Box\r\n        width=\"100%\"\r\n        // borderStyle=\"solid\"\r\n        // borderColor=\"gray.600\"\r\n        // borderWidth=\"5px\"\r\n        h=\"900px\"\r\n        mt=\"75px\"\r\n        position=\"absolute\"\r\n      >\r\n        <Sidebar2 />\r\n        <Flex\r\n          width=\"70%\"\r\n          ml=\"30%\"\r\n          borderStyle=\"solid\"\r\n          // borderColor=\"red\"\r\n          // borderWidth=\"5px\"\r\n          h=\"100%\"\r\n          position=\"relative\"\r\n          mt=\"-895px\"\r\n          bg=\"#F0F0F0\"\r\n        >\r\n        <img className=\"overview\" src=\"overview.png\" alt=\"Create Account\" />\r\n          <Grid templateColumns=\"repeat(2, 0fr)\" gap={6} mt =\"20px\">\r\n            <Box\r\n              width=\"300px\"\r\n              ml=\"40%\"\r\n              borderStyle=\"solid\"\r\n              borderColor=\"#F0F0F0\"\r\n              borderWidth=\"2px\"\r\n              h=\"150px\"\r\n              rounded=\"15px\"\r\n              bg=\"white\"\r\n            >\r\n              <Center mt= \"20px\">\r\n                <Text fontSize=\"3xl\" color=\"#999A9F\">Number of Users</Text>\r\n              </Center>\r\n              <Center mt=\"10px\">\r\n                <Text fontSize=\"3xl\" color=\"\" color = {colorMode === \"light\" ? \"#1A365D\" : \"black\"}>18</Text>\r\n              </Center>\r\n            </Box>\r\n            <Box\r\n              width=\"300px\"\r\n              ml=\"30%\"\r\n              borderStyle=\"solid\"\r\n              borderColor=\"#F0F0F0\"\r\n              borderWidth=\"2px\"\r\n              h=\"150px\"\r\n              rounded=\"15px\"\r\n              bg=\"white\"\r\n            >\r\n              <Center mt= \"20px\">\r\n                <Text fontSize=\"3xl\" color=\"#999A9F\">Your Name</Text>\r\n              </Center>\r\n              <Center mt=\"10px\">\r\n                {/* <Text fontSize=\"3xl\" color = {colorMode === \"light\" ? \"#1A365D\" : \"black\"} >{JSON.parse(localStorage.getItem(\"user\"))[\"first_name\"]}</Text> */}\r\n              </Center>\r\n            </Box>\r\n          </Grid>\r\n          {/* <Box\r\n            width=\"300px\"\r\n            ml=\"30%\"\r\n            borderStyle=\"solid\"\r\n            borderColor=\"red\"\r\n            borderWidth=\"5px\"\r\n            h=\"200px\"\r\n            > \r\n            \r\n            </Box> */}\r\n          <img className=\"form-img\" src=\"main1.png\" alt=\"Overview\" />\r\n          <img className=\"rectangle\" src=\"rectangle.png\" alt=\"Overview\" />\r\n        </Flex>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport Overview from \"../../components/Admin/Overview\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\n\r\nexport default function index() {\r\n  return (\r\n    <>\r\n      {/* <Box mt=\"200px\" borderWidth=\"5px\" borderColor=\"red\" h=\"600px\" w=\"100%\"> */}\r\n        <Overview />\r\n        {/* <Middle /> */}\r\n      {/* </Box> */}\r\n      {/* <Sidebar />  */}\r\n    </>\r\n  );\r\n}\r\n","import {\r\n    Container,\r\n    SimpleGrid,\r\n    Image,\r\n    Flex,\r\n    Heading,\r\n    Text,\r\n    Stack,\r\n    StackDivider,\r\n    Icon,\r\n    useColorModeValue,\r\n  } from '@chakra-ui/react';\r\n  import {\r\n    MdDirectionsTransit\r\n  } from 'react-icons/md';\r\n  import {\r\n    GiHealthNormal,\r\n    GiSatelliteCommunication\r\n  } from 'react-icons/gi';\r\n  import { ReactElement } from 'react';\r\n  \r\n  const Feature = ({ text, icon, iconBg }) => {\r\n    return (\r\n      <Stack direction={'row'} align={'center'}>\r\n        <Flex\r\n          w={8}\r\n          h={8}\r\n          align={'center'}\r\n          justify={'center'}\r\n          rounded={'full'}\r\n          bg={iconBg}>\r\n          {icon}\r\n        </Flex>\r\n        <Text fontWeight={600}>{text}</Text>\r\n      </Stack>\r\n    );\r\n  };\r\n  \r\n  export default function SplitWithImage() {\r\n    return (\r\n      <Container marginTop={'100px'} maxW={'5xl'} py={12}>\r\n        <SimpleGrid columns={{ base: 1, md: 2 }} spacing={10}>\r\n          <Stack spacing={4}>\r\n            <Text\r\n              textTransform={'uppercase'}\r\n              color={'blue.400'}\r\n              fontWeight={700}\r\n              fontSize={'m'}\r\n              bg={useColorModeValue('blue.50', 'blue.900')}\r\n              p={2}\r\n              alignSelf={'flex-start'}\r\n              rounded={'md'}>\r\n              About Us\r\n            </Text>\r\n            <Heading>A Social Inquiry Chatbot</Heading>\r\n            <Text color={'gray.500'} fontSize={'lg'}>\r\n              Xyron is a NLP based social inquiry chatbot. It was developed by three undergradutes at \r\n              University of Moratuwa, Sri Lanka. Xyron can understand your questions regarding the following three public service domains \r\n              and help you get answers. \r\n            </Text>\r\n            <Stack\r\n              spacing={4}\r\n              divider={\r\n                <StackDivider\r\n                  borderColor={useColorModeValue('gray.100', 'gray.700')}\r\n                />\r\n              }>\r\n              <Feature\r\n                icon={\r\n                  <Icon as={GiHealthNormal} color={'yellow.500'} w={5} h={5} />\r\n                }\r\n                iconBg={useColorModeValue('yellow.100', 'yellow.900')}\r\n                text={'Healthcare '}\r\n              />\r\n              <Feature\r\n                icon={<Icon as={GiSatelliteCommunication} color={'green.500'} w={5} h={5} />}\r\n                iconBg={useColorModeValue('green.100', 'green.900')}\r\n                text={'Telecommunication'}\r\n              />\r\n              <Feature\r\n                icon={\r\n                  <Icon as={MdDirectionsTransit} color={'purple.500'} w={5} h={5} />\r\n                }\r\n                iconBg={useColorModeValue('purple.100', 'purple.900')}\r\n                text={'Public Transportation'}\r\n              />\r\n            </Stack>\r\n          </Stack>\r\n          <Flex>\r\n            <Image\r\n              rounded={'md'}\r\n              alt={'feature image'}\r\n              src={\r\n                // '../aboutUs.jpg'\r\n                'https://spectrm.io/wp-content/uploads/2020/08/chatbot-marketing-illustration.jpg'\r\n              }\r\n              objectFit={'cover'}\r\n            />\r\n          </Flex>\r\n        </SimpleGrid>\r\n      </Container>\r\n    );\r\n  }","import {\r\n    Button,\r\n    Flex,\r\n    FormControl,\r\n    FormLabel,\r\n    Heading,\r\n    Input,\r\n    Stack,\r\n    useColorModeValue,\r\n  } from '@chakra-ui/react';\r\n  \r\n  export default function ContactUsForm() {\r\n\r\n    return (\r\n      <Flex\r\n        align={'center'}\r\n        justify={'center'}\r\n        bg={useColorModeValue('white', 'gray.800')}>\r\n        {/* <Heading ml={'30%'} mb={'15em'} mt={'1em'} textAlign={'ceneter'} lineHeight={1.1} fontSize={{ base: '2xl', md: '3xl' }}>\r\n            Contact Us\r\n        </Heading> */}\r\n        <Stack\r\n          spacing={4}\r\n          w={'full'}\r\n          maxW={'md'}\r\n          bg={useColorModeValue('white', 'gray.700')}\r\n          rounded={'xl'}\r\n          boxShadow={'lg'}\r\n          p={6}\r\n          my={12}>\r\n          <Heading lineHeight={1.1} fontSize={{ base: '2xl', md: '2xl' }}>\r\n            How Can We Help You?\r\n          </Heading>\r\n          <FormControl id=\"email\" isRequired>\r\n            <FormLabel>Email Address</FormLabel>\r\n            <Input\r\n              placeholder=\"your-email@example.com\"\r\n              _placeholder={{ color: 'gray.500' }}\r\n              type=\"email\"\r\n            />\r\n          </FormControl>\r\n          <FormControl id=\"password\" isRequired>\r\n            <FormLabel>Message</FormLabel>\r\n            <Input type=\"text\" />\r\n          </FormControl>\r\n          <Stack spacing={6}>\r\n            <Button\r\n              bg={'blue.400'}\r\n              color={'white'}\r\n              _hover={{\r\n                bg: 'blue.500',\r\n              }}>\r\n              Submit\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n      </Flex>\r\n    );\r\n  }","import BottomFooter from \"../../components/Footer/BottomFooter\";\r\nimport Footer from \"../../components/Sections/Footer\";\r\nimport WeAre from \"../../components/AboutUs/WeAre\";\r\nimport WhatWeDo from \"../../components/AboutUs/WhatWeDo\";\r\nimport ContactUs from \"../../components/AboutUs/ContactUs\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst AboutUs = () => {\r\n    \r\n    const { id } = useParams(); \r\n\r\n    return ( \r\n        <>\r\n            <WeAre />\r\n            {/* <WhatWeDo /> */}\r\n            <ContactUs />\r\n            <Footer />\r\n            {/* <BottomFooter /> */}\r\n        </>\r\n     );\r\n}\r\n \r\nexport default AboutUs;","import { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport Axios from \"axios\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport SideNav from \"./components/SideNav/SideNav\";\r\n\r\nimport SignIn from \"./pages/SignIn/index\";\r\nimport SignUp from \"./pages/SignUp/index\";\r\n// import DomainSelection from './pages/DomainSelection';\r\nimport Telecommunication from \"./pages/Telecommunication/indexHome\";\r\nimport Healthcare from \"./pages/Healthcare/indexHome\";\r\nimport Transport from \"./pages/Transportation/indexHome\";\r\nimport LandingPage from \"./pages/Landing/index\";\r\nimport DomaineSelection from \"./pages/DomainSelection/index\";\r\nimport Profile from \"./pages/Profile/index\";\r\nimport ChatbotHC from \"./pages/Healthcare/index\";\r\nimport ChatbotPT from \"./pages/Transportation/index\";\r\nimport ChatbotTC from \"./pages/Telecommunication/index\";\r\nimport Rating from \"./pages/Admin/rating\";\r\nimport Admin from \"./pages/Admin/index\";\r\nimport AboutUs from \"./pages/AboutUs/index\";\r\n// import Location from \"./pages/Location/CurrentLocation\";\r\n\r\nfunction App() {\r\n  const [auth, setAuth] = useState({ isLoggedIn: false, userID: 0 });\r\n  const [signInClicked, setSignInClicked] = useState(false);\r\n  // Axios.defaults.withCredentials = true;\r\n\r\n  useEffect(() => {\r\n    // Axios.defaults.withCredentials = true;\r\n    // console.log(\"check login called\")\r\n    // Axios.get(\"http://localhost:5000/checkLogin\").then((response) => {\r\n    //   console.log(\"check login axios\")\r\n    if (!!localStorage.access_token) {\r\n      setAuth({\r\n        isLoggedIn: true,\r\n        userID: JSON.parse(localStorage.getItem(\"user\"))[\"user_id\"],\r\n      });\r\n      console.log(auth);\r\n    } else {\r\n      console.log(\"sssseeee\");\r\n      // console.log(response.data.user)\r\n      setAuth({ isLoggedIn: false, userID: 0 });\r\n    }\r\n    // });\r\n  }, [!!localStorage.access_token]);\r\n  if (auth.isLoggedIn) {\r\n    if (auth.userID === 1) {\r\n      return (\r\n        <ChakraProvider>\r\n          <Router basename='/'>\r\n            <Navbar Auth={auth} />\r\n            <Switch>\r\n              {/* Common Routes */}\r\n              <Route path=\"/rating\" exact component={Rating} />\r\n              <Route path=\"/aboutus\" exact component={AboutUs} />\r\n              <Route path=\"/\" component={Admin} />\r\n            </Switch>\r\n          </Router>\r\n        </ChakraProvider>\r\n      );\r\n    } else {\r\n      return (\r\n        <ChakraProvider>\r\n          <Router basename='/'>\r\n            <Navbar Auth={auth} />\r\n            <Switch>\r\n              {/* Common Routes */}\r\n              <Route\r\n                path=\"/telecommunication\"\r\n                exact\r\n                component={Telecommunication}\r\n                exact\r\n              />\r\n              <Route path=\"/healthcare\" exact component={Healthcare} exact />\r\n              <Route path=\"/transport\" exact component={Transport} exact />\r\n              <Route path=\"/chatbothc\" exact component={ChatbotHC} />\r\n              <Route path=\"/chatbotpt\" exact component={ChatbotPT} />\r\n              <Route path=\"/chatbottc\" exact component={ChatbotTC} />\r\n              {/* <Route path=\"/profile/:id\" exact component={Profile}/> */}\r\n              <Route path=\"/profile\" exact component={Profile} />\r\n              <Route path=\"/rating\" exact component={Rating} />\r\n              <Route path=\"/admin\" exact component={Admin} />\r\n              <Route path=\"/aboutus\" exact component={AboutUs} />\r\n              {/* <Route path=\"/location\" exact component={Location} /> */}\r\n\r\n              <Route path=\"/\" component={DomaineSelection} />\r\n            </Switch>\r\n          </Router>\r\n        </ChakraProvider>\r\n      );\r\n    }\r\n  } else {\r\n    return (\r\n      <ChakraProvider>\r\n        <Router basename='/'>\r\n          <Navbar Auth={auth} />\r\n          {/* add authentication to side nav */}\r\n          {/* <SideNav /> */}\r\n          <Switch>\r\n            {/* Common Routes */}\r\n            <Route path=\"/signUp\" exact component={SignUp} />\r\n            <Route\r\n              path=\"/signin\"\r\n              exact\r\n              component={() => {\r\n                return <SignIn setSignInClicked={setSignInClicked} />;\r\n              }}\r\n            />\r\n            {/* <Route path=\"/domainselection\" exact component={DomainSelection} exact/> */}\r\n            <Route path=\"/aboutus\" exact component={AboutUs} />\r\n            <Route path=\"/\" component={LandingPage} />\r\n          </Switch>\r\n        </Router>\r\n      </ChakraProvider>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        user: null\r\n    },\r\n\r\n    reducers: {\r\n        login: (state, action) => {\r\n            state.user = action.payload;\r\n        },\r\n\r\n        logout: (state) => {\r\n            state.user = null;\r\n        }\r\n    }\r\n})\r\n//These are the actions\r\nexport const { login, logout } = userSlice.actions;\r\n\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from \"../store/slices/userSlice\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        user: userReducer,\r\n    },\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}